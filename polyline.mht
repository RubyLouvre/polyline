From: <ÓÉ Windows Internet Explorer 8 ±£´æ>
Subject: =?gb2312?B?zbzQzg==?=
Date: Mon, 5 Oct 2009 17:06:24 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_000F_01CA45DE.2B862BB0"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3138

This is a multi-part message in MIME format.

------=_NextPart_000_000F_01CA45DE.2B862BB0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://localhost:3000/

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML dir=3Dltr lang=3Dzh-CN><HEAD><TITLE>=E5=9B=BE=E5=BD=A2</TITLE>
<META charset=3Dutf-8>
<META content=3DIE=3D7 http-equiv=3DX-UA-Compatible>
<SCRIPT type=3Dtext/javascript=20
src=3D"http://localhost:3000/javascripts/prototype.js?1253859600"></SCRIP=
T>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://localhost:3000/javascripts/effects.js?1253859600"></SCRIPT>=


<SCRIPT type=3Dtext/javascript=20
src=3D"http://localhost:3000/javascripts/dragdrop.js?1253859600"></SCRIPT=
>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://localhost:3000/javascripts/controls.js?1253859600"></SCRIPT=
>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://localhost:3000/javascripts/raphael.js?1253952080"></SCRIPT>=


<SCRIPT type=3Dtext/javascript=20
src=3D"http://localhost:3000/javascripts/application.js?1253859600"></SCR=
IPT>

<STYLE type=3Dtext/css></STYLE>

<SCRIPT type=3Dtext/javascript charset=3Dutf-8>=0A=
      Event.observe(window,"load",function(){=0A=
        //=E6=94=B6=E9=9B=86=E6=95=B0=E6=8D=AE=0A=
        var dates =3D [],=0A=
        scores =3D [];=0A=
        //X=E8=BD=B4=E6=95=B0=E5=AD=97=0A=
        $$("#date td").each(function(el) {=0A=
          =
dates.push($(el).innerHTML.replace(/\./,"=E6=9C=88")+"=E6=97=A5");=0A=
        });=0A=
        //tooltip=E9=87=8C=E7=9A=84=E7=82=B9=E5=87=BB=E6=95=B0=0A=
        $$("#score td").each(function(el) {=0A=
          scores.push($(el).innerHTML);=0A=
        });=0A=
        $('data').hide();=0A=
        var width =3D 800,=0A=
        height =3D 300,=0A=
        marginleft =3D 25,=0A=
        margintop =3D 25,=0A=
        marginbottom =3D 25;=0A=
        var paper =3D Raphael("holder", width, height);=0A=
        paper.rect(0, 0, 798, 298, =
10).attr({fill:"#FBFBEA",stroke:"#000","stroke-width":"1px"});=0A=
        paper.drawGrid(marginleft, =
margintop,700,height-margintop-marginbottom, 8,10,"#C0C0C0");=0A=
        var path =3D paper.path().attr({stroke: "#FBA430", =
"stroke-width": 2, "stroke-linejoin": "round"}),=0A=
        txt =3D {font: '12px Fontin-Sans, Arial', fill: "#000"},=0A=
        label =3D paper.text(60, 10, "100").attr(txt).hide(),=0A=
        count =3D scores.length,=0A=
        cellwidth =3D (700/ (count-1)).toFixed(2),=0A=
        cellheight =3D (height-margintop-marginbottom)/10,=0A=
        frame =3D paper.rect(10, 10, 100, 40, 5).attr({fill: "#D5F3F4", =
stroke: "#fff", "stroke-width": 2}).hide(),=0A=
        shadow =3D paper.path().attr({stroke: "none", opacity: .3, fill: =
"#FBA430"}).moveTo(marginleft, height - marginbottom);=0A=
        //=E7=BB=98=E5=88=B6Y=E8=BD=B4=E7=9A=84=E5=88=BB=E5=BA=A6=0A=
        for(var i =3D 0;i<10;i++){=0A=
          paper.text(marginleft-10 ,margintop + cellheight * =
i,100-10*i).attr({fill:"#683FEC"});=0A=
        }=0A=
        for (var i =3D 0; i < count; i++) {=0A=
          =
//=E7=A1=AE=E5=AE=9A=E6=AF=8F=E4=B8=AA=E7=82=B9=E7=9A=84=E5=9D=90=E6=A0=87=0A=
          var x =3D Math.round(marginleft + cellwidth * i),=0A=
          y =3D Math.round(height - marginbottom - (scores[i]* =
cellheight /10));=0A=
          path[i =3D=3D 0 ? "moveTo" : "cplineTo"](x, y, =
10);//=E7=94=BB=E5=BC=A7=E7=BA=BF=0A=
          shadow[i =3D=3D 0 ? "lineTo" : "cplineTo"](x, y, =
10);//=E7=94=BB=E5=87=BA=E9=98=B4=E5=BD=B1=E5=8C=BA=0A=
          var dot =3D paper.circle(x, y, 4).attr({fill: "#FBA430", =
stroke: "#fff","stroke-width":2});//=E7=94=BB=E7=82=B9=0A=
          var score =3D scores[i];=0A=
          //=E7=BB=98=E5=88=B6X=E8=BD=B4=E7=9A=84=E5=88=BB=E5=BA=A6=0A=
          paper.text(x, height-10, i+1).attr({fill:"#683FEC"});=0A=
          (function(x,y,date,dot,score){=0A=
            dot.mouseover(function(){=0A=
              var newcoord =3D {x: +x + 7.5, y: y - 19};=0A=
              if (newcoord.x + 100 > width) {=0A=
                newcoord.x -=3D 114;=0A=
              }=0A=
              frame.show().animate({x: newcoord.x, y: newcoord.y}, 300);=0A=
              label.attr({text: date+" "+score }).show().animate({x: =
+newcoord.x + 50, y: +newcoord.y + 18}, 200);=0A=
              this.attr({stroke: "#FBA430"});=0A=
            });=0A=
            dot.mouseout(function(){=0A=
              this.attr({stroke: "#fff"});=0A=
            });=0A=
          })(x,y,dates[i],dot,score)=0A=
        }=0A=
        shadow.lineTo(x, height - marginbottom).andClose();=0A=
        frame.toFront();=0A=
        label.toFront();=0A=
      });=0A=
    </SCRIPT>

<META name=3DGENERATOR content=3D"MSHTML 8.00.6001.18372"></HEAD>
<BODY>
<DIV id=3Dholder></DIV>
<TABLE id=3Ddata>
  <TBODY>
  <TR id=3Dscore>
    <TD>80</TD>
    <TD>25</TD>
    <TD>27</TD>
    <TD>25</TD>
    <TD>54</TD>
    <TD>59</TD>
    <TD>79</TD>
    <TD>47</TD>
    <TD>27</TD>
    <TD>44</TD>
    <TD>70</TD>
    <TD>51</TD>
    <TD>56</TD>
    <TD>83</TD>
    <TD>12</TD>
    <TD>95</TD>
    <TD>52</TD>
    <TD>12</TD>
    <TD>40</TD>
    <TD>8</TD>
    <TD>60</TD>
    <TD>29</TD>
    <TD>7</TD>
    <TD>33</TD></TR>
  <TR id=3Ddate>
    <TD>1.1</TD>
    <TD>1.2</TD>
    <TD>1.3</TD>
    <TD>1.4</TD>
    <TD>1.5</TD>
    <TD>1.6</TD>
    <TD>1.7</TD>
    <TD>1.8</TD>
    <TD>2.1</TD>
    <TD>2.2</TD>
    <TD>2.3</TD>
    <TD>2.4</TD>
    <TD>2.5</TD>
    <TD>2.6</TD>
    <TD>2.7</TD>
    <TD>2.8</TD>
    <TD>3.1</TD>
    <TD>3.2</TD>
    <TD>3.3</TD>
    <TD>3.4</TD>
    <TD>3.5</TD>
    <TD>3.6</TD>
    <TD>3.7</TD>
    <TD>3.8</TD></TR></TBODY></TABLE></BODY></HTML>

------=_NextPart_000_000F_01CA45DE.2B862BB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://localhost:3000/javascripts/prototype.js?1253859600

/*  Prototype JavaScript framework, version 1.6.0.3=0A=
 *  (c) 2005-2008 Sam Stephenson=0A=
 *=0A=
 *  Prototype is freely distributable under the terms of an MIT-style =
license.=0A=
 *  For details, see the Prototype web site: http://www.prototypejs.org/=0A=
 *=0A=
 =
*------------------------------------------------------------------------=
--*/=0A=
=0A=
var Prototype =3D {=0A=
  Version: '1.6.0.3',=0A=
=0A=
  Browser: {=0A=
    IE:     !!(window.attachEvent &&=0A=
      navigator.userAgent.indexOf('Opera') =3D=3D=3D -1),=0A=
    Opera:  navigator.userAgent.indexOf('Opera') > -1,=0A=
    WebKit: navigator.userAgent.indexOf('AppleWebKit/') > -1,=0A=
    Gecko:  navigator.userAgent.indexOf('Gecko') > -1 &&=0A=
      navigator.userAgent.indexOf('KHTML') =3D=3D=3D -1,=0A=
    MobileSafari: !!navigator.userAgent.match(/Apple.*Mobile.*Safari/)=0A=
  },=0A=
=0A=
  BrowserFeatures: {=0A=
    XPath: !!document.evaluate,=0A=
    SelectorsAPI: !!document.querySelector,=0A=
    ElementExtensions: !!window.HTMLElement,=0A=
    SpecificElementExtensions:=0A=
      document.createElement('div')['__proto__'] &&=0A=
      document.createElement('div')['__proto__'] !=3D=3D=0A=
        document.createElement('form')['__proto__']=0A=
  },=0A=
=0A=
  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',=0A=
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,=0A=
=0A=
  emptyFunction: function() { },=0A=
  K: function(x) { return x }=0A=
};=0A=
=0A=
if (Prototype.Browser.MobileSafari)=0A=
  Prototype.BrowserFeatures.SpecificElementExtensions =3D false;=0A=
=0A=
=0A=
/* Based on Alex Arnell's inheritance implementation. */=0A=
var Class =3D {=0A=
  create: function() {=0A=
    var parent =3D null, properties =3D $A(arguments);=0A=
    if (Object.isFunction(properties[0]))=0A=
      parent =3D properties.shift();=0A=
=0A=
    function klass() {=0A=
      this.initialize.apply(this, arguments);=0A=
    }=0A=
=0A=
    Object.extend(klass, Class.Methods);=0A=
    klass.superclass =3D parent;=0A=
    klass.subclasses =3D [];=0A=
=0A=
    if (parent) {=0A=
      var subclass =3D function() { };=0A=
      subclass.prototype =3D parent.prototype;=0A=
      klass.prototype =3D new subclass;=0A=
      parent.subclasses.push(klass);=0A=
    }=0A=
=0A=
    for (var i =3D 0; i < properties.length; i++)=0A=
      klass.addMethods(properties[i]);=0A=
=0A=
    if (!klass.prototype.initialize)=0A=
      klass.prototype.initialize =3D Prototype.emptyFunction;=0A=
=0A=
    klass.prototype.constructor =3D klass;=0A=
=0A=
    return klass;=0A=
  }=0A=
};=0A=
=0A=
Class.Methods =3D {=0A=
  addMethods: function(source) {=0A=
    var ancestor   =3D this.superclass && this.superclass.prototype;=0A=
    var properties =3D Object.keys(source);=0A=
=0A=
    if (!Object.keys({ toString: true }).length)=0A=
      properties.push("toString", "valueOf");=0A=
=0A=
    for (var i =3D 0, length =3D properties.length; i < length; i++) {=0A=
      var property =3D properties[i], value =3D source[property];=0A=
      if (ancestor && Object.isFunction(value) &&=0A=
          value.argumentNames().first() =3D=3D "$super") {=0A=
        var method =3D value;=0A=
        value =3D (function(m) {=0A=
          return function() { return ancestor[m].apply(this, arguments) =
};=0A=
        })(property).wrap(method);=0A=
=0A=
        value.valueOf =3D method.valueOf.bind(method);=0A=
        value.toString =3D method.toString.bind(method);=0A=
      }=0A=
      this.prototype[property] =3D value;=0A=
    }=0A=
=0A=
    return this;=0A=
  }=0A=
};=0A=
=0A=
var Abstract =3D { };=0A=
=0A=
Object.extend =3D function(destination, source) {=0A=
  for (var property in source)=0A=
    destination[property] =3D source[property];=0A=
  return destination;=0A=
};=0A=
=0A=
Object.extend(Object, {=0A=
  inspect: function(object) {=0A=
    try {=0A=
      if (Object.isUndefined(object)) return 'undefined';=0A=
      if (object =3D=3D=3D null) return 'null';=0A=
      return object.inspect ? object.inspect() : String(object);=0A=
    } catch (e) {=0A=
      if (e instanceof RangeError) return '...';=0A=
      throw e;=0A=
    }=0A=
  },=0A=
=0A=
  toJSON: function(object) {=0A=
    var type =3D typeof object;=0A=
    switch (type) {=0A=
      case 'undefined':=0A=
      case 'function':=0A=
      case 'unknown': return;=0A=
      case 'boolean': return object.toString();=0A=
    }=0A=
=0A=
    if (object =3D=3D=3D null) return 'null';=0A=
    if (object.toJSON) return object.toJSON();=0A=
    if (Object.isElement(object)) return;=0A=
=0A=
    var results =3D [];=0A=
    for (var property in object) {=0A=
      var value =3D Object.toJSON(object[property]);=0A=
      if (!Object.isUndefined(value))=0A=
        results.push(property.toJSON() + ': ' + value);=0A=
    }=0A=
=0A=
    return '{' + results.join(', ') + '}';=0A=
  },=0A=
=0A=
  toQueryString: function(object) {=0A=
    return $H(object).toQueryString();=0A=
  },=0A=
=0A=
  toHTML: function(object) {=0A=
    return object && object.toHTML ? object.toHTML() : =
String.interpret(object);=0A=
  },=0A=
=0A=
  keys: function(object) {=0A=
    var keys =3D [];=0A=
    for (var property in object)=0A=
      keys.push(property);=0A=
    return keys;=0A=
  },=0A=
=0A=
  values: function(object) {=0A=
    var values =3D [];=0A=
    for (var property in object)=0A=
      values.push(object[property]);=0A=
    return values;=0A=
  },=0A=
=0A=
  clone: function(object) {=0A=
    return Object.extend({ }, object);=0A=
  },=0A=
=0A=
  isElement: function(object) {=0A=
    return !!(object && object.nodeType =3D=3D 1);=0A=
  },=0A=
=0A=
  isArray: function(object) {=0A=
    return object !=3D null && typeof object =3D=3D "object" &&=0A=
      'splice' in object && 'join' in object;=0A=
  },=0A=
=0A=
  isHash: function(object) {=0A=
    return object instanceof Hash;=0A=
  },=0A=
=0A=
  isFunction: function(object) {=0A=
    return typeof object =3D=3D "function";=0A=
  },=0A=
=0A=
  isString: function(object) {=0A=
    return typeof object =3D=3D "string";=0A=
  },=0A=
=0A=
  isNumber: function(object) {=0A=
    return typeof object =3D=3D "number";=0A=
  },=0A=
=0A=
  isUndefined: function(object) {=0A=
    return typeof object =3D=3D "undefined";=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Function.prototype, {=0A=
  argumentNames: function() {=0A=
    var names =3D =
this.toString().match(/^[\s\(]*function[^(]*\(([^\)]*)\)/)[1]=0A=
      .replace(/\s+/g, '').split(',');=0A=
    return names.length =3D=3D 1 && !names[0] ? [] : names;=0A=
  },=0A=
=0A=
  bind: function() {=0A=
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return =
this;=0A=
    var __method =3D this, args =3D $A(arguments), object =3D =
args.shift();=0A=
    return function() {=0A=
      return __method.apply(object, args.concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  bindAsEventListener: function() {=0A=
    var __method =3D this, args =3D $A(arguments), object =3D =
args.shift();=0A=
    return function(event) {=0A=
      return __method.apply(object, [event || =
window.event].concat(args));=0A=
    }=0A=
  },=0A=
=0A=
  curry: function() {=0A=
    if (!arguments.length) return this;=0A=
    var __method =3D this, args =3D $A(arguments);=0A=
    return function() {=0A=
      return __method.apply(this, args.concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  delay: function() {=0A=
    var __method =3D this, args =3D $A(arguments), timeout =3D =
args.shift() * 1000;=0A=
    return window.setTimeout(function() {=0A=
      return __method.apply(__method, args);=0A=
    }, timeout);=0A=
  },=0A=
=0A=
  defer: function() {=0A=
    var args =3D [0.01].concat($A(arguments));=0A=
    return this.delay.apply(this, args);=0A=
  },=0A=
=0A=
  wrap: function(wrapper) {=0A=
    var __method =3D this;=0A=
    return function() {=0A=
      return wrapper.apply(this, =
[__method.bind(this)].concat($A(arguments)));=0A=
    }=0A=
  },=0A=
=0A=
  methodize: function() {=0A=
    if (this._methodized) return this._methodized;=0A=
    var __method =3D this;=0A=
    return this._methodized =3D function() {=0A=
      return __method.apply(null, [this].concat($A(arguments)));=0A=
    };=0A=
  }=0A=
});=0A=
=0A=
Date.prototype.toJSON =3D function() {=0A=
  return '"' + this.getUTCFullYear() + '-' +=0A=
    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +=0A=
    this.getUTCDate().toPaddedString(2) + 'T' +=0A=
    this.getUTCHours().toPaddedString(2) + ':' +=0A=
    this.getUTCMinutes().toPaddedString(2) + ':' +=0A=
    this.getUTCSeconds().toPaddedString(2) + 'Z"';=0A=
};=0A=
=0A=
var Try =3D {=0A=
  these: function() {=0A=
    var returnValue;=0A=
=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      var lambda =3D arguments[i];=0A=
      try {=0A=
        returnValue =3D lambda();=0A=
        break;=0A=
      } catch (e) { }=0A=
    }=0A=
=0A=
    return returnValue;=0A=
  }=0A=
};=0A=
=0A=
RegExp.prototype.match =3D RegExp.prototype.test;=0A=
=0A=
RegExp.escape =3D function(str) {=0A=
  return String(str).replace(/([.*+?^=3D!:${}()|[\]\/\\])/g, '\\$1');=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var PeriodicalExecuter =3D Class.create({=0A=
  initialize: function(callback, frequency) {=0A=
    this.callback =3D callback;=0A=
    this.frequency =3D frequency;=0A=
    this.currentlyExecuting =3D false;=0A=
=0A=
    this.registerCallback();=0A=
  },=0A=
=0A=
  registerCallback: function() {=0A=
    this.timer =3D setInterval(this.onTimerEvent.bind(this), =
this.frequency * 1000);=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    this.callback(this);=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    if (!this.timer) return;=0A=
    clearInterval(this.timer);=0A=
    this.timer =3D null;=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    if (!this.currentlyExecuting) {=0A=
      try {=0A=
        this.currentlyExecuting =3D true;=0A=
        this.execute();=0A=
      } finally {=0A=
        this.currentlyExecuting =3D false;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
Object.extend(String, {=0A=
  interpret: function(value) {=0A=
    return value =3D=3D null ? '' : String(value);=0A=
  },=0A=
  specialChar: {=0A=
    '\b': '\\b',=0A=
    '\t': '\\t',=0A=
    '\n': '\\n',=0A=
    '\f': '\\f',=0A=
    '\r': '\\r',=0A=
    '\\': '\\\\'=0A=
  }=0A=
});=0A=
=0A=
Object.extend(String.prototype, {=0A=
  gsub: function(pattern, replacement) {=0A=
    var result =3D '', source =3D this, match;=0A=
    replacement =3D arguments.callee.prepareReplacement(replacement);=0A=
=0A=
    while (source.length > 0) {=0A=
      if (match =3D source.match(pattern)) {=0A=
        result +=3D source.slice(0, match.index);=0A=
        result +=3D String.interpret(replacement(match));=0A=
        source  =3D source.slice(match.index + match[0].length);=0A=
      } else {=0A=
        result +=3D source, source =3D '';=0A=
      }=0A=
    }=0A=
    return result;=0A=
  },=0A=
=0A=
  sub: function(pattern, replacement, count) {=0A=
    replacement =3D this.gsub.prepareReplacement(replacement);=0A=
    count =3D Object.isUndefined(count) ? 1 : count;=0A=
=0A=
    return this.gsub(pattern, function(match) {=0A=
      if (--count < 0) return match[0];=0A=
      return replacement(match);=0A=
    });=0A=
  },=0A=
=0A=
  scan: function(pattern, iterator) {=0A=
    this.gsub(pattern, iterator);=0A=
    return String(this);=0A=
  },=0A=
=0A=
  truncate: function(length, truncation) {=0A=
    length =3D length || 30;=0A=
    truncation =3D Object.isUndefined(truncation) ? '...' : truncation;=0A=
    return this.length > length ?=0A=
      this.slice(0, length - truncation.length) + truncation : =
String(this);=0A=
  },=0A=
=0A=
  strip: function() {=0A=
    return this.replace(/^\s+/, '').replace(/\s+$/, '');=0A=
  },=0A=
=0A=
  stripTags: function() {=0A=
    return this.replace(/<\/?[^>]+>/gi, '');=0A=
  },=0A=
=0A=
  stripScripts: function() {=0A=
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');=0A=
  },=0A=
=0A=
  extractScripts: function() {=0A=
    var matchAll =3D new RegExp(Prototype.ScriptFragment, 'img');=0A=
    var matchOne =3D new RegExp(Prototype.ScriptFragment, 'im');=0A=
    return (this.match(matchAll) || []).map(function(scriptTag) {=0A=
      return (scriptTag.match(matchOne) || ['', ''])[1];=0A=
    });=0A=
  },=0A=
=0A=
  evalScripts: function() {=0A=
    return this.extractScripts().map(function(script) { return =
eval(script) });=0A=
  },=0A=
=0A=
  escapeHTML: function() {=0A=
    var self =3D arguments.callee;=0A=
    self.text.data =3D this;=0A=
    return self.div.innerHTML;=0A=
  },=0A=
=0A=
  unescapeHTML: function() {=0A=
    var div =3D new Element('div');=0A=
    div.innerHTML =3D this.stripTags();=0A=
    return div.childNodes[0] ? (div.childNodes.length > 1 ?=0A=
      $A(div.childNodes).inject('', function(memo, node) { return =
memo+node.nodeValue }) :=0A=
      div.childNodes[0].nodeValue) : '';=0A=
  },=0A=
=0A=
  toQueryParams: function(separator) {=0A=
    var match =3D this.strip().match(/([^?#]*)(#.*)?$/);=0A=
    if (!match) return { };=0A=
=0A=
    return match[1].split(separator || '&').inject({ }, function(hash, =
pair) {=0A=
      if ((pair =3D pair.split('=3D'))[0]) {=0A=
        var key =3D decodeURIComponent(pair.shift());=0A=
        var value =3D pair.length > 1 ? pair.join('=3D') : pair[0];=0A=
        if (value !=3D undefined) value =3D decodeURIComponent(value);=0A=
=0A=
        if (key in hash) {=0A=
          if (!Object.isArray(hash[key])) hash[key] =3D [hash[key]];=0A=
          hash[key].push(value);=0A=
        }=0A=
        else hash[key] =3D value;=0A=
      }=0A=
      return hash;=0A=
    });=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.split('');=0A=
  },=0A=
=0A=
  succ: function() {=0A=
    return this.slice(0, this.length - 1) +=0A=
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);=0A=
  },=0A=
=0A=
  times: function(count) {=0A=
    return count < 1 ? '' : new Array(count + 1).join(this);=0A=
  },=0A=
=0A=
  camelize: function() {=0A=
    var parts =3D this.split('-'), len =3D parts.length;=0A=
    if (len =3D=3D 1) return parts[0];=0A=
=0A=
    var camelized =3D this.charAt(0) =3D=3D '-'=0A=
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)=0A=
      : parts[0];=0A=
=0A=
    for (var i =3D 1; i < len; i++)=0A=
      camelized +=3D parts[i].charAt(0).toUpperCase() + =
parts[i].substring(1);=0A=
=0A=
    return camelized;=0A=
  },=0A=
=0A=
  capitalize: function() {=0A=
    return this.charAt(0).toUpperCase() + =
this.substring(1).toLowerCase();=0A=
  },=0A=
=0A=
  underscore: function() {=0A=
    return this.gsub(/::/, =
'/').gsub(/([A-Z]+)([A-Z][a-z])/,'#{1}_#{2}').gsub(/([a-z\d])([A-Z])/,'#{=
1}_#{2}').gsub(/-/,'_').toLowerCase();=0A=
  },=0A=
=0A=
  dasherize: function() {=0A=
    return this.gsub(/_/,'-');=0A=
  },=0A=
=0A=
  inspect: function(useDoubleQuotes) {=0A=
    var escapedString =3D this.gsub(/[\x00-\x1f\\]/, function(match) {=0A=
      var character =3D String.specialChar[match[0]];=0A=
      return character ? character : '\\u00' + =
match[0].charCodeAt().toPaddedString(2, 16);=0A=
    });=0A=
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') =
+ '"';=0A=
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    return this.inspect(true);=0A=
  },=0A=
=0A=
  unfilterJSON: function(filter) {=0A=
    return this.sub(filter || Prototype.JSONFilter, '#{1}');=0A=
  },=0A=
=0A=
  isJSON: function() {=0A=
    var str =3D this;=0A=
    if (str.blank()) return false;=0A=
    str =3D this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');=0A=
    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);=0A=
  },=0A=
=0A=
  evalJSON: function(sanitize) {=0A=
    var json =3D this.unfilterJSON();=0A=
    try {=0A=
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');=0A=
    } catch (e) { }=0A=
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());=0A=
  },=0A=
=0A=
  include: function(pattern) {=0A=
    return this.indexOf(pattern) > -1;=0A=
  },=0A=
=0A=
  startsWith: function(pattern) {=0A=
    return this.indexOf(pattern) =3D=3D=3D 0;=0A=
  },=0A=
=0A=
  endsWith: function(pattern) {=0A=
    var d =3D this.length - pattern.length;=0A=
    return d >=3D 0 && this.lastIndexOf(pattern) =3D=3D=3D d;=0A=
  },=0A=
=0A=
  empty: function() {=0A=
    return this =3D=3D '';=0A=
  },=0A=
=0A=
  blank: function() {=0A=
    return /^\s*$/.test(this);=0A=
  },=0A=
=0A=
  interpolate: function(object, pattern) {=0A=
    return new Template(this, pattern).evaluate(object);=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.WebKit || Prototype.Browser.IE) =
Object.extend(String.prototype, {=0A=
  escapeHTML: function() {=0A=
    return =
this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');=0A=
  },=0A=
  unescapeHTML: function() {=0A=
    return =
this.stripTags().replace(/&amp;/g,'&').replace(/&lt;/g,'<').replace(/&gt;=
/g,'>');=0A=
  }=0A=
});=0A=
=0A=
String.prototype.gsub.prepareReplacement =3D function(replacement) {=0A=
  if (Object.isFunction(replacement)) return replacement;=0A=
  var template =3D new Template(replacement);=0A=
  return function(match) { return template.evaluate(match) };=0A=
};=0A=
=0A=
String.prototype.parseQuery =3D String.prototype.toQueryParams;=0A=
=0A=
Object.extend(String.prototype.escapeHTML, {=0A=
  div:  document.createElement('div'),=0A=
  text: document.createTextNode('')=0A=
});=0A=
=0A=
String.prototype.escapeHTML.div.appendChild(String.prototype.escapeHTML.t=
ext);=0A=
=0A=
var Template =3D Class.create({=0A=
  initialize: function(template, pattern) {=0A=
    this.template =3D template.toString();=0A=
    this.pattern =3D pattern || Template.Pattern;=0A=
  },=0A=
=0A=
  evaluate: function(object) {=0A=
    if (Object.isFunction(object.toTemplateReplacements))=0A=
      object =3D object.toTemplateReplacements();=0A=
=0A=
    return this.template.gsub(this.pattern, function(match) {=0A=
      if (object =3D=3D null) return '';=0A=
=0A=
      var before =3D match[1] || '';=0A=
      if (before =3D=3D '\\') return match[2];=0A=
=0A=
      var ctx =3D object, expr =3D match[3];=0A=
      var pattern =3D /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;=0A=
      match =3D pattern.exec(expr);=0A=
      if (match =3D=3D null) return before;=0A=
=0A=
      while (match !=3D null) {=0A=
        var comp =3D match[1].startsWith('[') ? match[2].gsub('\\\\]', =
']') : match[1];=0A=
        ctx =3D ctx[comp];=0A=
        if (null =3D=3D ctx || '' =3D=3D match[3]) break;=0A=
        expr =3D expr.substring('[' =3D=3D match[3] ? match[1].length : =
match[0].length);=0A=
        match =3D pattern.exec(expr);=0A=
      }=0A=
=0A=
      return before + String.interpret(ctx);=0A=
    });=0A=
  }=0A=
});=0A=
Template.Pattern =3D /(^|.|\r|\n)(#\{(.*?)\})/;=0A=
=0A=
var $break =3D { };=0A=
=0A=
var Enumerable =3D {=0A=
  each: function(iterator, context) {=0A=
    var index =3D 0;=0A=
    try {=0A=
      this._each(function(value) {=0A=
        iterator.call(context, value, index++);=0A=
      });=0A=
    } catch (e) {=0A=
      if (e !=3D $break) throw e;=0A=
    }=0A=
    return this;=0A=
  },=0A=
=0A=
  eachSlice: function(number, iterator, context) {=0A=
    var index =3D -number, slices =3D [], array =3D this.toArray();=0A=
    if (number < 1) return array;=0A=
    while ((index +=3D number) < array.length)=0A=
      slices.push(array.slice(index, index+number));=0A=
    return slices.collect(iterator, context);=0A=
  },=0A=
=0A=
  all: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D true;=0A=
    this.each(function(value, index) {=0A=
      result =3D result && !!iterator.call(context, value, index);=0A=
      if (!result) throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  any: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D false;=0A=
    this.each(function(value, index) {=0A=
      if (result =3D !!iterator.call(context, value, index))=0A=
        throw $break;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  collect: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  detect: function(iterator, context) {=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index)) {=0A=
        result =3D value;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  findAll: function(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  grep: function(filter, iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
=0A=
    if (Object.isString(filter))=0A=
      filter =3D new RegExp(filter);=0A=
=0A=
    this.each(function(value, index) {=0A=
      if (filter.match(value))=0A=
        results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  include: function(object) {=0A=
    if (Object.isFunction(this.indexOf))=0A=
      if (this.indexOf(object) !=3D -1) return true;=0A=
=0A=
    var found =3D false;=0A=
    this.each(function(value) {=0A=
      if (value =3D=3D object) {=0A=
        found =3D true;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return found;=0A=
  },=0A=
=0A=
  inGroupsOf: function(number, fillWith) {=0A=
    fillWith =3D Object.isUndefined(fillWith) ? null : fillWith;=0A=
    return this.eachSlice(number, function(slice) {=0A=
      while(slice.length < number) slice.push(fillWith);=0A=
      return slice;=0A=
    });=0A=
  },=0A=
=0A=
  inject: function(memo, iterator, context) {=0A=
    this.each(function(value, index) {=0A=
      memo =3D iterator.call(context, memo, value, index);=0A=
    });=0A=
    return memo;=0A=
  },=0A=
=0A=
  invoke: function(method) {=0A=
    var args =3D $A(arguments).slice(1);=0A=
    return this.map(function(value) {=0A=
      return value[method].apply(value, args);=0A=
    });=0A=
  },=0A=
=0A=
  max: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value >=3D result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  min: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value < result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  },=0A=
=0A=
  partition: function(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var trues =3D [], falses =3D [];=0A=
    this.each(function(value, index) {=0A=
      (iterator.call(context, value, index) ?=0A=
        trues : falses).push(value);=0A=
    });=0A=
    return [trues, falses];=0A=
  },=0A=
=0A=
  pluck: function(property) {=0A=
    var results =3D [];=0A=
    this.each(function(value) {=0A=
      results.push(value[property]);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  reject: function(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (!iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  },=0A=
=0A=
  sortBy: function(iterator, context) {=0A=
    return this.map(function(value, index) {=0A=
      return {=0A=
        value: value,=0A=
        criteria: iterator.call(context, value, index)=0A=
      };=0A=
    }).sort(function(left, right) {=0A=
      var a =3D left.criteria, b =3D right.criteria;=0A=
      return a < b ? -1 : a > b ? 1 : 0;=0A=
    }).pluck('value');=0A=
  },=0A=
=0A=
  toArray: function() {=0A=
    return this.map();=0A=
  },=0A=
=0A=
  zip: function() {=0A=
    var iterator =3D Prototype.K, args =3D $A(arguments);=0A=
    if (Object.isFunction(args.last()))=0A=
      iterator =3D args.pop();=0A=
=0A=
    var collections =3D [this].concat(args).map($A);=0A=
    return this.map(function(value, index) {=0A=
      return iterator(collections.pluck(index));=0A=
    });=0A=
  },=0A=
=0A=
  size: function() {=0A=
    return this.toArray().length;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '#<Enumerable:' + this.toArray().inspect() + '>';=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Enumerable, {=0A=
  map:     Enumerable.collect,=0A=
  find:    Enumerable.detect,=0A=
  select:  Enumerable.findAll,=0A=
  filter:  Enumerable.findAll,=0A=
  member:  Enumerable.include,=0A=
  entries: Enumerable.toArray,=0A=
  every:   Enumerable.all,=0A=
  some:    Enumerable.any=0A=
});=0A=
function $A(iterable) {=0A=
  if (!iterable) return [];=0A=
  if (iterable.toArray) return iterable.toArray();=0A=
  var length =3D iterable.length || 0, results =3D new Array(length);=0A=
  while (length--) results[length] =3D iterable[length];=0A=
  return results;=0A=
}=0A=
=0A=
if (Prototype.Browser.WebKit) {=0A=
  $A =3D function(iterable) {=0A=
    if (!iterable) return [];=0A=
    // In Safari, only use the `toArray` method if it's not a NodeList.=0A=
    // A NodeList is a function, has an function `item` property, and a =
numeric=0A=
    // `length` property. Adapted from Google Doctype.=0A=
    if (!(typeof iterable =3D=3D=3D 'function' && typeof iterable.length =
=3D=3D=3D=0A=
        'number' && typeof iterable.item =3D=3D=3D 'function') && =
iterable.toArray)=0A=
      return iterable.toArray();=0A=
    var length =3D iterable.length || 0, results =3D new Array(length);=0A=
    while (length--) results[length] =3D iterable[length];=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
Array.from =3D $A;=0A=
=0A=
Object.extend(Array.prototype, Enumerable);=0A=
=0A=
if (!Array.prototype._reverse) Array.prototype._reverse =3D =
Array.prototype.reverse;=0A=
=0A=
Object.extend(Array.prototype, {=0A=
  _each: function(iterator) {=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++)=0A=
      iterator(this[i]);=0A=
  },=0A=
=0A=
  clear: function() {=0A=
    this.length =3D 0;=0A=
    return this;=0A=
  },=0A=
=0A=
  first: function() {=0A=
    return this[0];=0A=
  },=0A=
=0A=
  last: function() {=0A=
    return this[this.length - 1];=0A=
  },=0A=
=0A=
  compact: function() {=0A=
    return this.select(function(value) {=0A=
      return value !=3D null;=0A=
    });=0A=
  },=0A=
=0A=
  flatten: function() {=0A=
    return this.inject([], function(array, value) {=0A=
      return array.concat(Object.isArray(value) ?=0A=
        value.flatten() : [value]);=0A=
    });=0A=
  },=0A=
=0A=
  without: function() {=0A=
    var values =3D $A(arguments);=0A=
    return this.select(function(value) {=0A=
      return !values.include(value);=0A=
    });=0A=
  },=0A=
=0A=
  reverse: function(inline) {=0A=
    return (inline !=3D=3D false ? this : this.toArray())._reverse();=0A=
  },=0A=
=0A=
  reduce: function() {=0A=
    return this.length > 1 ? this : this[0];=0A=
  },=0A=
=0A=
  uniq: function(sorted) {=0A=
    return this.inject([], function(array, value, index) {=0A=
      if (0 =3D=3D index || (sorted ? array.last() !=3D value : =
!array.include(value)))=0A=
        array.push(value);=0A=
      return array;=0A=
    });=0A=
  },=0A=
=0A=
  intersect: function(array) {=0A=
    return this.uniq().findAll(function(item) {=0A=
      return array.detect(function(value) { return item =3D=3D=3D value =
});=0A=
    });=0A=
  },=0A=
=0A=
  clone: function() {=0A=
    return [].concat(this);=0A=
  },=0A=
=0A=
  size: function() {=0A=
    return this.length;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return '[' + this.map(Object.inspect).join(', ') + ']';=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    var results =3D [];=0A=
    this.each(function(object) {=0A=
      var value =3D Object.toJSON(object);=0A=
      if (!Object.isUndefined(value)) results.push(value);=0A=
    });=0A=
    return '[' + results.join(', ') + ']';=0A=
  }=0A=
});=0A=
=0A=
// use native browser JS 1.6 implementation if available=0A=
if (Object.isFunction(Array.prototype.forEach))=0A=
  Array.prototype._each =3D Array.prototype.forEach;=0A=
=0A=
if (!Array.prototype.indexOf) Array.prototype.indexOf =3D function(item, =
i) {=0A=
  i || (i =3D 0);=0A=
  var length =3D this.length;=0A=
  if (i < 0) i =3D length + i;=0A=
  for (; i < length; i++)=0A=
    if (this[i] =3D=3D=3D item) return i;=0A=
  return -1;=0A=
};=0A=
=0A=
if (!Array.prototype.lastIndexOf) Array.prototype.lastIndexOf =3D =
function(item, i) {=0A=
  i =3D isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;=0A=
  var n =3D this.slice(0, i).reverse().indexOf(item);=0A=
  return (n < 0) ? n : i - n - 1;=0A=
};=0A=
=0A=
Array.prototype.toArray =3D Array.prototype.clone;=0A=
=0A=
function $w(string) {=0A=
  if (!Object.isString(string)) return [];=0A=
  string =3D string.strip();=0A=
  return string ? string.split(/\s+/) : [];=0A=
}=0A=
=0A=
if (Prototype.Browser.Opera){=0A=
  Array.prototype.concat =3D function() {=0A=
    var array =3D [];=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++) =
array.push(this[i]);=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      if (Object.isArray(arguments[i])) {=0A=
        for (var j =3D 0, arrayLength =3D arguments[i].length; j < =
arrayLength; j++)=0A=
          array.push(arguments[i][j]);=0A=
      } else {=0A=
        array.push(arguments[i]);=0A=
      }=0A=
    }=0A=
    return array;=0A=
  };=0A=
}=0A=
Object.extend(Number.prototype, {=0A=
  toColorPart: function() {=0A=
    return this.toPaddedString(2, 16);=0A=
  },=0A=
=0A=
  succ: function() {=0A=
    return this + 1;=0A=
  },=0A=
=0A=
  times: function(iterator, context) {=0A=
    $R(0, this, true).each(iterator, context);=0A=
    return this;=0A=
  },=0A=
=0A=
  toPaddedString: function(length, radix) {=0A=
    var string =3D this.toString(radix || 10);=0A=
    return '0'.times(length - string.length) + string;=0A=
  },=0A=
=0A=
  toJSON: function() {=0A=
    return isFinite(this) ? this.toString() : 'null';=0A=
  }=0A=
});=0A=
=0A=
$w('abs round ceil floor').each(function(method){=0A=
  Number.prototype[method] =3D Math[method].methodize();=0A=
});=0A=
function $H(object) {=0A=
  return new Hash(object);=0A=
};=0A=
=0A=
var Hash =3D Class.create(Enumerable, (function() {=0A=
=0A=
  function toQueryPair(key, value) {=0A=
    if (Object.isUndefined(value)) return key;=0A=
    return key + '=3D' + encodeURIComponent(String.interpret(value));=0A=
  }=0A=
=0A=
  return {=0A=
    initialize: function(object) {=0A=
      this._object =3D Object.isHash(object) ? object.toObject() : =
Object.clone(object);=0A=
    },=0A=
=0A=
    _each: function(iterator) {=0A=
      for (var key in this._object) {=0A=
        var value =3D this._object[key], pair =3D [key, value];=0A=
        pair.key =3D key;=0A=
        pair.value =3D value;=0A=
        iterator(pair);=0A=
      }=0A=
    },=0A=
=0A=
    set: function(key, value) {=0A=
      return this._object[key] =3D value;=0A=
    },=0A=
=0A=
    get: function(key) {=0A=
      // simulating poorly supported hasOwnProperty=0A=
      if (this._object[key] !=3D=3D Object.prototype[key])=0A=
        return this._object[key];=0A=
    },=0A=
=0A=
    unset: function(key) {=0A=
      var value =3D this._object[key];=0A=
      delete this._object[key];=0A=
      return value;=0A=
    },=0A=
=0A=
    toObject: function() {=0A=
      return Object.clone(this._object);=0A=
    },=0A=
=0A=
    keys: function() {=0A=
      return this.pluck('key');=0A=
    },=0A=
=0A=
    values: function() {=0A=
      return this.pluck('value');=0A=
    },=0A=
=0A=
    index: function(value) {=0A=
      var match =3D this.detect(function(pair) {=0A=
        return pair.value =3D=3D=3D value;=0A=
      });=0A=
      return match && match.key;=0A=
    },=0A=
=0A=
    merge: function(object) {=0A=
      return this.clone().update(object);=0A=
    },=0A=
=0A=
    update: function(object) {=0A=
      return new Hash(object).inject(this, function(result, pair) {=0A=
        result.set(pair.key, pair.value);=0A=
        return result;=0A=
      });=0A=
    },=0A=
=0A=
    toQueryString: function() {=0A=
      return this.inject([], function(results, pair) {=0A=
        var key =3D encodeURIComponent(pair.key), values =3D pair.value;=0A=
=0A=
        if (values && typeof values =3D=3D 'object') {=0A=
          if (Object.isArray(values))=0A=
            return results.concat(values.map(toQueryPair.curry(key)));=0A=
        } else results.push(toQueryPair(key, values));=0A=
        return results;=0A=
      }).join('&');=0A=
    },=0A=
=0A=
    inspect: function() {=0A=
      return '#<Hash:{' + this.map(function(pair) {=0A=
        return pair.map(Object.inspect).join(': ');=0A=
      }).join(', ') + '}>';=0A=
    },=0A=
=0A=
    toJSON: function() {=0A=
      return Object.toJSON(this.toObject());=0A=
    },=0A=
=0A=
    clone: function() {=0A=
      return new Hash(this);=0A=
    }=0A=
  }=0A=
})());=0A=
=0A=
Hash.prototype.toTemplateReplacements =3D Hash.prototype.toObject;=0A=
Hash.from =3D $H;=0A=
var ObjectRange =3D Class.create(Enumerable, {=0A=
  initialize: function(start, end, exclusive) {=0A=
    this.start =3D start;=0A=
    this.end =3D end;=0A=
    this.exclusive =3D exclusive;=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    var value =3D this.start;=0A=
    while (this.include(value)) {=0A=
      iterator(value);=0A=
      value =3D value.succ();=0A=
    }=0A=
  },=0A=
=0A=
  include: function(value) {=0A=
    if (value < this.start)=0A=
      return false;=0A=
    if (this.exclusive)=0A=
      return value < this.end;=0A=
    return value <=3D this.end;=0A=
  }=0A=
});=0A=
=0A=
var $R =3D function(start, end, exclusive) {=0A=
  return new ObjectRange(start, end, exclusive);=0A=
};=0A=
=0A=
var Ajax =3D {=0A=
  getTransport: function() {=0A=
    return Try.these(=0A=
      function() {return new XMLHttpRequest()},=0A=
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},=0A=
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}=0A=
    ) || false;=0A=
  },=0A=
=0A=
  activeRequestCount: 0=0A=
};=0A=
=0A=
Ajax.Responders =3D {=0A=
  responders: [],=0A=
=0A=
  _each: function(iterator) {=0A=
    this.responders._each(iterator);=0A=
  },=0A=
=0A=
  register: function(responder) {=0A=
    if (!this.include(responder))=0A=
      this.responders.push(responder);=0A=
  },=0A=
=0A=
  unregister: function(responder) {=0A=
    this.responders =3D this.responders.without(responder);=0A=
  },=0A=
=0A=
  dispatch: function(callback, request, transport, json) {=0A=
    this.each(function(responder) {=0A=
      if (Object.isFunction(responder[callback])) {=0A=
        try {=0A=
          responder[callback].apply(responder, [request, transport, =
json]);=0A=
        } catch (e) { }=0A=
      }=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Ajax.Responders, Enumerable);=0A=
=0A=
Ajax.Responders.register({=0A=
  onCreate:   function() { Ajax.activeRequestCount++ },=0A=
  onComplete: function() { Ajax.activeRequestCount-- }=0A=
});=0A=
=0A=
Ajax.Base =3D Class.create({=0A=
  initialize: function(options) {=0A=
    this.options =3D {=0A=
      method:       'post',=0A=
      asynchronous: true,=0A=
      contentType:  'application/x-www-form-urlencoded',=0A=
      encoding:     'UTF-8',=0A=
      parameters:   '',=0A=
      evalJSON:     true,=0A=
      evalJS:       true=0A=
    };=0A=
    Object.extend(this.options, options || { });=0A=
=0A=
    this.options.method =3D this.options.method.toLowerCase();=0A=
=0A=
    if (Object.isString(this.options.parameters))=0A=
      this.options.parameters =3D =
this.options.parameters.toQueryParams();=0A=
    else if (Object.isHash(this.options.parameters))=0A=
      this.options.parameters =3D this.options.parameters.toObject();=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request =3D Class.create(Ajax.Base, {=0A=
  _complete: false,=0A=
=0A=
  initialize: function($super, url, options) {=0A=
    $super(options);=0A=
    this.transport =3D Ajax.getTransport();=0A=
    this.request(url);=0A=
  },=0A=
=0A=
  request: function(url) {=0A=
    this.url =3D url;=0A=
    this.method =3D this.options.method;=0A=
    var params =3D Object.clone(this.options.parameters);=0A=
=0A=
    if (!['get', 'post'].include(this.method)) {=0A=
      // simulate other verbs over post=0A=
      params['_method'] =3D this.method;=0A=
      this.method =3D 'post';=0A=
    }=0A=
=0A=
    this.parameters =3D params;=0A=
=0A=
    if (params =3D Object.toQueryString(params)) {=0A=
      // when GET, append parameters to URL=0A=
      if (this.method =3D=3D 'get')=0A=
        this.url +=3D (this.url.include('?') ? '&' : '?') + params;=0A=
      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))=0A=
        params +=3D '&_=3D';=0A=
    }=0A=
=0A=
    try {=0A=
      var response =3D new Ajax.Response(this);=0A=
      if (this.options.onCreate) this.options.onCreate(response);=0A=
      Ajax.Responders.dispatch('onCreate', this, response);=0A=
=0A=
      this.transport.open(this.method.toUpperCase(), this.url,=0A=
        this.options.asynchronous);=0A=
=0A=
      if (this.options.asynchronous) =
this.respondToReadyState.bind(this).defer(1);=0A=
=0A=
      this.transport.onreadystatechange =3D =
this.onStateChange.bind(this);=0A=
      this.setRequestHeaders();=0A=
=0A=
      this.body =3D this.method =3D=3D 'post' ? (this.options.postBody =
|| params) : null;=0A=
      this.transport.send(this.body);=0A=
=0A=
      /* Force Firefox to handle ready state 4 for synchronous requests =
*/=0A=
      if (!this.options.asynchronous && this.transport.overrideMimeType)=0A=
        this.onStateChange();=0A=
=0A=
    }=0A=
    catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  onStateChange: function() {=0A=
    var readyState =3D this.transport.readyState;=0A=
    if (readyState > 1 && !((readyState =3D=3D 4) && this._complete))=0A=
      this.respondToReadyState(this.transport.readyState);=0A=
  },=0A=
=0A=
  setRequestHeaders: function() {=0A=
    var headers =3D {=0A=
      'X-Requested-With': 'XMLHttpRequest',=0A=
      'X-Prototype-Version': Prototype.Version,=0A=
      'Accept': 'text/javascript, text/html, application/xml, text/xml, =
*/*'=0A=
    };=0A=
=0A=
    if (this.method =3D=3D 'post') {=0A=
      headers['Content-type'] =3D this.options.contentType +=0A=
        (this.options.encoding ? '; charset=3D' + this.options.encoding =
: '');=0A=
=0A=
      /* Force "Connection: close" for older Mozilla browsers to work=0A=
       * around a bug where XMLHttpRequest sends an incorrect=0A=
       * Content-length header. See Mozilla Bugzilla #246651.=0A=
       */=0A=
      if (this.transport.overrideMimeType &&=0A=
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < =
2005)=0A=
            headers['Connection'] =3D 'close';=0A=
    }=0A=
=0A=
    // user-defined headers=0A=
    if (typeof this.options.requestHeaders =3D=3D 'object') {=0A=
      var extras =3D this.options.requestHeaders;=0A=
=0A=
      if (Object.isFunction(extras.push))=0A=
        for (var i =3D 0, length =3D extras.length; i < length; i +=3D 2)=0A=
          headers[extras[i]] =3D extras[i+1];=0A=
      else=0A=
        $H(extras).each(function(pair) { headers[pair.key] =3D =
pair.value });=0A=
    }=0A=
=0A=
    for (var name in headers)=0A=
      this.transport.setRequestHeader(name, headers[name]);=0A=
  },=0A=
=0A=
  success: function() {=0A=
    var status =3D this.getStatus();=0A=
    return !status || (status >=3D 200 && status < 300);=0A=
  },=0A=
=0A=
  getStatus: function() {=0A=
    try {=0A=
      return this.transport.status || 0;=0A=
    } catch (e) { return 0 }=0A=
  },=0A=
=0A=
  respondToReadyState: function(readyState) {=0A=
    var state =3D Ajax.Request.Events[readyState], response =3D new =
Ajax.Response(this);=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      try {=0A=
        this._complete =3D true;=0A=
        (this.options['on' + response.status]=0A=
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]=0A=
         || Prototype.emptyFunction)(response, response.headerJSON);=0A=
      } catch (e) {=0A=
        this.dispatchException(e);=0A=
      }=0A=
=0A=
      var contentType =3D response.getHeader('Content-type');=0A=
      if (this.options.evalJS =3D=3D 'force'=0A=
          || (this.options.evalJS && this.isSameOrigin() && contentType=0A=
          && =
contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s=
*$/i)))=0A=
        this.evalResponse();=0A=
    }=0A=
=0A=
    try {=0A=
      (this.options['on' + state] || Prototype.emptyFunction)(response, =
response.headerJSON);=0A=
      Ajax.Responders.dispatch('on' + state, this, response, =
response.headerJSON);=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      // avoid memory leak in MSIE: clean up=0A=
      this.transport.onreadystatechange =3D Prototype.emptyFunction;=0A=
    }=0A=
  },=0A=
=0A=
  isSameOrigin: function() {=0A=
    var m =3D this.url.match(/^\s*https?:\/\/[^\/]*/);=0A=
    return !m || (m[0] =3D=3D =
'#{protocol}//#{domain}#{port}'.interpolate({=0A=
      protocol: location.protocol,=0A=
      domain: document.domain,=0A=
      port: location.port ? ':' + location.port : ''=0A=
    }));=0A=
  },=0A=
=0A=
  getHeader: function(name) {=0A=
    try {=0A=
      return this.transport.getResponseHeader(name) || null;=0A=
    } catch (e) { return null }=0A=
  },=0A=
=0A=
  evalResponse: function() {=0A=
    try {=0A=
      return eval((this.transport.responseText || '').unfilterJSON());=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  dispatchException: function(exception) {=0A=
    (this.options.onException || Prototype.emptyFunction)(this, =
exception);=0A=
    Ajax.Responders.dispatch('onException', this, exception);=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request.Events =3D=0A=
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];=0A=
=0A=
Ajax.Response =3D Class.create({=0A=
  initialize: function(request){=0A=
    this.request =3D request;=0A=
    var transport  =3D this.transport  =3D request.transport,=0A=
        readyState =3D this.readyState =3D transport.readyState;=0A=
=0A=
    if((readyState > 2 && !Prototype.Browser.IE) || readyState =3D=3D 4) =
{=0A=
      this.status       =3D this.getStatus();=0A=
      this.statusText   =3D this.getStatusText();=0A=
      this.responseText =3D String.interpret(transport.responseText);=0A=
      this.headerJSON   =3D this._getHeaderJSON();=0A=
    }=0A=
=0A=
    if(readyState =3D=3D 4) {=0A=
      var xml =3D transport.responseXML;=0A=
      this.responseXML  =3D Object.isUndefined(xml) ? null : xml;=0A=
      this.responseJSON =3D this._getResponseJSON();=0A=
    }=0A=
  },=0A=
=0A=
  status:      0,=0A=
  statusText: '',=0A=
=0A=
  getStatus: Ajax.Request.prototype.getStatus,=0A=
=0A=
  getStatusText: function() {=0A=
    try {=0A=
      return this.transport.statusText || '';=0A=
    } catch (e) { return '' }=0A=
  },=0A=
=0A=
  getHeader: Ajax.Request.prototype.getHeader,=0A=
=0A=
  getAllHeaders: function() {=0A=
    try {=0A=
      return this.getAllResponseHeaders();=0A=
    } catch (e) { return null }=0A=
  },=0A=
=0A=
  getResponseHeader: function(name) {=0A=
    return this.transport.getResponseHeader(name);=0A=
  },=0A=
=0A=
  getAllResponseHeaders: function() {=0A=
    return this.transport.getAllResponseHeaders();=0A=
  },=0A=
=0A=
  _getHeaderJSON: function() {=0A=
    var json =3D this.getHeader('X-JSON');=0A=
    if (!json) return null;=0A=
    json =3D decodeURIComponent(escape(json));=0A=
    try {=0A=
      return json.evalJSON(this.request.options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  _getResponseJSON: function() {=0A=
    var options =3D this.request.options;=0A=
    if (!options.evalJSON || (options.evalJSON !=3D 'force' &&=0A=
      !(this.getHeader('Content-type') || =
'').include('application/json')) ||=0A=
        this.responseText.blank())=0A=
          return null;=0A=
    try {=0A=
      return this.responseText.evalJSON(options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.Updater =3D Class.create(Ajax.Request, {=0A=
  initialize: function($super, container, url, options) {=0A=
    this.container =3D {=0A=
      success: (container.success || container),=0A=
      failure: (container.failure || (container.success ? null : =
container))=0A=
    };=0A=
=0A=
    options =3D Object.clone(options);=0A=
    var onComplete =3D options.onComplete;=0A=
    options.onComplete =3D (function(response, json) {=0A=
      this.updateContent(response.responseText);=0A=
      if (Object.isFunction(onComplete)) onComplete(response, json);=0A=
    }).bind(this);=0A=
=0A=
    $super(url, options);=0A=
  },=0A=
=0A=
  updateContent: function(responseText) {=0A=
    var receiver =3D this.container[this.success() ? 'success' : =
'failure'],=0A=
        options =3D this.options;=0A=
=0A=
    if (!options.evalScripts) responseText =3D =
responseText.stripScripts();=0A=
=0A=
    if (receiver =3D $(receiver)) {=0A=
      if (options.insertion) {=0A=
        if (Object.isString(options.insertion)) {=0A=
          var insertion =3D { }; insertion[options.insertion] =3D =
responseText;=0A=
          receiver.insert(insertion);=0A=
        }=0A=
        else options.insertion(receiver, responseText);=0A=
      }=0A=
      else receiver.update(responseText);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.PeriodicalUpdater =3D Class.create(Ajax.Base, {=0A=
  initialize: function($super, container, url, options) {=0A=
    $super(options);=0A=
    this.onComplete =3D this.options.onComplete;=0A=
=0A=
    this.frequency =3D (this.options.frequency || 2);=0A=
    this.decay =3D (this.options.decay || 1);=0A=
=0A=
    this.updater =3D { };=0A=
    this.container =3D container;=0A=
    this.url =3D url;=0A=
=0A=
    this.start();=0A=
  },=0A=
=0A=
  start: function() {=0A=
    this.options.onComplete =3D this.updateComplete.bind(this);=0A=
    this.onTimerEvent();=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    this.updater.options.onComplete =3D undefined;=0A=
    clearTimeout(this.timer);=0A=
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);=0A=
  },=0A=
=0A=
  updateComplete: function(response) {=0A=
    if (this.options.decay) {=0A=
      this.decay =3D (response.responseText =3D=3D this.lastText ?=0A=
        this.decay * this.options.decay : 1);=0A=
=0A=
      this.lastText =3D response.responseText;=0A=
    }=0A=
    this.timer =3D this.onTimerEvent.bind(this).delay(this.decay * =
this.frequency);=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    this.updater =3D new Ajax.Updater(this.container, this.url, =
this.options);=0A=
  }=0A=
});=0A=
function $(element) {=0A=
  if (arguments.length > 1) {=0A=
    for (var i =3D 0, elements =3D [], length =3D arguments.length; i < =
length; i++)=0A=
      elements.push($(arguments[i]));=0A=
    return elements;=0A=
  }=0A=
  if (Object.isString(element))=0A=
    element =3D document.getElementById(element);=0A=
  return Element.extend(element);=0A=
}=0A=
=0A=
if (Prototype.BrowserFeatures.XPath) {=0A=
  document._getElementsByXPath =3D function(expression, parentElement) {=0A=
    var results =3D [];=0A=
    var query =3D document.evaluate(expression, $(parentElement) || =
document,=0A=
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);=0A=
    for (var i =3D 0, length =3D query.snapshotLength; i < length; i++)=0A=
      results.push(Element.extend(query.snapshotItem(i)));=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!window.Node) var Node =3D { };=0A=
=0A=
if (!Node.ELEMENT_NODE) {=0A=
  // DOM level 2 ECMAScript Language Binding=0A=
  Object.extend(Node, {=0A=
    ELEMENT_NODE: 1,=0A=
    ATTRIBUTE_NODE: 2,=0A=
    TEXT_NODE: 3,=0A=
    CDATA_SECTION_NODE: 4,=0A=
    ENTITY_REFERENCE_NODE: 5,=0A=
    ENTITY_NODE: 6,=0A=
    PROCESSING_INSTRUCTION_NODE: 7,=0A=
    COMMENT_NODE: 8,=0A=
    DOCUMENT_NODE: 9,=0A=
    DOCUMENT_TYPE_NODE: 10,=0A=
    DOCUMENT_FRAGMENT_NODE: 11,=0A=
    NOTATION_NODE: 12=0A=
  });=0A=
}=0A=
=0A=
(function() {=0A=
  var element =3D this.Element;=0A=
  this.Element =3D function(tagName, attributes) {=0A=
    attributes =3D attributes || { };=0A=
    tagName =3D tagName.toLowerCase();=0A=
    var cache =3D Element.cache;=0A=
    if (Prototype.Browser.IE && attributes.name) {=0A=
      tagName =3D '<' + tagName + ' name=3D"' + attributes.name + '">';=0A=
      delete attributes.name;=0A=
      return Element.writeAttribute(document.createElement(tagName), =
attributes);=0A=
    }=0A=
    if (!cache[tagName]) cache[tagName] =3D =
Element.extend(document.createElement(tagName));=0A=
    return Element.writeAttribute(cache[tagName].cloneNode(false), =
attributes);=0A=
  };=0A=
  Object.extend(this.Element, element || { });=0A=
  if (element) this.Element.prototype =3D element.prototype;=0A=
}).call(window);=0A=
=0A=
Element.cache =3D { };=0A=
=0A=
Element.Methods =3D {=0A=
  visible: function(element) {=0A=
    return $(element).style.display !=3D 'none';=0A=
  },=0A=
=0A=
  toggle: function(element) {=0A=
    element =3D $(element);=0A=
    Element[Element.visible(element) ? 'hide' : 'show'](element);=0A=
    return element;=0A=
  },=0A=
=0A=
  hide: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D 'none';=0A=
    return element;=0A=
  },=0A=
=0A=
  show: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  remove: function(element) {=0A=
    element =3D $(element);=0A=
    element.parentNode.removeChild(element);=0A=
    return element;=0A=
  },=0A=
=0A=
  update: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) return =
element.update().insert(content);=0A=
    content =3D Object.toHTML(content);=0A=
    element.innerHTML =3D content.stripScripts();=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  },=0A=
=0A=
  replace: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    else if (!Object.isElement(content)) {=0A=
      content =3D Object.toHTML(content);=0A=
      var range =3D element.ownerDocument.createRange();=0A=
      range.selectNode(element);=0A=
      content.evalScripts.bind(content).defer();=0A=
      content =3D range.createContextualFragment(content.stripScripts());=0A=
    }=0A=
    element.parentNode.replaceChild(content, element);=0A=
    return element;=0A=
  },=0A=
=0A=
  insert: function(element, insertions) {=0A=
    element =3D $(element);=0A=
=0A=
    if (Object.isString(insertions) || Object.isNumber(insertions) ||=0A=
        Object.isElement(insertions) || (insertions && =
(insertions.toElement || insertions.toHTML)))=0A=
          insertions =3D {bottom:insertions};=0A=
=0A=
    var content, insert, tagName, childNodes;=0A=
=0A=
    for (var position in insertions) {=0A=
      content  =3D insertions[position];=0A=
      position =3D position.toLowerCase();=0A=
      insert =3D Element._insertionTranslations[position];=0A=
=0A=
      if (content && content.toElement) content =3D content.toElement();=0A=
      if (Object.isElement(content)) {=0A=
        insert(element, content);=0A=
        continue;=0A=
      }=0A=
=0A=
      content =3D Object.toHTML(content);=0A=
=0A=
      tagName =3D ((position =3D=3D 'before' || position =3D=3D 'after')=0A=
        ? element.parentNode : element).tagName.toUpperCase();=0A=
=0A=
      childNodes =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
=0A=
      if (position =3D=3D 'top' || position =3D=3D 'after') =
childNodes.reverse();=0A=
      childNodes.each(insert.curry(element));=0A=
=0A=
      content.evalScripts.bind(content).defer();=0A=
    }=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  wrap: function(element, wrapper, attributes) {=0A=
    element =3D $(element);=0A=
    if (Object.isElement(wrapper))=0A=
      $(wrapper).writeAttribute(attributes || { });=0A=
    else if (Object.isString(wrapper)) wrapper =3D new Element(wrapper, =
attributes);=0A=
    else wrapper =3D new Element('div', wrapper);=0A=
    if (element.parentNode)=0A=
      element.parentNode.replaceChild(wrapper, element);=0A=
    wrapper.appendChild(element);=0A=
    return wrapper;=0A=
  },=0A=
=0A=
  inspect: function(element) {=0A=
    element =3D $(element);=0A=
    var result =3D '<' + element.tagName.toLowerCase();=0A=
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {=0A=
      var property =3D pair.first(), attribute =3D pair.last();=0A=
      var value =3D (element[property] || '').toString();=0A=
      if (value) result +=3D ' ' + attribute + '=3D' + =
value.inspect(true);=0A=
    });=0A=
    return result + '>';=0A=
  },=0A=
=0A=
  recursivelyCollect: function(element, property) {=0A=
    element =3D $(element);=0A=
    var elements =3D [];=0A=
    while (element =3D element[property])=0A=
      if (element.nodeType =3D=3D 1)=0A=
        elements.push(Element.extend(element));=0A=
    return elements;=0A=
  },=0A=
=0A=
  ancestors: function(element) {=0A=
    return $(element).recursivelyCollect('parentNode');=0A=
  },=0A=
=0A=
  descendants: function(element) {=0A=
    return $(element).select("*");=0A=
  },=0A=
=0A=
  firstDescendant: function(element) {=0A=
    element =3D $(element).firstChild;=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    return $(element);=0A=
  },=0A=
=0A=
  immediateDescendants: function(element) {=0A=
    if (!(element =3D $(element).firstChild)) return [];=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    if (element) return [element].concat($(element).nextSiblings());=0A=
    return [];=0A=
  },=0A=
=0A=
  previousSiblings: function(element) {=0A=
    return $(element).recursivelyCollect('previousSibling');=0A=
  },=0A=
=0A=
  nextSiblings: function(element) {=0A=
    return $(element).recursivelyCollect('nextSibling');=0A=
  },=0A=
=0A=
  siblings: function(element) {=0A=
    element =3D $(element);=0A=
    return =
element.previousSiblings().reverse().concat(element.nextSiblings());=0A=
  },=0A=
=0A=
  match: function(element, selector) {=0A=
    if (Object.isString(selector))=0A=
      selector =3D new Selector(selector);=0A=
    return selector.match($(element));=0A=
  },=0A=
=0A=
  up: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return $(element.parentNode);=0A=
    var ancestors =3D element.ancestors();=0A=
    return Object.isNumber(expression) ? ancestors[expression] :=0A=
      Selector.findElement(ancestors, expression, index);=0A=
  },=0A=
=0A=
  down: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return element.firstDescendant();=0A=
    return Object.isNumber(expression) ? =
element.descendants()[expression] :=0A=
      Element.select(element, expression)[index || 0];=0A=
  },=0A=
=0A=
  previous: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.previousElementSibling(element));=0A=
    var previousSiblings =3D element.previousSiblings();=0A=
    return Object.isNumber(expression) ? previousSiblings[expression] :=0A=
      Selector.findElement(previousSiblings, expression, index);=0A=
  },=0A=
=0A=
  next: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.nextElementSibling(element));=0A=
    var nextSiblings =3D element.nextSiblings();=0A=
    return Object.isNumber(expression) ? nextSiblings[expression] :=0A=
      Selector.findElement(nextSiblings, expression, index);=0A=
  },=0A=
=0A=
  select: function() {=0A=
    var args =3D $A(arguments), element =3D $(args.shift());=0A=
    return Selector.findChildElements(element, args);=0A=
  },=0A=
=0A=
  adjacent: function() {=0A=
    var args =3D $A(arguments), element =3D $(args.shift());=0A=
    return Selector.findChildElements(element.parentNode, =
args).without(element);=0A=
  },=0A=
=0A=
  identify: function(element) {=0A=
    element =3D $(element);=0A=
    var id =3D element.readAttribute('id'), self =3D arguments.callee;=0A=
    if (id) return id;=0A=
    do { id =3D 'anonymous_element_' + self.counter++ } while ($(id));=0A=
    element.writeAttribute('id', id);=0A=
    return id;=0A=
  },=0A=
=0A=
  readAttribute: function(element, name) {=0A=
    element =3D $(element);=0A=
    if (Prototype.Browser.IE) {=0A=
      var t =3D Element._attributeTranslations.read;=0A=
      if (t.values[name]) return t.values[name](element, name);=0A=
      if (t.names[name]) name =3D t.names[name];=0A=
      if (name.include(':')) {=0A=
        return (!element.attributes || !element.attributes[name]) ? null =
:=0A=
         element.attributes[name].value;=0A=
      }=0A=
    }=0A=
    return element.getAttribute(name);=0A=
  },=0A=
=0A=
  writeAttribute: function(element, name, value) {=0A=
    element =3D $(element);=0A=
    var attributes =3D { }, t =3D Element._attributeTranslations.write;=0A=
=0A=
    if (typeof name =3D=3D 'object') attributes =3D name;=0A=
    else attributes[name] =3D Object.isUndefined(value) ? true : value;=0A=
=0A=
    for (var attr in attributes) {=0A=
      name =3D t.names[attr] || attr;=0A=
      value =3D attributes[attr];=0A=
      if (t.values[attr]) name =3D t.values[attr](element, value);=0A=
      if (value =3D=3D=3D false || value =3D=3D=3D null)=0A=
        element.removeAttribute(name);=0A=
      else if (value =3D=3D=3D true)=0A=
        element.setAttribute(name, name);=0A=
      else element.setAttribute(name, value);=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  getHeight: function(element) {=0A=
    return $(element).getDimensions().height;=0A=
  },=0A=
=0A=
  getWidth: function(element) {=0A=
    return $(element).getDimensions().width;=0A=
  },=0A=
=0A=
  classNames: function(element) {=0A=
    return new Element.ClassNames(element);=0A=
  },=0A=
=0A=
  hasClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var elementClassName =3D element.className;=0A=
    return (elementClassName.length > 0 && (elementClassName =3D=3D =
className ||=0A=
      new RegExp("(^|\\s)" + className + =
"(\\s|$)").test(elementClassName)));=0A=
  },=0A=
=0A=
  addClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    if (!element.hasClassName(className))=0A=
      element.className +=3D (element.className ? ' ' : '') + className;=0A=
    return element;=0A=
  },=0A=
=0A=
  removeClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    element.className =3D element.className.replace(=0A=
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();=0A=
    return element;=0A=
  },=0A=
=0A=
  toggleClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    return element[element.hasClassName(className) ?=0A=
      'removeClassName' : 'addClassName'](className);=0A=
  },=0A=
=0A=
  // removes whitespace-only text node children=0A=
  cleanWhitespace: function(element) {=0A=
    element =3D $(element);=0A=
    var node =3D element.firstChild;=0A=
    while (node) {=0A=
      var nextNode =3D node.nextSibling;=0A=
      if (node.nodeType =3D=3D 3 && !/\S/.test(node.nodeValue))=0A=
        element.removeChild(node);=0A=
      node =3D nextNode;=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  empty: function(element) {=0A=
    return $(element).innerHTML.blank();=0A=
  },=0A=
=0A=
  descendantOf: function(element, ancestor) {=0A=
    element =3D $(element), ancestor =3D $(ancestor);=0A=
=0A=
    if (element.compareDocumentPosition)=0A=
      return (element.compareDocumentPosition(ancestor) & 8) =3D=3D=3D 8;=0A=
=0A=
    if (ancestor.contains)=0A=
      return ancestor.contains(element) && ancestor !=3D=3D element;=0A=
=0A=
    while (element =3D element.parentNode)=0A=
      if (element =3D=3D ancestor) return true;=0A=
=0A=
    return false;=0A=
  },=0A=
=0A=
  scrollTo: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D element.cumulativeOffset();=0A=
    window.scrollTo(pos[0], pos[1]);=0A=
    return element;=0A=
  },=0A=
=0A=
  getStyle: function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D style =3D=3D 'float' ? 'cssFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value || value =3D=3D 'auto') {=0A=
      var css =3D document.defaultView.getComputedStyle(element, null);=0A=
      value =3D css ? css[style] : null;=0A=
    }=0A=
    if (style =3D=3D 'opacity') return value ? parseFloat(value) : 1.0;=0A=
    return value =3D=3D 'auto' ? null : value;=0A=
  },=0A=
=0A=
  getOpacity: function(element) {=0A=
    return $(element).getStyle('opacity');=0A=
  },=0A=
=0A=
  setStyle: function(element, styles) {=0A=
    element =3D $(element);=0A=
    var elementStyle =3D element.style, match;=0A=
    if (Object.isString(styles)) {=0A=
      element.style.cssText +=3D ';' + styles;=0A=
      return styles.include('opacity') ?=0A=
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : =
element;=0A=
    }=0A=
    for (var property in styles)=0A=
      if (property =3D=3D 'opacity') =
element.setOpacity(styles[property]);=0A=
      else=0A=
        elementStyle[(property =3D=3D 'float' || property =3D=3D =
'cssFloat') ?=0A=
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : =
'styleFloat') :=0A=
            property] =3D styles[property];=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  setOpacity: function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  },=0A=
=0A=
  getDimensions: function(element) {=0A=
    element =3D $(element);=0A=
    var display =3D element.getStyle('display');=0A=
    if (display !=3D 'none' && display !=3D null) // Safari bug=0A=
      return {width: element.offsetWidth, height: element.offsetHeight};=0A=
=0A=
    // All *Width and *Height properties give 0 on elements with display =
none,=0A=
    // so enable the element temporarily=0A=
    var els =3D element.style;=0A=
    var originalVisibility =3D els.visibility;=0A=
    var originalPosition =3D els.position;=0A=
    var originalDisplay =3D els.display;=0A=
    els.visibility =3D 'hidden';=0A=
    els.position =3D 'absolute';=0A=
    els.display =3D 'block';=0A=
    var originalWidth =3D element.clientWidth;=0A=
    var originalHeight =3D element.clientHeight;=0A=
    els.display =3D originalDisplay;=0A=
    els.position =3D originalPosition;=0A=
    els.visibility =3D originalVisibility;=0A=
    return {width: originalWidth, height: originalHeight};=0A=
  },=0A=
=0A=
  makePositioned: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.getStyle(element, 'position');=0A=
    if (pos =3D=3D 'static' || !pos) {=0A=
      element._madePositioned =3D true;=0A=
      element.style.position =3D 'relative';=0A=
      // Opera returns the offset relative to the positioning context, =
when an=0A=
      // element is position relative but top and left have not been =
defined=0A=
      if (Prototype.Browser.Opera) {=0A=
        element.style.top =3D 0;=0A=
        element.style.left =3D 0;=0A=
      }=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  undoPositioned: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._madePositioned) {=0A=
      element._madePositioned =3D undefined;=0A=
      element.style.position =3D=0A=
        element.style.top =3D=0A=
        element.style.left =3D=0A=
        element.style.bottom =3D=0A=
        element.style.right =3D '';=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  makeClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._overflow) return element;=0A=
    element._overflow =3D Element.getStyle(element, 'overflow') || =
'auto';=0A=
    if (element._overflow !=3D=3D 'hidden')=0A=
      element.style.overflow =3D 'hidden';=0A=
    return element;=0A=
  },=0A=
=0A=
  undoClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element._overflow) return element;=0A=
    element.style.overflow =3D element._overflow =3D=3D 'auto' ? '' : =
element._overflow;=0A=
    element._overflow =3D null;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  positionedOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
      if (element) {=0A=
        if (element.tagName.toUpperCase() =3D=3D 'BODY') break;=0A=
        var p =3D Element.getStyle(element, 'position');=0A=
        if (p !=3D=3D 'static') break;=0A=
      }=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  absolutize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.getStyle('position') =3D=3D 'absolute') return element;=0A=
    // Position.prepare(); // To be done manually by Scripty when it =
needs it.=0A=
=0A=
    var offsets =3D element.positionedOffset();=0A=
    var top     =3D offsets[1];=0A=
    var left    =3D offsets[0];=0A=
    var width   =3D element.clientWidth;=0A=
    var height  =3D element.clientHeight;=0A=
=0A=
    element._originalLeft   =3D left - parseFloat(element.style.left  || =
0);=0A=
    element._originalTop    =3D top  - parseFloat(element.style.top || =
0);=0A=
    element._originalWidth  =3D element.style.width;=0A=
    element._originalHeight =3D element.style.height;=0A=
=0A=
    element.style.position =3D 'absolute';=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.width  =3D width + 'px';=0A=
    element.style.height =3D height + 'px';=0A=
    return element;=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    element =3D $(element);=0A=
    if (element.getStyle('position') =3D=3D 'relative') return element;=0A=
    // Position.prepare(); // To be done manually by Scripty when it =
needs it.=0A=
=0A=
    element.style.position =3D 'relative';=0A=
    var top  =3D parseFloat(element.style.top  || 0) - =
(element._originalTop || 0);=0A=
    var left =3D parseFloat(element.style.left || 0) - =
(element._originalLeft || 0);=0A=
=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.height =3D element._originalHeight;=0A=
    element.style.width  =3D element._originalWidth;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeScrollOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.scrollTop  || 0;=0A=
      valueL +=3D element.scrollLeft || 0;=0A=
      element =3D element.parentNode;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  getOffsetParent: function(element) {=0A=
    if (element.offsetParent) return $(element.offsetParent);=0A=
    if (element =3D=3D document.body) return $(element);=0A=
=0A=
    while ((element =3D element.parentNode) && element !=3D =
document.body)=0A=
      if (Element.getStyle(element, 'position') !=3D 'static')=0A=
        return $(element);=0A=
=0A=
    return $(document.body);=0A=
  },=0A=
=0A=
  viewportOffset: function(forElement) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
=0A=
    var element =3D forElement;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
=0A=
      // Safari fix=0A=
      if (element.offsetParent =3D=3D document.body &&=0A=
        Element.getStyle(element, 'position') =3D=3D 'absolute') break;=0A=
=0A=
    } while (element =3D element.offsetParent);=0A=
=0A=
    element =3D forElement;=0A=
    do {=0A=
      if (!Prototype.Browser.Opera || (element.tagName && =
(element.tagName.toUpperCase() =3D=3D 'BODY'))) {=0A=
        valueT -=3D element.scrollTop  || 0;=0A=
        valueL -=3D element.scrollLeft || 0;=0A=
      }=0A=
    } while (element =3D element.parentNode);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  clonePosition: function(element, source) {=0A=
    var options =3D Object.extend({=0A=
      setLeft:    true,=0A=
      setTop:     true,=0A=
      setWidth:   true,=0A=
      setHeight:  true,=0A=
      offsetTop:  0,=0A=
      offsetLeft: 0=0A=
    }, arguments[2] || { });=0A=
=0A=
    // find page position of source=0A=
    source =3D $(source);=0A=
    var p =3D source.viewportOffset();=0A=
=0A=
    // find coordinate system to use=0A=
    element =3D $(element);=0A=
    var delta =3D [0, 0];=0A=
    var parent =3D null;=0A=
    // delta [0,0] will do fine with position: fixed elements,=0A=
    // position:absolute needs offsetParent deltas=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') {=0A=
      parent =3D element.getOffsetParent();=0A=
      delta =3D parent.viewportOffset();=0A=
    }=0A=
=0A=
    // correct by body offsets (fixes Safari)=0A=
    if (parent =3D=3D document.body) {=0A=
      delta[0] -=3D document.body.offsetLeft;=0A=
      delta[1] -=3D document.body.offsetTop;=0A=
    }=0A=
=0A=
    // set position=0A=
    if (options.setLeft)   element.style.left  =3D (p[0] - delta[0] + =
options.offsetLeft) + 'px';=0A=
    if (options.setTop)    element.style.top   =3D (p[1] - delta[1] + =
options.offsetTop) + 'px';=0A=
    if (options.setWidth)  element.style.width =3D source.offsetWidth + =
'px';=0A=
    if (options.setHeight) element.style.height =3D source.offsetHeight =
+ 'px';=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.identify.counter =3D 1;=0A=
=0A=
Object.extend(Element.Methods, {=0A=
  getElementsBySelector: Element.Methods.select,=0A=
  childElements: Element.Methods.immediateDescendants=0A=
});=0A=
=0A=
Element._attributeTranslations =3D {=0A=
  write: {=0A=
    names: {=0A=
      className: 'class',=0A=
      htmlFor:   'for'=0A=
    },=0A=
    values: { }=0A=
  }=0A=
};=0A=
=0A=
if (Prototype.Browser.Opera) {=0A=
  Element.Methods.getStyle =3D Element.Methods.getStyle.wrap(=0A=
    function(proceed, element, style) {=0A=
      switch (style) {=0A=
        case 'left': case 'top': case 'right': case 'bottom':=0A=
          if (proceed(element, 'position') =3D=3D=3D 'static') return =
null;=0A=
        case 'height': case 'width':=0A=
          // returns '0px' for hidden elements; we want it to return null=0A=
          if (!Element.visible(element)) return null;=0A=
=0A=
          // returns the border-box dimensions rather than the =
content-box=0A=
          // dimensions, so we subtract padding and borders from the =
value=0A=
          var dim =3D parseInt(proceed(element, style), 10);=0A=
=0A=
          if (dim !=3D=3D element['offset' + style.capitalize()])=0A=
            return dim + 'px';=0A=
=0A=
          var properties;=0A=
          if (style =3D=3D=3D 'height') {=0A=
            properties =3D ['border-top-width', 'padding-top',=0A=
             'padding-bottom', 'border-bottom-width'];=0A=
          }=0A=
          else {=0A=
            properties =3D ['border-left-width', 'padding-left',=0A=
             'padding-right', 'border-right-width'];=0A=
          }=0A=
          return properties.inject(dim, function(memo, property) {=0A=
            var val =3D proceed(element, property);=0A=
            return val =3D=3D=3D null ? memo : memo - parseInt(val, 10);=0A=
          }) + 'px';=0A=
        default: return proceed(element, style);=0A=
      }=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.readAttribute =3D Element.Methods.readAttribute.wrap(=0A=
    function(proceed, element, attribute) {=0A=
      if (attribute =3D=3D=3D 'title') return element.title;=0A=
      return proceed(element, attribute);=0A=
    }=0A=
  );=0A=
}=0A=
=0A=
else if (Prototype.Browser.IE) {=0A=
  // IE doesn't report offsets correctly for static elements, so we =
change them=0A=
  // to "relative" to get the values, then change them back.=0A=
  Element.Methods.getOffsetParent =3D =
Element.Methods.getOffsetParent.wrap(=0A=
    function(proceed, element) {=0A=
      element =3D $(element);=0A=
      // IE throws an error if element is not in document=0A=
      try { element.offsetParent }=0A=
      catch(e) { return $(document.body) }=0A=
      var position =3D element.getStyle('position');=0A=
      if (position !=3D=3D 'static') return proceed(element);=0A=
      element.setStyle({ position: 'relative' });=0A=
      var value =3D proceed(element);=0A=
      element.setStyle({ position: position });=0A=
      return value;=0A=
    }=0A=
  );=0A=
=0A=
  $w('positionedOffset viewportOffset').each(function(method) {=0A=
    Element.Methods[method] =3D Element.Methods[method].wrap(=0A=
      function(proceed, element) {=0A=
        element =3D $(element);=0A=
        try { element.offsetParent }=0A=
        catch(e) { return Element._returnOffset(0,0) }=0A=
        var position =3D element.getStyle('position');=0A=
        if (position !=3D=3D 'static') return proceed(element);=0A=
        // Trigger hasLayout on the offset parent so that IE6 reports=0A=
        // accurate offsetTop and offsetLeft values for position: fixed.=0A=
        var offsetParent =3D element.getOffsetParent();=0A=
        if (offsetParent && offsetParent.getStyle('position') =3D=3D=3D =
'fixed')=0A=
          offsetParent.setStyle({ zoom: 1 });=0A=
        element.setStyle({ position: 'relative' });=0A=
        var value =3D proceed(element);=0A=
        element.setStyle({ position: position });=0A=
        return value;=0A=
      }=0A=
    );=0A=
  });=0A=
=0A=
  Element.Methods.cumulativeOffset =3D =
Element.Methods.cumulativeOffset.wrap(=0A=
    function(proceed, element) {=0A=
      try { element.offsetParent }=0A=
      catch(e) { return Element._returnOffset(0,0) }=0A=
      return proceed(element);=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.getStyle =3D function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D (style =3D=3D 'float' || style =3D=3D 'cssFloat') ? =
'styleFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value && element.currentStyle) value =3D =
element.currentStyle[style];=0A=
=0A=
    if (style =3D=3D 'opacity') {=0A=
      if (value =3D (element.getStyle('filter') || =
'').match(/alpha\(opacity=3D(.*)\)/))=0A=
        if (value[1]) return parseFloat(value[1]) / 100;=0A=
      return 1.0;=0A=
    }=0A=
=0A=
    if (value =3D=3D 'auto') {=0A=
      if ((style =3D=3D 'width' || style =3D=3D 'height') && =
(element.getStyle('display') !=3D 'none'))=0A=
        return element['offset' + style.capitalize()] + 'px';=0A=
      return null;=0A=
    }=0A=
    return value;=0A=
  };=0A=
=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    function stripAlpha(filter){=0A=
      return filter.replace(/alpha\([^\)]*\)/gi,'');=0A=
    }=0A=
    element =3D $(element);=0A=
    var currentStyle =3D element.currentStyle;=0A=
    if ((currentStyle && !currentStyle.hasLayout) ||=0A=
      (!currentStyle && element.style.zoom =3D=3D 'normal'))=0A=
        element.style.zoom =3D 1;=0A=
=0A=
    var filter =3D element.getStyle('filter'), style =3D element.style;=0A=
    if (value =3D=3D 1 || value =3D=3D=3D '') {=0A=
      (filter =3D stripAlpha(filter)) ?=0A=
        style.filter =3D filter : style.removeAttribute('filter');=0A=
      return element;=0A=
    } else if (value < 0.00001) value =3D 0;=0A=
    style.filter =3D stripAlpha(filter) +=0A=
      'alpha(opacity=3D' + (value * 100) + ')';=0A=
    return element;=0A=
  };=0A=
=0A=
  Element._attributeTranslations =3D {=0A=
    read: {=0A=
      names: {=0A=
        'class': 'className',=0A=
        'for':   'htmlFor'=0A=
      },=0A=
      values: {=0A=
        _getAttr: function(element, attribute) {=0A=
          return element.getAttribute(attribute, 2);=0A=
        },=0A=
        _getAttrNode: function(element, attribute) {=0A=
          var node =3D element.getAttributeNode(attribute);=0A=
          return node ? node.value : "";=0A=
        },=0A=
        _getEv: function(element, attribute) {=0A=
          attribute =3D element.getAttribute(attribute);=0A=
          return attribute ? attribute.toString().slice(23, -2) : null;=0A=
        },=0A=
        _flag: function(element, attribute) {=0A=
          return $(element).hasAttribute(attribute) ? attribute : null;=0A=
        },=0A=
        style: function(element) {=0A=
          return element.style.cssText.toLowerCase();=0A=
        },=0A=
        title: function(element) {=0A=
          return element.title;=0A=
        }=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.write =3D {=0A=
    names: Object.extend({=0A=
      cellpadding: 'cellPadding',=0A=
      cellspacing: 'cellSpacing'=0A=
    }, Element._attributeTranslations.read.names),=0A=
    values: {=0A=
      checked: function(element, value) {=0A=
        element.checked =3D !!value;=0A=
      },=0A=
=0A=
      style: function(element, value) {=0A=
        element.style.cssText =3D value ? value : '';=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.has =3D {};=0A=
=0A=
  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +=0A=
      'encType maxLength readOnly longDesc =
frameBorder').each(function(attr) {=0A=
    Element._attributeTranslations.write.names[attr.toLowerCase()] =3D =
attr;=0A=
    Element._attributeTranslations.has[attr.toLowerCase()] =3D attr;=0A=
  });=0A=
=0A=
  (function(v) {=0A=
    Object.extend(v, {=0A=
      href:        v._getAttr,=0A=
      src:         v._getAttr,=0A=
      type:        v._getAttr,=0A=
      action:      v._getAttrNode,=0A=
      disabled:    v._flag,=0A=
      checked:     v._flag,=0A=
      readonly:    v._flag,=0A=
      multiple:    v._flag,=0A=
      onload:      v._getEv,=0A=
      onunload:    v._getEv,=0A=
      onclick:     v._getEv,=0A=
      ondblclick:  v._getEv,=0A=
      onmousedown: v._getEv,=0A=
      onmouseup:   v._getEv,=0A=
      onmouseover: v._getEv,=0A=
      onmousemove: v._getEv,=0A=
      onmouseout:  v._getEv,=0A=
      onfocus:     v._getEv,=0A=
      onblur:      v._getEv,=0A=
      onkeypress:  v._getEv,=0A=
      onkeydown:   v._getEv,=0A=
      onkeyup:     v._getEv,=0A=
      onsubmit:    v._getEv,=0A=
      onreset:     v._getEv,=0A=
      onselect:    v._getEv,=0A=
      onchange:    v._getEv=0A=
    });=0A=
  })(Element._attributeTranslations.read.values);=0A=
}=0A=
=0A=
else if (Prototype.Browser.Gecko && =
/rv:1\.8\.0/.test(navigator.userAgent)) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1) ? 0.999999 :=0A=
      (value =3D=3D=3D '') ? '' : (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
else if (Prototype.Browser.WebKit) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
=0A=
    if (value =3D=3D 1)=0A=
      if(element.tagName.toUpperCase() =3D=3D 'IMG' && element.width) {=0A=
        element.width++; element.width--;=0A=
      } else try {=0A=
        var n =3D document.createTextNode(' ');=0A=
        element.appendChild(n);=0A=
        element.removeChild(n);=0A=
      } catch (e) { }=0A=
=0A=
    return element;=0A=
  };=0A=
=0A=
  // Safari returns margins on body which is incorrect if the child is =
absolutely=0A=
  // positioned.  For performance reasons, redefine =
Element#cumulativeOffset for=0A=
  // KHTML/WebKit only.=0A=
  Element.Methods.cumulativeOffset =3D function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      if (element.offsetParent =3D=3D document.body)=0A=
        if (Element.getStyle(element, 'position') =3D=3D 'absolute') =
break;=0A=
=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  };=0A=
}=0A=
=0A=
if (Prototype.Browser.IE || Prototype.Browser.Opera) {=0A=
  // IE and Opera are missing .innerHTML support for TABLE-related and =
SELECT elements=0A=
  Element.Methods.update =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) return =
element.update().insert(content);=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var tagName =3D element.tagName.toUpperCase();=0A=
=0A=
    if (tagName in Element._insertionTranslations.tags) {=0A=
      $A(element.childNodes).each(function(node) { =
element.removeChild(node) });=0A=
      Element._getContentFromAnonymousElement(tagName, =
content.stripScripts())=0A=
        .each(function(node) { element.appendChild(node) });=0A=
    }=0A=
    else element.innerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
if ('outerHTML' in document.createElement('div')) {=0A=
  Element.Methods.replace =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) {=0A=
      element.parentNode.replaceChild(content, element);=0A=
      return element;=0A=
    }=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var parent =3D element.parentNode, tagName =3D =
parent.tagName.toUpperCase();=0A=
=0A=
    if (Element._insertionTranslations.tags[tagName]) {=0A=
      var nextSibling =3D element.next();=0A=
      var fragments =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
      parent.removeChild(element);=0A=
      if (nextSibling)=0A=
        fragments.each(function(node) { parent.insertBefore(node, =
nextSibling) });=0A=
      else=0A=
        fragments.each(function(node) { parent.appendChild(node) });=0A=
    }=0A=
    else element.outerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
Element._returnOffset =3D function(l, t) {=0A=
  var result =3D [l, t];=0A=
  result.left =3D l;=0A=
  result.top =3D t;=0A=
  return result;=0A=
};=0A=
=0A=
Element._getContentFromAnonymousElement =3D function(tagName, html) {=0A=
  var div =3D new Element('div'), t =3D =
Element._insertionTranslations.tags[tagName];=0A=
  if (t) {=0A=
    div.innerHTML =3D t[0] + html + t[1];=0A=
    t[2].times(function() { div =3D div.firstChild });=0A=
  } else div.innerHTML =3D html;=0A=
  return $A(div.childNodes);=0A=
};=0A=
=0A=
Element._insertionTranslations =3D {=0A=
  before: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element);=0A=
  },=0A=
  top: function(element, node) {=0A=
    element.insertBefore(node, element.firstChild);=0A=
  },=0A=
  bottom: function(element, node) {=0A=
    element.appendChild(node);=0A=
  },=0A=
  after: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element.nextSibling);=0A=
  },=0A=
  tags: {=0A=
    TABLE:  ['<table>',                '</table>',                   1],=0A=
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],=0A=
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],=0A=
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],=0A=
    SELECT: ['<select>',               '</select>',                  1]=0A=
  }=0A=
};=0A=
=0A=
(function() {=0A=
  Object.extend(this.tags, {=0A=
    THEAD: this.tags.TBODY,=0A=
    TFOOT: this.tags.TBODY,=0A=
    TH:    this.tags.TD=0A=
  });=0A=
}).call(Element._insertionTranslations);=0A=
=0A=
Element.Methods.Simulated =3D {=0A=
  hasAttribute: function(element, attribute) {=0A=
    attribute =3D Element._attributeTranslations.has[attribute] || =
attribute;=0A=
    var node =3D $(element).getAttributeNode(attribute);=0A=
    return !!(node && node.specified);=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.ByTag =3D { };=0A=
=0A=
Object.extend(Element, Element.Methods);=0A=
=0A=
if (!Prototype.BrowserFeatures.ElementExtensions &&=0A=
    document.createElement('div')['__proto__']) {=0A=
  window.HTMLElement =3D { };=0A=
  window.HTMLElement.prototype =3D =
document.createElement('div')['__proto__'];=0A=
  Prototype.BrowserFeatures.ElementExtensions =3D true;=0A=
}=0A=
=0A=
Element.extend =3D (function() {=0A=
  if (Prototype.BrowserFeatures.SpecificElementExtensions)=0A=
    return Prototype.K;=0A=
=0A=
  var Methods =3D { }, ByTag =3D Element.Methods.ByTag;=0A=
=0A=
  var extend =3D Object.extend(function(element) {=0A=
    if (!element || element._extendedByPrototype ||=0A=
        element.nodeType !=3D 1 || element =3D=3D window) return element;=0A=
=0A=
    var methods =3D Object.clone(Methods),=0A=
      tagName =3D element.tagName.toUpperCase(), property, value;=0A=
=0A=
    // extend methods for specific tags=0A=
    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);=0A=
=0A=
    for (property in methods) {=0A=
      value =3D methods[property];=0A=
      if (Object.isFunction(value) && !(property in element))=0A=
        element[property] =3D value.methodize();=0A=
    }=0A=
=0A=
    element._extendedByPrototype =3D Prototype.emptyFunction;=0A=
    return element;=0A=
=0A=
  }, {=0A=
    refresh: function() {=0A=
      // extend methods for all tags (Safari doesn't need this)=0A=
      if (!Prototype.BrowserFeatures.ElementExtensions) {=0A=
        Object.extend(Methods, Element.Methods);=0A=
        Object.extend(Methods, Element.Methods.Simulated);=0A=
      }=0A=
    }=0A=
  });=0A=
=0A=
  extend.refresh();=0A=
  return extend;=0A=
})();=0A=
=0A=
Element.hasAttribute =3D function(element, attribute) {=0A=
  if (element.hasAttribute) return element.hasAttribute(attribute);=0A=
  return Element.Methods.Simulated.hasAttribute(element, attribute);=0A=
};=0A=
=0A=
Element.addMethods =3D function(methods) {=0A=
  var F =3D Prototype.BrowserFeatures, T =3D Element.Methods.ByTag;=0A=
=0A=
  if (!methods) {=0A=
    Object.extend(Form, Form.Methods);=0A=
    Object.extend(Form.Element, Form.Element.Methods);=0A=
    Object.extend(Element.Methods.ByTag, {=0A=
      "FORM":     Object.clone(Form.Methods),=0A=
      "INPUT":    Object.clone(Form.Element.Methods),=0A=
      "SELECT":   Object.clone(Form.Element.Methods),=0A=
      "TEXTAREA": Object.clone(Form.Element.Methods)=0A=
    });=0A=
  }=0A=
=0A=
  if (arguments.length =3D=3D 2) {=0A=
    var tagName =3D methods;=0A=
    methods =3D arguments[1];=0A=
  }=0A=
=0A=
  if (!tagName) Object.extend(Element.Methods, methods || { });=0A=
  else {=0A=
    if (Object.isArray(tagName)) tagName.each(extend);=0A=
    else extend(tagName);=0A=
  }=0A=
=0A=
  function extend(tagName) {=0A=
    tagName =3D tagName.toUpperCase();=0A=
    if (!Element.Methods.ByTag[tagName])=0A=
      Element.Methods.ByTag[tagName] =3D { };=0A=
    Object.extend(Element.Methods.ByTag[tagName], methods);=0A=
  }=0A=
=0A=
  function copy(methods, destination, onlyIfAbsent) {=0A=
    onlyIfAbsent =3D onlyIfAbsent || false;=0A=
    for (var property in methods) {=0A=
      var value =3D methods[property];=0A=
      if (!Object.isFunction(value)) continue;=0A=
      if (!onlyIfAbsent || !(property in destination))=0A=
        destination[property] =3D value.methodize();=0A=
    }=0A=
  }=0A=
=0A=
  function findDOMClass(tagName) {=0A=
    var klass;=0A=
    var trans =3D {=0A=
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",=0A=
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": =
"DList",=0A=
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": =
"Heading",=0A=
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",=0A=
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", =
"CAPTION":=0A=
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":=0A=
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", =
"TR":=0A=
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":=0A=
      "FrameSet", "IFRAME": "IFrame"=0A=
    };=0A=
    if (trans[tagName]) klass =3D 'HTML' + trans[tagName] + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName.capitalize() + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
=0A=
    window[klass] =3D { };=0A=
    window[klass].prototype =3D =
document.createElement(tagName)['__proto__'];=0A=
    return window[klass];=0A=
  }=0A=
=0A=
  if (F.ElementExtensions) {=0A=
    copy(Element.Methods, HTMLElement.prototype);=0A=
    copy(Element.Methods.Simulated, HTMLElement.prototype, true);=0A=
  }=0A=
=0A=
  if (F.SpecificElementExtensions) {=0A=
    for (var tag in Element.Methods.ByTag) {=0A=
      var klass =3D findDOMClass(tag);=0A=
      if (Object.isUndefined(klass)) continue;=0A=
      copy(T[tag], klass.prototype);=0A=
    }=0A=
  }=0A=
=0A=
  Object.extend(Element, Element.Methods);=0A=
  delete Element.ByTag;=0A=
=0A=
  if (Element.extend.refresh) Element.extend.refresh();=0A=
  Element.cache =3D { };=0A=
};=0A=
=0A=
document.viewport =3D {=0A=
  getDimensions: function() {=0A=
    var dimensions =3D { }, B =3D Prototype.Browser;=0A=
    $w('width height').each(function(d) {=0A=
      var D =3D d.capitalize();=0A=
      if (B.WebKit && !document.evaluate) {=0A=
        // Safari <3.0 needs self.innerWidth/Height=0A=
        dimensions[d] =3D self['inner' + D];=0A=
      } else if (B.Opera && parseFloat(window.opera.version()) < 9.5) {=0A=
        // Opera <9.5 needs document.body.clientWidth/Height=0A=
        dimensions[d] =3D document.body['client' + D]=0A=
      } else {=0A=
        dimensions[d] =3D document.documentElement['client' + D];=0A=
      }=0A=
    });=0A=
    return dimensions;=0A=
  },=0A=
=0A=
  getWidth: function() {=0A=
    return this.getDimensions().width;=0A=
  },=0A=
=0A=
  getHeight: function() {=0A=
    return this.getDimensions().height;=0A=
  },=0A=
=0A=
  getScrollOffsets: function() {=0A=
    return Element._returnOffset(=0A=
      window.pageXOffset || document.documentElement.scrollLeft || =
document.body.scrollLeft,=0A=
      window.pageYOffset || document.documentElement.scrollTop || =
document.body.scrollTop);=0A=
  }=0A=
};=0A=
/* Portions of the Selector class are derived from Jack Slocum's =
DomQuery,=0A=
 * part of YUI-Ext version 0.40, distributed under the terms of an =
MIT-style=0A=
 * license.  Please see http://www.yui-ext.com/ for more information. */=0A=
=0A=
var Selector =3D Class.create({=0A=
  initialize: function(expression) {=0A=
    this.expression =3D expression.strip();=0A=
=0A=
    if (this.shouldUseSelectorsAPI()) {=0A=
      this.mode =3D 'selectorsAPI';=0A=
    } else if (this.shouldUseXPath()) {=0A=
      this.mode =3D 'xpath';=0A=
      this.compileXPathMatcher();=0A=
    } else {=0A=
      this.mode =3D "normal";=0A=
      this.compileMatcher();=0A=
    }=0A=
=0A=
  },=0A=
=0A=
  shouldUseXPath: function() {=0A=
    if (!Prototype.BrowserFeatures.XPath) return false;=0A=
=0A=
    var e =3D this.expression;=0A=
=0A=
    // Safari 3 chokes on :*-of-type and :empty=0A=
    if (Prototype.Browser.WebKit &&=0A=
     (e.include("-of-type") || e.include(":empty")))=0A=
      return false;=0A=
=0A=
    // XPath can't do namespaced attributes, nor can it read=0A=
    // the "checked" property from DOM nodes=0A=
    if ((/(\[[\w-]*?:|:checked)/).test(e))=0A=
      return false;=0A=
=0A=
    return true;=0A=
  },=0A=
=0A=
  shouldUseSelectorsAPI: function() {=0A=
    if (!Prototype.BrowserFeatures.SelectorsAPI) return false;=0A=
=0A=
    if (!Selector._div) Selector._div =3D new Element('div');=0A=
=0A=
    // Make sure the browser treats the selector as valid. Test on an=0A=
    // isolated element to minimize cost of this check.=0A=
    try {=0A=
      Selector._div.querySelector(this.expression);=0A=
    } catch(e) {=0A=
      return false;=0A=
    }=0A=
=0A=
    return true;=0A=
  },=0A=
=0A=
  compileMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns, h =3D =
Selector.handlers,=0A=
        c =3D Selector.criteria, le, p, m;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.matcher =3D Selector._cache[e];=0A=
      return;=0A=
    }=0A=
=0A=
    this.matcher =3D ["this.matcher =3D function(root) {",=0A=
                    "var r =3D root, h =3D Selector.handlers, c =3D =
false, n;"];=0A=
=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        p =3D ps[i];=0A=
        if (m =3D e.match(p)) {=0A=
          this.matcher.push(Object.isFunction(c[i]) ? c[i](m) :=0A=
            new Template(c[i]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.matcher.push("return h.unique(n);\n}");=0A=
    eval(this.matcher.join('\n'));=0A=
    Selector._cache[this.expression] =3D this.matcher;=0A=
  },=0A=
=0A=
  compileXPathMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns,=0A=
        x =3D Selector.xpath, le, m;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.xpath =3D Selector._cache[e]; return;=0A=
    }=0A=
=0A=
    this.matcher =3D ['.//*'];=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        if (m =3D e.match(ps[i])) {=0A=
          this.matcher.push(Object.isFunction(x[i]) ? x[i](m) :=0A=
            new Template(x[i]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.xpath =3D this.matcher.join('');=0A=
    Selector._cache[this.expression] =3D this.xpath;=0A=
  },=0A=
=0A=
  findElements: function(root) {=0A=
    root =3D root || document;=0A=
    var e =3D this.expression, results;=0A=
=0A=
    switch (this.mode) {=0A=
      case 'selectorsAPI':=0A=
        // querySelectorAll queries document-wide, then filters to =
descendants=0A=
        // of the context element. That's not what we want.=0A=
        // Add an explicit context to the selector if necessary.=0A=
        if (root !=3D=3D document) {=0A=
          var oldId =3D root.id, id =3D $(root).identify();=0A=
          e =3D "#" + id + " " + e;=0A=
        }=0A=
=0A=
        results =3D $A(root.querySelectorAll(e)).map(Element.extend);=0A=
        root.id =3D oldId;=0A=
=0A=
        return results;=0A=
      case 'xpath':=0A=
        return document._getElementsByXPath(this.xpath, root);=0A=
      default:=0A=
       return this.matcher(root);=0A=
    }=0A=
  },=0A=
=0A=
  match: function(element) {=0A=
    this.tokens =3D [];=0A=
=0A=
    var e =3D this.expression, ps =3D Selector.patterns, as =3D =
Selector.assertions;=0A=
    var le, p, m;=0A=
=0A=
    while (e && le !=3D=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i in ps) {=0A=
        p =3D ps[i];=0A=
        if (m =3D e.match(p)) {=0A=
          // use the Selector.assertions methods unless the selector=0A=
          // is too complex.=0A=
          if (as[i]) {=0A=
            this.tokens.push([i, Object.clone(m)]);=0A=
            e =3D e.replace(m[0], '');=0A=
          } else {=0A=
            // reluctantly do a document-wide search=0A=
            // and look for a match in the array=0A=
            return this.findElements(document).include(element);=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    var match =3D true, name, matches;=0A=
    for (var i =3D 0, token; token =3D this.tokens[i]; i++) {=0A=
      name =3D token[0], matches =3D token[1];=0A=
      if (!Selector.assertions[name](element, matches)) {=0A=
        match =3D false; break;=0A=
      }=0A=
    }=0A=
=0A=
    return match;=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return this.expression;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return "#<Selector:" + this.expression.inspect() + ">";=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Selector, {=0A=
  _cache: { },=0A=
=0A=
  xpath: {=0A=
    descendant:   "//*",=0A=
    child:        "/*",=0A=
    adjacent:     "/following-sibling::*[1]",=0A=
    laterSibling: '/following-sibling::*',=0A=
    tagName:      function(m) {=0A=
      if (m[1] =3D=3D '*') return '';=0A=
      return "[local-name()=3D'" + m[1].toLowerCase() +=0A=
             "' or local-name()=3D'" + m[1].toUpperCase() + "']";=0A=
    },=0A=
    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",=0A=
    id:           "[@id=3D'#{1}']",=0A=
    attrPresence: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      return new Template("[@#{1}]").evaluate(m);=0A=
    },=0A=
    attr: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      m[3] =3D m[5] || m[6];=0A=
      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      var h =3D Selector.xpath.pseudos[m[1]];=0A=
      if (!h) return '';=0A=
      if (Object.isFunction(h)) return h(m);=0A=
      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);=0A=
    },=0A=
    operators: {=0A=
      '=3D':  "[@#{1}=3D'#{3}']",=0A=
      '!=3D': "[@#{1}!=3D'#{3}']",=0A=
      '^=3D': "[starts-with(@#{1}, '#{3}')]",=0A=
      '$=3D': "[substring(@#{1}, (string-length(@#{1}) - =
string-length('#{3}') + 1))=3D'#{3}']",=0A=
      '*=3D': "[contains(@#{1}, '#{3}')]",=0A=
      '~=3D': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",=0A=
      '|=3D': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"=0A=
    },=0A=
    pseudos: {=0A=
      'first-child': '[not(preceding-sibling::*)]',=0A=
      'last-child':  '[not(following-sibling::*)]',=0A=
      'only-child':  '[not(preceding-sibling::* or =
following-sibling::*)]',=0A=
      'empty':       "[count(*) =3D 0 and (count(text()) =3D 0)]",=0A=
      'checked':     "[@checked]",=0A=
      'disabled':    "[(@disabled) and (@type!=3D'hidden')]",=0A=
      'enabled':     "[not(@disabled) and (@type!=3D'hidden')]",=0A=
      'not': function(m) {=0A=
        var e =3D m[6], p =3D Selector.patterns,=0A=
            x =3D Selector.xpath, le, v;=0A=
=0A=
        var exclusion =3D [];=0A=
        while (e && le !=3D e && (/\S/).test(e)) {=0A=
          le =3D e;=0A=
          for (var i in p) {=0A=
            if (m =3D e.match(p[i])) {=0A=
              v =3D Object.isFunction(x[i]) ? x[i](m) : new =
Template(x[i]).evaluate(m);=0A=
              exclusion.push("(" + v.substring(1, v.length - 1) + ")");=0A=
              e =3D e.replace(m[0], '');=0A=
              break;=0A=
            }=0A=
          }=0A=
        }=0A=
        return "[not(" + exclusion.join(" and ") + ")]";=0A=
      },=0A=
      'nth-child':      function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-last-child': function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-of-type':    function(m) {=0A=
        return Selector.xpath.pseudos.nth("position() ", m);=0A=
      },=0A=
      'nth-last-of-type': function(m) {=0A=
        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", =
m);=0A=
      },=0A=
      'first-of-type':  function(m) {=0A=
        m[6] =3D "1"; return Selector.xpath.pseudos['nth-of-type'](m);=0A=
      },=0A=
      'last-of-type':   function(m) {=0A=
        m[6] =3D "1"; return =
Selector.xpath.pseudos['nth-last-of-type'](m);=0A=
      },=0A=
      'only-of-type':   function(m) {=0A=
        var p =3D Selector.xpath.pseudos; return p['first-of-type'](m) + =
p['last-of-type'](m);=0A=
      },=0A=
      nth: function(fragment, m) {=0A=
        var mm, formula =3D m[6], predicate;=0A=
        if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
        if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
        if (mm =3D formula.match(/^(\d+)$/)) // digit only=0A=
          return '[' + fragment + "=3D " + mm[1] + ']';=0A=
        if (mm =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b=0A=
          if (mm[1] =3D=3D "-") mm[1] =3D -1;=0A=
          var a =3D mm[1] ? Number(mm[1]) : 1;=0A=
          var b =3D mm[2] ? Number(mm[2]) : 0;=0A=
          predicate =3D "[((#{fragment} - #{b}) mod #{a} =3D 0) and " +=0A=
          "((#{fragment} - #{b}) div #{a} >=3D 0)]";=0A=
          return new Template(predicate).evaluate({=0A=
            fragment: fragment, a: a, b: b });=0A=
        }=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  criteria: {=0A=
    tagName:      'n =3D h.tagName(n, r, "#{1}", c);      c =3D false;',=0A=
    className:    'n =3D h.className(n, r, "#{1}", c);    c =3D false;',=0A=
    id:           'n =3D h.id(n, r, "#{1}", c);           c =3D false;',=0A=
    attrPresence: 'n =3D h.attrPresence(n, r, "#{1}", c); c =3D false;',=0A=
    attr: function(m) {=0A=
      m[3] =3D (m[5] || m[6]);=0A=
      return new Template('n =3D h.attr(n, r, "#{1}", "#{3}", "#{2}", =
c); c =3D false;').evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      if (m[6]) m[6] =3D m[6].replace(/"/g, '\\"');=0A=
      return new Template('n =3D h.pseudo(n, "#{1}", "#{6}", r, c); c =
=3D false;').evaluate(m);=0A=
    },=0A=
    descendant:   'c =3D "descendant";',=0A=
    child:        'c =3D "child";',=0A=
    adjacent:     'c =3D "adjacent";',=0A=
    laterSibling: 'c =3D "laterSibling";'=0A=
  },=0A=
=0A=
  patterns: {=0A=
    // combinators must be listed first=0A=
    // (and descendant needs to be last combinator)=0A=
    laterSibling: /^\s*~\s*/,=0A=
    child:        /^\s*>\s*/,=0A=
    adjacent:     /^\s*\+\s*/,=0A=
    descendant:   /^\s/,=0A=
=0A=
    // selectors follow=0A=
    tagName:      /^\s*(\*|[\w\-]+)(\b|$)?/,=0A=
    id:           /^#([\w\-\*]+)(\b|$)/,=0A=
    className:    /^\.([\w\-\*]+)(\b|$)/,=0A=
    pseudo:=0A=
/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis=
)abled|not)(\((.*?)\))?(\b|$|(?=3D\s|[:+~>]))/,=0A=
    attrPresence: /^\[((?:[\w]+:)?[\w]+)\]/,=0A=
    attr:         =
/\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=3D)\s*((['"])([^\4]*?)\4|([^'"][^=
\]]*?)))?\]/=0A=
  },=0A=
=0A=
  // for Selector.match and Element#match=0A=
  assertions: {=0A=
    tagName: function(element, matches) {=0A=
      return matches[1].toUpperCase() =3D=3D =
element.tagName.toUpperCase();=0A=
    },=0A=
=0A=
    className: function(element, matches) {=0A=
      return Element.hasClassName(element, matches[1]);=0A=
    },=0A=
=0A=
    id: function(element, matches) {=0A=
      return element.id =3D=3D=3D matches[1];=0A=
    },=0A=
=0A=
    attrPresence: function(element, matches) {=0A=
      return Element.hasAttribute(element, matches[1]);=0A=
    },=0A=
=0A=
    attr: function(element, matches) {=0A=
      var nodeValue =3D Element.readAttribute(element, matches[1]);=0A=
      return nodeValue && Selector.operators[matches[2]](nodeValue, =
matches[5] || matches[6]);=0A=
    }=0A=
  },=0A=
=0A=
  handlers: {=0A=
    // UTILITY FUNCTIONS=0A=
    // joins two collections=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    // marks an array of nodes for counting=0A=
    mark: function(nodes) {=0A=
      var _true =3D Prototype.emptyFunction;=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D _true;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    unmark: function(nodes) {=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D undefined;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    // mark each child node with its position (for nth calls)=0A=
    // "ofType" flag indicates whether we're indexing for nth-of-type=0A=
    // rather than nth-child=0A=
    index: function(parentNode, reverse, ofType) {=0A=
      parentNode._countedByPrototype =3D Prototype.emptyFunction;=0A=
      if (reverse) {=0A=
        for (var nodes =3D parentNode.childNodes, i =3D nodes.length - =
1, j =3D 1; i >=3D 0; i--) {=0A=
          var node =3D nodes[i];=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
        }=0A=
      } else {=0A=
        for (var i =3D 0, j =3D 1, nodes =3D parentNode.childNodes; node =
=3D nodes[i]; i++)=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
      }=0A=
    },=0A=
=0A=
    // filters out duplicates and extends all nodes=0A=
    unique: function(nodes) {=0A=
      if (nodes.length =3D=3D 0) return nodes;=0A=
      var results =3D [], n;=0A=
      for (var i =3D 0, l =3D nodes.length; i < l; i++)=0A=
        if (!(n =3D nodes[i])._countedByPrototype) {=0A=
          n._countedByPrototype =3D Prototype.emptyFunction;=0A=
          results.push(Element.extend(n));=0A=
        }=0A=
      return Selector.handlers.unmark(results);=0A=
    },=0A=
=0A=
    // COMBINATOR FUNCTIONS=0A=
    descendant: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, node.getElementsByTagName('*'));=0A=
      return results;=0A=
    },=0A=
=0A=
    child: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        for (var j =3D 0, child; child =3D node.childNodes[j]; j++)=0A=
          if (child.nodeType =3D=3D 1 && child.tagName !=3D '!') =
results.push(child);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    adjacent: function(nodes) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        var next =3D this.nextElementSibling(node);=0A=
        if (next) results.push(next);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    laterSibling: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, Element.nextSiblings(node));=0A=
      return results;=0A=
    },=0A=
=0A=
    nextElementSibling: function(node) {=0A=
      while (node =3D node.nextSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    previousElementSibling: function(node) {=0A=
      while (node =3D node.previousSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    // TOKEN FUNCTIONS=0A=
    tagName: function(nodes, root, tagName, combinator) {=0A=
      var uTagName =3D tagName.toUpperCase();=0A=
      var results =3D [], h =3D Selector.handlers;=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          // fastlane for ordinary descendant combinators=0A=
          if (combinator =3D=3D "descendant") {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              h.concat(results, node.getElementsByTagName(tagName));=0A=
            return results;=0A=
          } else nodes =3D this[combinator](nodes);=0A=
          if (tagName =3D=3D "*") return nodes;=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.tagName.toUpperCase() =3D=3D=3D uTagName) =
results.push(node);=0A=
        return results;=0A=
      } else return root.getElementsByTagName(tagName);=0A=
    },=0A=
=0A=
    id: function(nodes, root, id, combinator) {=0A=
      var targetNode =3D $(id), h =3D Selector.handlers;=0A=
      if (!targetNode) return [];=0A=
      if (!nodes && root =3D=3D document) return [targetNode];=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          if (combinator =3D=3D 'child') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (targetNode.parentNode =3D=3D node) return [targetNode];=0A=
          } else if (combinator =3D=3D 'descendant') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Element.descendantOf(targetNode, node)) return =
[targetNode];=0A=
          } else if (combinator =3D=3D 'adjacent') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Selector.handlers.previousElementSibling(targetNode) =
=3D=3D node)=0A=
                return [targetNode];=0A=
          } else nodes =3D h[combinator](nodes);=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node =3D=3D targetNode) return [targetNode];=0A=
        return [];=0A=
      }=0A=
      return (targetNode && Element.descendantOf(targetNode, root)) ? =
[targetNode] : [];=0A=
    },=0A=
=0A=
    className: function(nodes, root, className, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      return Selector.handlers.byClassName(nodes, root, className);=0A=
    },=0A=
=0A=
    byClassName: function(nodes, root, className) {=0A=
      if (!nodes) nodes =3D Selector.handlers.descendant([root]);=0A=
      var needle =3D ' ' + className + ' ';=0A=
      for (var i =3D 0, results =3D [], node, nodeClassName; node =3D =
nodes[i]; i++) {=0A=
        nodeClassName =3D node.className;=0A=
        if (nodeClassName.length =3D=3D 0) continue;=0A=
        if (nodeClassName =3D=3D className || (' ' + nodeClassName + ' =
').include(needle))=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    attrPresence: function(nodes, root, attr, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        if (Element.hasAttribute(node, attr)) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    attr: function(nodes, root, attr, value, operator, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var handler =3D Selector.operators[operator], results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        var nodeValue =3D Element.readAttribute(node, attr);=0A=
        if (nodeValue =3D=3D=3D null) continue;=0A=
        if (handler(nodeValue, value)) results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    pseudo: function(nodes, name, value, root, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      return Selector.pseudos[name](nodes, value, root);=0A=
    }=0A=
  },=0A=
=0A=
  pseudos: {=0A=
    'first-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.previousElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'last-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.nextElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'only-child': function(nodes, value, root) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!h.previousElementSibling(node) && =
!h.nextElementSibling(node))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
    'nth-child':        function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root);=0A=
    },=0A=
    'nth-last-child':   function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true);=0A=
    },=0A=
    'nth-of-type':      function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, false, true);=0A=
    },=0A=
    'nth-last-of-type': function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true, true);=0A=
    },=0A=
    'first-of-type':    function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, false, true);=0A=
    },=0A=
    'last-of-type':     function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, true, true);=0A=
    },=0A=
    'only-of-type':     function(nodes, formula, root) {=0A=
      var p =3D Selector.pseudos;=0A=
      return p['last-of-type'](p['first-of-type'](nodes, formula, root), =
formula, root);=0A=
    },=0A=
=0A=
    // handles the an+b logic=0A=
    getIndices: function(a, b, total) {=0A=
      if (a =3D=3D 0) return b > 0 ? [b] : [];=0A=
      return $R(1, total).inject([], function(memo, i) {=0A=
        if (0 =3D=3D (i - b) % a && (i - b) / a >=3D 0) memo.push(i);=0A=
        return memo;=0A=
      });=0A=
    },=0A=
=0A=
    // handles nth(-last)-child, nth(-last)-of-type, and =
(first|last)-of-type=0A=
    nth: function(nodes, formula, root, reverse, ofType) {=0A=
      if (nodes.length =3D=3D 0) return [];=0A=
      if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
      if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
      var h =3D Selector.handlers, results =3D [], indexed =3D [], m;=0A=
      h.mark(nodes);=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        if (!node.parentNode._countedByPrototype) {=0A=
          h.index(node.parentNode, reverse, ofType);=0A=
          indexed.push(node.parentNode);=0A=
        }=0A=
      }=0A=
      if (formula.match(/^\d+$/)) { // just a number=0A=
        formula =3D Number(formula);=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.nodeIndex =3D=3D formula) results.push(node);=0A=
      } else if (m =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // =
an+b=0A=
        if (m[1] =3D=3D "-") m[1] =3D -1;=0A=
        var a =3D m[1] ? Number(m[1]) : 1;=0A=
        var b =3D m[2] ? Number(m[2]) : 0;=0A=
        var indices =3D Selector.pseudos.getIndices(a, b, nodes.length);=0A=
        for (var i =3D 0, node, l =3D indices.length; node =3D nodes[i]; =
i++) {=0A=
          for (var j =3D 0; j < l; j++)=0A=
            if (node.nodeIndex =3D=3D indices[j]) results.push(node);=0A=
        }=0A=
      }=0A=
      h.unmark(nodes);=0A=
      h.unmark(indexed);=0A=
      return results;=0A=
    },=0A=
=0A=
    'empty': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        // IE treats comments as element nodes=0A=
        if (node.tagName =3D=3D '!' || node.firstChild) continue;=0A=
        results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    'not': function(nodes, selector, root) {=0A=
      var h =3D Selector.handlers, selectorType, m;=0A=
      var exclusions =3D new Selector(selector).findElements(root);=0A=
      h.mark(exclusions);=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node._countedByPrototype) results.push(node);=0A=
      h.unmark(exclusions);=0A=
      return results;=0A=
    },=0A=
=0A=
    'enabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node.disabled && (!node.type || node.type !=3D=3D 'hidden'))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'disabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.disabled) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'checked': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.checked) results.push(node);=0A=
      return results;=0A=
    }=0A=
  },=0A=
=0A=
  operators: {=0A=
    '=3D':  function(nv, v) { return nv =3D=3D v; },=0A=
    '!=3D': function(nv, v) { return nv !=3D v; },=0A=
    '^=3D': function(nv, v) { return nv =3D=3D v || nv && =
nv.startsWith(v); },=0A=
    '$=3D': function(nv, v) { return nv =3D=3D v || nv && =
nv.endsWith(v); },=0A=
    '*=3D': function(nv, v) { return nv =3D=3D v || nv && nv.include(v); =
},=0A=
    '$=3D': function(nv, v) { return nv.endsWith(v); },=0A=
    '*=3D': function(nv, v) { return nv.include(v); },=0A=
    '~=3D': function(nv, v) { return (' ' + nv + ' ').include(' ' + v + =
' '); },=0A=
    '|=3D': function(nv, v) { return ('-' + (nv || "").toUpperCase() +=0A=
     '-').include('-' + (v || "").toUpperCase() + '-'); }=0A=
  },=0A=
=0A=
  split: function(expression) {=0A=
    var expressions =3D [];=0A=
    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, =
function(m) {=0A=
      expressions.push(m[1].strip());=0A=
    });=0A=
    return expressions;=0A=
  },=0A=
=0A=
  matchElements: function(elements, expression) {=0A=
    var matches =3D $$(expression), h =3D Selector.handlers;=0A=
    h.mark(matches);=0A=
    for (var i =3D 0, results =3D [], element; element =3D elements[i]; =
i++)=0A=
      if (element._countedByPrototype) results.push(element);=0A=
    h.unmark(matches);=0A=
    return results;=0A=
  },=0A=
=0A=
  findElement: function(elements, expression, index) {=0A=
    if (Object.isNumber(expression)) {=0A=
      index =3D expression; expression =3D false;=0A=
    }=0A=
    return Selector.matchElements(elements, expression || '*')[index || =
0];=0A=
  },=0A=
=0A=
  findChildElements: function(element, expressions) {=0A=
    expressions =3D Selector.split(expressions.join(','));=0A=
    var results =3D [], h =3D Selector.handlers;=0A=
    for (var i =3D 0, l =3D expressions.length, selector; i < l; i++) {=0A=
      selector =3D new Selector(expressions[i].strip());=0A=
      h.concat(results, selector.findElements(element));=0A=
    }=0A=
    return (l > 1) ? h.unique(results) : results;=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.IE) {=0A=
  Object.extend(Selector.handlers, {=0A=
    // IE returns comment nodes on getElementsByTagName("*").=0A=
    // Filter them out.=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        if (node.tagName !=3D=3D "!") a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    // IE improperly serializes _countedByPrototype in (inner|outer)HTML.=0A=
    unmark: function(nodes) {=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node.removeAttribute('_countedByPrototype');=0A=
      return nodes;=0A=
    }=0A=
  });=0A=
}=0A=
=0A=
function $$() {=0A=
  return Selector.findChildElements(document, $A(arguments));=0A=
}=0A=
var Form =3D {=0A=
  reset: function(form) {=0A=
    $(form).reset();=0A=
    return form;=0A=
  },=0A=
=0A=
  serializeElements: function(elements, options) {=0A=
    if (typeof options !=3D 'object') options =3D { hash: !!options };=0A=
    else if (Object.isUndefined(options.hash)) options.hash =3D true;=0A=
    var key, value, submitted =3D false, submit =3D options.submit;=0A=
=0A=
    var data =3D elements.inject({ }, function(result, element) {=0A=
      if (!element.disabled && element.name) {=0A=
        key =3D element.name; value =3D $(element).getValue();=0A=
        if (value !=3D null && element.type !=3D 'file' && (element.type =
!=3D 'submit' || (!submitted &&=0A=
            submit !=3D=3D false && (!submit || key =3D=3D submit) && =
(submitted =3D true)))) {=0A=
          if (key in result) {=0A=
            // a key is already present; construct an array of values=0A=
            if (!Object.isArray(result[key])) result[key] =3D =
[result[key]];=0A=
            result[key].push(value);=0A=
          }=0A=
          else result[key] =3D value;=0A=
        }=0A=
      }=0A=
      return result;=0A=
    });=0A=
=0A=
    return options.hash ? data : Object.toQueryString(data);=0A=
  }=0A=
};=0A=
=0A=
Form.Methods =3D {=0A=
  serialize: function(form, options) {=0A=
    return Form.serializeElements(Form.getElements(form), options);=0A=
  },=0A=
=0A=
  getElements: function(form) {=0A=
    return $A($(form).getElementsByTagName('*')).inject([],=0A=
      function(elements, child) {=0A=
        if (Form.Element.Serializers[child.tagName.toLowerCase()])=0A=
          elements.push(Element.extend(child));=0A=
        return elements;=0A=
      }=0A=
    );=0A=
  },=0A=
=0A=
  getInputs: function(form, typeName, name) {=0A=
    form =3D $(form);=0A=
    var inputs =3D form.getElementsByTagName('input');=0A=
=0A=
    if (!typeName && !name) return $A(inputs).map(Element.extend);=0A=
=0A=
    for (var i =3D 0, matchingInputs =3D [], length =3D inputs.length; i =
< length; i++) {=0A=
      var input =3D inputs[i];=0A=
      if ((typeName && input.type !=3D typeName) || (name && input.name =
!=3D name))=0A=
        continue;=0A=
      matchingInputs.push(Element.extend(input));=0A=
    }=0A=
=0A=
    return matchingInputs;=0A=
  },=0A=
=0A=
  disable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('disable');=0A=
    return form;=0A=
  },=0A=
=0A=
  enable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('enable');=0A=
    return form;=0A=
  },=0A=
=0A=
  findFirstElement: function(form) {=0A=
    var elements =3D $(form).getElements().findAll(function(element) {=0A=
      return 'hidden' !=3D element.type && !element.disabled;=0A=
    });=0A=
    var firstByIndex =3D elements.findAll(function(element) {=0A=
      return element.hasAttribute('tabIndex') && element.tabIndex >=3D 0;=0A=
    }).sortBy(function(element) { return element.tabIndex }).first();=0A=
=0A=
    return firstByIndex ? firstByIndex : elements.find(function(element) =
{=0A=
      return ['input', 'select', =
'textarea'].include(element.tagName.toLowerCase());=0A=
    });=0A=
  },=0A=
=0A=
  focusFirstElement: function(form) {=0A=
    form =3D $(form);=0A=
    form.findFirstElement().activate();=0A=
    return form;=0A=
  },=0A=
=0A=
  request: function(form, options) {=0A=
    form =3D $(form), options =3D Object.clone(options || { });=0A=
=0A=
    var params =3D options.parameters, action =3D =
form.readAttribute('action') || '';=0A=
    if (action.blank()) action =3D window.location.href;=0A=
    options.parameters =3D form.serialize(true);=0A=
=0A=
    if (params) {=0A=
      if (Object.isString(params)) params =3D params.toQueryParams();=0A=
      Object.extend(options.parameters, params);=0A=
    }=0A=
=0A=
    if (form.hasAttribute('method') && !options.method)=0A=
      options.method =3D form.method;=0A=
=0A=
    return new Ajax.Request(action, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element =3D {=0A=
  focus: function(element) {=0A=
    $(element).focus();=0A=
    return element;=0A=
  },=0A=
=0A=
  select: function(element) {=0A=
    $(element).select();=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Form.Element.Methods =3D {=0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element.disabled && element.name) {=0A=
      var value =3D element.getValue();=0A=
      if (value !=3D undefined) {=0A=
        var pair =3D { };=0A=
        pair[element.name] =3D value;=0A=
        return Object.toQueryString(pair);=0A=
      }=0A=
    }=0A=
    return '';=0A=
  },=0A=
=0A=
  getValue: function(element) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    return Form.Element.Serializers[method](element);=0A=
  },=0A=
=0A=
  setValue: function(element, value) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    Form.Element.Serializers[method](element, value);=0A=
    return element;=0A=
  },=0A=
=0A=
  clear: function(element) {=0A=
    $(element).value =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  present: function(element) {=0A=
    return $(element).value !=3D '';=0A=
  },=0A=
=0A=
  activate: function(element) {=0A=
    element =3D $(element);=0A=
    try {=0A=
      element.focus();=0A=
      if (element.select && (element.tagName.toLowerCase() !=3D 'input' =
||=0A=
          !['button', 'reset', 'submit'].include(element.type)))=0A=
        element.select();=0A=
    } catch (e) { }=0A=
    return element;=0A=
  },=0A=
=0A=
  disable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D true;=0A=
    return element;=0A=
  },=0A=
=0A=
  enable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D false;=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Field =3D Form.Element;=0A=
var $F =3D Form.Element.Methods.getValue;=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element.Serializers =3D {=0A=
  input: function(element, value) {=0A=
    switch (element.type.toLowerCase()) {=0A=
      case 'checkbox':=0A=
      case 'radio':=0A=
        return Form.Element.Serializers.inputSelector(element, value);=0A=
      default:=0A=
        return Form.Element.Serializers.textarea(element, value);=0A=
    }=0A=
  },=0A=
=0A=
  inputSelector: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.checked ? =
element.value : null;=0A=
    else element.checked =3D !!value;=0A=
  },=0A=
=0A=
  textarea: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.value;=0A=
    else element.value =3D value;=0A=
  },=0A=
=0A=
  select: function(element, value) {=0A=
    if (Object.isUndefined(value))=0A=
      return this[element.type =3D=3D 'select-one' ?=0A=
        'selectOne' : 'selectMany'](element);=0A=
    else {=0A=
      var opt, currentValue, single =3D !Object.isArray(value);=0A=
      for (var i =3D 0, length =3D element.length; i < length; i++) {=0A=
        opt =3D element.options[i];=0A=
        currentValue =3D this.optionValue(opt);=0A=
        if (single) {=0A=
          if (currentValue =3D=3D value) {=0A=
            opt.selected =3D true;=0A=
            return;=0A=
          }=0A=
        }=0A=
        else opt.selected =3D value.include(currentValue);=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  selectOne: function(element) {=0A=
    var index =3D element.selectedIndex;=0A=
    return index >=3D 0 ? this.optionValue(element.options[index]) : =
null;=0A=
  },=0A=
=0A=
  selectMany: function(element) {=0A=
    var values, length =3D element.length;=0A=
    if (!length) return null;=0A=
=0A=
    for (var i =3D 0, values =3D []; i < length; i++) {=0A=
      var opt =3D element.options[i];=0A=
      if (opt.selected) values.push(this.optionValue(opt));=0A=
    }=0A=
    return values;=0A=
  },=0A=
=0A=
  optionValue: function(opt) {=0A=
    // extend element because hasAttribute may not be native=0A=
    return Element.extend(opt).hasAttribute('value') ? opt.value : =
opt.text;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.TimedObserver =3D Class.create(PeriodicalExecuter, {=0A=
  initialize: function($super, element, frequency, callback) {=0A=
    $super(callback, frequency);=0A=
    this.element   =3D $(element);=0A=
    this.lastValue =3D this.getValue();=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    var value =3D this.getValue();=0A=
    if (Object.isString(this.lastValue) && Object.isString(value) ?=0A=
        this.lastValue !=3D value : String(this.lastValue) !=3D =
String(value)) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.EventObserver =3D Class.create({=0A=
  initialize: function(element, callback) {=0A=
    this.element  =3D $(element);=0A=
    this.callback =3D callback;=0A=
=0A=
    this.lastValue =3D this.getValue();=0A=
    if (this.element.tagName.toLowerCase() =3D=3D 'form')=0A=
      this.registerFormCallbacks();=0A=
    else=0A=
      this.registerCallback(this.element);=0A=
  },=0A=
=0A=
  onElementEvent: function() {=0A=
    var value =3D this.getValue();=0A=
    if (this.lastValue !=3D value) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  },=0A=
=0A=
  registerFormCallbacks: function() {=0A=
    Form.getElements(this.element).each(this.registerCallback, this);=0A=
  },=0A=
=0A=
  registerCallback: function(element) {=0A=
    if (element.type) {=0A=
      switch (element.type.toLowerCase()) {=0A=
        case 'checkbox':=0A=
        case 'radio':=0A=
          Event.observe(element, 'click', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
        default:=0A=
          Event.observe(element, 'change', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
if (!window.Event) var Event =3D { };=0A=
=0A=
Object.extend(Event, {=0A=
  KEY_BACKSPACE: 8,=0A=
  KEY_TAB:       9,=0A=
  KEY_RETURN:   13,=0A=
  KEY_ESC:      27,=0A=
  KEY_LEFT:     37,=0A=
  KEY_UP:       38,=0A=
  KEY_RIGHT:    39,=0A=
  KEY_DOWN:     40,=0A=
  KEY_DELETE:   46,=0A=
  KEY_HOME:     36,=0A=
  KEY_END:      35,=0A=
  KEY_PAGEUP:   33,=0A=
  KEY_PAGEDOWN: 34,=0A=
  KEY_INSERT:   45,=0A=
=0A=
  cache: { },=0A=
=0A=
  relatedTarget: function(event) {=0A=
    var element;=0A=
    switch(event.type) {=0A=
      case 'mouseover': element =3D event.fromElement; break;=0A=
      case 'mouseout':  element =3D event.toElement;   break;=0A=
      default: return null;=0A=
    }=0A=
    return Element.extend(element);=0A=
  }=0A=
});=0A=
=0A=
Event.Methods =3D (function() {=0A=
  var isButton;=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    var buttonMap =3D { 0: 1, 1: 4, 2: 2 };=0A=
    isButton =3D function(event, code) {=0A=
      return event.button =3D=3D buttonMap[code];=0A=
    };=0A=
=0A=
  } else if (Prototype.Browser.WebKit) {=0A=
    isButton =3D function(event, code) {=0A=
      switch (code) {=0A=
        case 0: return event.which =3D=3D 1 && !event.metaKey;=0A=
        case 1: return event.which =3D=3D 1 && event.metaKey;=0A=
        default: return false;=0A=
      }=0A=
    };=0A=
=0A=
  } else {=0A=
    isButton =3D function(event, code) {=0A=
      return event.which ? (event.which =3D=3D=3D code + 1) : =
(event.button =3D=3D=3D code);=0A=
    };=0A=
  }=0A=
=0A=
  return {=0A=
    isLeftClick:   function(event) { return isButton(event, 0) },=0A=
    isMiddleClick: function(event) { return isButton(event, 1) },=0A=
    isRightClick:  function(event) { return isButton(event, 2) },=0A=
=0A=
    element: function(event) {=0A=
      event =3D Event.extend(event);=0A=
=0A=
      var node          =3D event.target,=0A=
          type          =3D event.type,=0A=
          currentTarget =3D event.currentTarget;=0A=
=0A=
      if (currentTarget && currentTarget.tagName) {=0A=
        // Firefox screws up the "click" event when moving between radio =
buttons=0A=
        // via arrow keys. It also screws up the "load" and "error" =
events on images,=0A=
        // reporting the document as the target instead of the original =
image.=0A=
        if (type =3D=3D=3D 'load' || type =3D=3D=3D 'error' ||=0A=
          (type =3D=3D=3D 'click' && currentTarget.tagName.toLowerCase() =
=3D=3D=3D 'input'=0A=
            && currentTarget.type =3D=3D=3D 'radio'))=0A=
              node =3D currentTarget;=0A=
      }=0A=
      if (node.nodeType =3D=3D Node.TEXT_NODE) node =3D node.parentNode;=0A=
      return Element.extend(node);=0A=
    },=0A=
=0A=
    findElement: function(event, expression) {=0A=
      var element =3D Event.element(event);=0A=
      if (!expression) return element;=0A=
      var elements =3D [element].concat(element.ancestors());=0A=
      return Selector.findElement(elements, expression, 0);=0A=
    },=0A=
=0A=
    pointer: function(event) {=0A=
      var docElement =3D document.documentElement,=0A=
      body =3D document.body || { scrollLeft: 0, scrollTop: 0 };=0A=
      return {=0A=
        x: event.pageX || (event.clientX +=0A=
          (docElement.scrollLeft || body.scrollLeft) -=0A=
          (docElement.clientLeft || 0)),=0A=
        y: event.pageY || (event.clientY +=0A=
          (docElement.scrollTop || body.scrollTop) -=0A=
          (docElement.clientTop || 0))=0A=
      };=0A=
    },=0A=
=0A=
    pointerX: function(event) { return Event.pointer(event).x },=0A=
    pointerY: function(event) { return Event.pointer(event).y },=0A=
=0A=
    stop: function(event) {=0A=
      Event.extend(event);=0A=
      event.preventDefault();=0A=
      event.stopPropagation();=0A=
      event.stopped =3D true;=0A=
    }=0A=
  };=0A=
})();=0A=
=0A=
Event.extend =3D (function() {=0A=
  var methods =3D Object.keys(Event.Methods).inject({ }, function(m, =
name) {=0A=
    m[name] =3D Event.Methods[name].methodize();=0A=
    return m;=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    Object.extend(methods, {=0A=
      stopPropagation: function() { this.cancelBubble =3D true },=0A=
      preventDefault:  function() { this.returnValue =3D false },=0A=
      inspect: function() { return "[object Event]" }=0A=
    });=0A=
=0A=
    return function(event) {=0A=
      if (!event) return false;=0A=
      if (event._extendedByPrototype) return event;=0A=
=0A=
      event._extendedByPrototype =3D Prototype.emptyFunction;=0A=
      var pointer =3D Event.pointer(event);=0A=
      Object.extend(event, {=0A=
        target: event.srcElement,=0A=
        relatedTarget: Event.relatedTarget(event),=0A=
        pageX:  pointer.x,=0A=
        pageY:  pointer.y=0A=
      });=0A=
      return Object.extend(event, methods);=0A=
    };=0A=
=0A=
  } else {=0A=
    Event.prototype =3D Event.prototype || =
document.createEvent("HTMLEvents")['__proto__'];=0A=
    Object.extend(Event.prototype, methods);=0A=
    return Prototype.K;=0A=
  }=0A=
})();=0A=
=0A=
Object.extend(Event, (function() {=0A=
  var cache =3D Event.cache;=0A=
=0A=
  function getEventID(element) {=0A=
    if (element._prototypeEventID) return element._prototypeEventID[0];=0A=
    arguments.callee.id =3D arguments.callee.id || 1;=0A=
    return element._prototypeEventID =3D [++arguments.callee.id];=0A=
  }=0A=
=0A=
  function getDOMEventName(eventName) {=0A=
    if (eventName && eventName.include(':')) return "dataavailable";=0A=
    return eventName;=0A=
  }=0A=
=0A=
  function getCacheForID(id) {=0A=
    return cache[id] =3D cache[id] || { };=0A=
  }=0A=
=0A=
  function getWrappersForEventName(id, eventName) {=0A=
    var c =3D getCacheForID(id);=0A=
    return c[eventName] =3D c[eventName] || [];=0A=
  }=0A=
=0A=
  function createWrapper(element, eventName, handler) {=0A=
    var id =3D getEventID(element);=0A=
    var c =3D getWrappersForEventName(id, eventName);=0A=
    if (c.pluck("handler").include(handler)) return false;=0A=
=0A=
    var wrapper =3D function(event) {=0A=
      if (!Event || !Event.extend ||=0A=
        (event.eventName && event.eventName !=3D eventName))=0A=
          return false;=0A=
=0A=
      Event.extend(event);=0A=
      handler.call(element, event);=0A=
    };=0A=
=0A=
    wrapper.handler =3D handler;=0A=
    c.push(wrapper);=0A=
    return wrapper;=0A=
  }=0A=
=0A=
  function findWrapper(id, eventName, handler) {=0A=
    var c =3D getWrappersForEventName(id, eventName);=0A=
    return c.find(function(wrapper) { return wrapper.handler =3D=3D =
handler });=0A=
  }=0A=
=0A=
  function destroyWrapper(id, eventName, handler) {=0A=
    var c =3D getCacheForID(id);=0A=
    if (!c[eventName]) return false;=0A=
    c[eventName] =3D c[eventName].without(findWrapper(id, eventName, =
handler));=0A=
  }=0A=
=0A=
  function destroyCache() {=0A=
    for (var id in cache)=0A=
      for (var eventName in cache[id])=0A=
        cache[id][eventName] =3D null;=0A=
  }=0A=
=0A=
=0A=
  // Internet Explorer needs to remove event handlers on page unload=0A=
  // in order to avoid memory leaks.=0A=
  if (window.attachEvent) {=0A=
    window.attachEvent("onunload", destroyCache);=0A=
  }=0A=
=0A=
  // Safari has a dummy event handler on page unload so that it won't=0A=
  // use its bfcache. Safari <=3D 3.1 has an issue with restoring the =
"document"=0A=
  // object when page is returned to via the back button using its =
bfcache.=0A=
  if (Prototype.Browser.WebKit) {=0A=
    window.addEventListener('unload', Prototype.emptyFunction, false);=0A=
  }=0A=
=0A=
  return {=0A=
    observe: function(element, eventName, handler) {=0A=
      element =3D $(element);=0A=
      var name =3D getDOMEventName(eventName);=0A=
=0A=
      var wrapper =3D createWrapper(element, eventName, handler);=0A=
      if (!wrapper) return element;=0A=
=0A=
      if (element.addEventListener) {=0A=
        element.addEventListener(name, wrapper, false);=0A=
      } else {=0A=
        element.attachEvent("on" + name, wrapper);=0A=
      }=0A=
=0A=
      return element;=0A=
    },=0A=
=0A=
    stopObserving: function(element, eventName, handler) {=0A=
      element =3D $(element);=0A=
      var id =3D getEventID(element), name =3D =
getDOMEventName(eventName);=0A=
=0A=
      if (!handler && eventName) {=0A=
        getWrappersForEventName(id, eventName).each(function(wrapper) {=0A=
          element.stopObserving(eventName, wrapper.handler);=0A=
        });=0A=
        return element;=0A=
=0A=
      } else if (!eventName) {=0A=
        Object.keys(getCacheForID(id)).each(function(eventName) {=0A=
          element.stopObserving(eventName);=0A=
        });=0A=
        return element;=0A=
      }=0A=
=0A=
      var wrapper =3D findWrapper(id, eventName, handler);=0A=
      if (!wrapper) return element;=0A=
=0A=
      if (element.removeEventListener) {=0A=
        element.removeEventListener(name, wrapper, false);=0A=
      } else {=0A=
        element.detachEvent("on" + name, wrapper);=0A=
      }=0A=
=0A=
      destroyWrapper(id, eventName, handler);=0A=
=0A=
      return element;=0A=
    },=0A=
=0A=
    fire: function(element, eventName, memo) {=0A=
      element =3D $(element);=0A=
      if (element =3D=3D document && document.createEvent && =
!element.dispatchEvent)=0A=
        element =3D document.documentElement;=0A=
=0A=
      var event;=0A=
      if (document.createEvent) {=0A=
        event =3D document.createEvent("HTMLEvents");=0A=
        event.initEvent("dataavailable", true, true);=0A=
      } else {=0A=
        event =3D document.createEventObject();=0A=
        event.eventType =3D "ondataavailable";=0A=
      }=0A=
=0A=
      event.eventName =3D eventName;=0A=
      event.memo =3D memo || { };=0A=
=0A=
      if (document.createEvent) {=0A=
        element.dispatchEvent(event);=0A=
      } else {=0A=
        element.fireEvent(event.eventType, event);=0A=
      }=0A=
=0A=
      return Event.extend(event);=0A=
    }=0A=
  };=0A=
})());=0A=
=0A=
Object.extend(Event, Event.Methods);=0A=
=0A=
Element.addMethods({=0A=
  fire:          Event.fire,=0A=
  observe:       Event.observe,=0A=
  stopObserving: Event.stopObserving=0A=
});=0A=
=0A=
Object.extend(document, {=0A=
  fire:          Element.Methods.fire.methodize(),=0A=
  observe:       Element.Methods.observe.methodize(),=0A=
  stopObserving: Element.Methods.stopObserving.methodize(),=0A=
  loaded:        false=0A=
});=0A=
=0A=
(function() {=0A=
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,=0A=
     Matthias Miller, Dean Edwards and John Resig. */=0A=
=0A=
  var timer;=0A=
=0A=
  function fireContentLoadedEvent() {=0A=
    if (document.loaded) return;=0A=
    if (timer) window.clearInterval(timer);=0A=
    document.fire("dom:loaded");=0A=
    document.loaded =3D true;=0A=
  }=0A=
=0A=
  if (document.addEventListener) {=0A=
    if (Prototype.Browser.WebKit) {=0A=
      timer =3D window.setInterval(function() {=0A=
        if (/loaded|complete/.test(document.readyState))=0A=
          fireContentLoadedEvent();=0A=
      }, 0);=0A=
=0A=
      Event.observe(window, "load", fireContentLoadedEvent);=0A=
=0A=
    } else {=0A=
      document.addEventListener("DOMContentLoaded",=0A=
        fireContentLoadedEvent, false);=0A=
    }=0A=
=0A=
  } else {=0A=
    document.write("<script id=3D__onDOMContentLoaded defer =
src=3D//:><\/script>");=0A=
    $("__onDOMContentLoaded").onreadystatechange =3D function() {=0A=
      if (this.readyState =3D=3D "complete") {=0A=
        this.onreadystatechange =3D null;=0A=
        fireContentLoadedEvent();=0A=
      }=0A=
    };=0A=
  }=0A=
})();=0A=
/*------------------------------- DEPRECATED =
-------------------------------*/=0A=
=0A=
Hash.toQueryString =3D Object.toQueryString;=0A=
=0A=
var Toggle =3D { display: Element.toggle };=0A=
=0A=
Element.Methods.childOf =3D Element.Methods.descendantOf;=0A=
=0A=
var Insertion =3D {=0A=
  Before: function(element, content) {=0A=
    return Element.insert(element, {before:content});=0A=
  },=0A=
=0A=
  Top: function(element, content) {=0A=
    return Element.insert(element, {top:content});=0A=
  },=0A=
=0A=
  Bottom: function(element, content) {=0A=
    return Element.insert(element, {bottom:content});=0A=
  },=0A=
=0A=
  After: function(element, content) {=0A=
    return Element.insert(element, {after:content});=0A=
  }=0A=
};=0A=
=0A=
var $continue =3D new Error('"throw $continue" is deprecated, use =
"return" instead');=0A=
=0A=
// This should be moved to script.aculo.us; notice the deprecated methods=0A=
// further below, that map to the newer Element methods.=0A=
var Position =3D {=0A=
  // set to true if needed, warning: firefox performance problems=0A=
  // NOT neeeded for page scrolling, only if draggable contained in=0A=
  // scrollable elements=0A=
  includeScrollOffsets: false,=0A=
=0A=
  // must be called before calling withinIncludingScrolloffset, every =
time the=0A=
  // page is scrolled=0A=
  prepare: function() {=0A=
    this.deltaX =3D  window.pageXOffset=0A=
                || document.documentElement.scrollLeft=0A=
                || document.body.scrollLeft=0A=
                || 0;=0A=
    this.deltaY =3D  window.pageYOffset=0A=
                || document.documentElement.scrollTop=0A=
                || document.body.scrollTop=0A=
                || 0;=0A=
  },=0A=
=0A=
  // caches x/y coordinate pair to use with overlap=0A=
  within: function(element, x, y) {=0A=
    if (this.includeScrollOffsets)=0A=
      return this.withinIncludingScrolloffsets(element, x, y);=0A=
    this.xcomp =3D x;=0A=
    this.ycomp =3D y;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (y >=3D this.offset[1] &&=0A=
            y <  this.offset[1] + element.offsetHeight &&=0A=
            x >=3D this.offset[0] &&=0A=
            x <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  withinIncludingScrolloffsets: function(element, x, y) {=0A=
    var offsetcache =3D Element.cumulativeScrollOffset(element);=0A=
=0A=
    this.xcomp =3D x + offsetcache[0] - this.deltaX;=0A=
    this.ycomp =3D y + offsetcache[1] - this.deltaY;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (this.ycomp >=3D this.offset[1] &&=0A=
            this.ycomp <  this.offset[1] + element.offsetHeight &&=0A=
            this.xcomp >=3D this.offset[0] &&=0A=
            this.xcomp <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  // within must be called directly before=0A=
  overlap: function(mode, element) {=0A=
    if (!mode) return 0;=0A=
    if (mode =3D=3D 'vertical')=0A=
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /=0A=
        element.offsetHeight;=0A=
    if (mode =3D=3D 'horizontal')=0A=
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /=0A=
        element.offsetWidth;=0A=
  },=0A=
=0A=
  // Deprecation layer -- use newer Element methods now (1.5.2).=0A=
=0A=
  cumulativeOffset: Element.Methods.cumulativeOffset,=0A=
=0A=
  positionedOffset: Element.Methods.positionedOffset,=0A=
=0A=
  absolutize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.absolutize(element);=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.relativize(element);=0A=
  },=0A=
=0A=
  realOffset: Element.Methods.cumulativeScrollOffset,=0A=
=0A=
  offsetParent: Element.Methods.getOffsetParent,=0A=
=0A=
  page: Element.Methods.viewportOffset,=0A=
=0A=
  clone: function(source, target, options) {=0A=
    options =3D options || { };=0A=
    return Element.clonePosition(target, source, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!document.getElementsByClassName) document.getElementsByClassName =
=3D function(instanceMethods){=0A=
  function iter(name) {=0A=
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' =
" + name + " ')]";=0A=
  }=0A=
=0A=
  instanceMethods.getElementsByClassName =3D =
Prototype.BrowserFeatures.XPath ?=0A=
  function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var cond =3D /\s/.test(className) ? $w(className).map(iter).join('') =
: iter(className);=0A=
    return cond ? document._getElementsByXPath('.//*' + cond, element) : =
[];=0A=
  } : function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var elements =3D [], classNames =3D (/\s/.test(className) ? =
$w(className) : null);=0A=
    if (!classNames && !className) return elements;=0A=
=0A=
    var nodes =3D $(element).getElementsByTagName('*');=0A=
    className =3D ' ' + className + ' ';=0A=
=0A=
    for (var i =3D 0, child, cn; child =3D nodes[i]; i++) {=0A=
      if (child.className && (cn =3D ' ' + child.className + ' ') && =
(cn.include(className) ||=0A=
          (classNames && classNames.all(function(name) {=0A=
            return !name.toString().blank() && cn.include(' ' + name + ' =
');=0A=
          }))))=0A=
        elements.push(Element.extend(child));=0A=
    }=0A=
    return elements;=0A=
  };=0A=
=0A=
  return function(className, parentElement) {=0A=
    return $(parentElement || =
document.body).getElementsByClassName(className);=0A=
  };=0A=
}(Element.Methods);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.ClassNames =3D Class.create();=0A=
Element.ClassNames.prototype =3D {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    this.element.className.split(/\s+/).select(function(name) {=0A=
      return name.length > 0;=0A=
    })._each(iterator);=0A=
  },=0A=
=0A=
  set: function(className) {=0A=
    this.element.className =3D className;=0A=
  },=0A=
=0A=
  add: function(classNameToAdd) {=0A=
    if (this.include(classNameToAdd)) return;=0A=
    this.set($A(this).concat(classNameToAdd).join(' '));=0A=
  },=0A=
=0A=
  remove: function(classNameToRemove) {=0A=
    if (!this.include(classNameToRemove)) return;=0A=
    this.set($A(this).without(classNameToRemove).join(' '));=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return $A(this).join(' ');=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Element.ClassNames.prototype, Enumerable);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.addMethods();
------=_NextPart_000_000F_01CA45DE.2B862BB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://localhost:3000/javascripts/effects.js?1253859600

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
// Contributors:=0A=
//  Justin Palmer (http://encytemedia.com/)=0A=
//  Mark Pilgrim (http://diveintomark.org/)=0A=
//  Martin Bialasinki=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
// converts rgb() and #xxx to #xxxxxx format,=0A=
// returns self (or first argument) if not convertable=0A=
String.prototype.parseColor =3D function() {=0A=
  var color =3D '#';=0A=
  if (this.slice(0,4) =3D=3D 'rgb(') {=0A=
    var cols =3D this.slice(4,this.length-1).split(',');=0A=
    var i=3D0; do { color +=3D parseInt(cols[i]).toColorPart() } while =
(++i<3);=0A=
  } else {=0A=
    if (this.slice(0,1) =3D=3D '#') {=0A=
      if (this.length=3D=3D4) for(var i=3D1;i<4;i++) color +=3D =
(this.charAt(i) + this.charAt(i)).toLowerCase();=0A=
      if (this.length=3D=3D7) color =3D this.toLowerCase();=0A=
    }=0A=
  }=0A=
  return (color.length=3D=3D7 ? color : (arguments[0] || this));=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.collectTextNodes =3D function(element) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.collectTextNodesIgnoreClass =3D function(element, className) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?=0A=
        Element.collectTextNodesIgnoreClass(node, className) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.setContentZoom =3D function(element, percent) {=0A=
  element =3D $(element);=0A=
  element.setStyle({fontSize: (percent/100) + 'em'});=0A=
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
  return element;=0A=
};=0A=
=0A=
Element.getInlineOpacity =3D function(element){=0A=
  return $(element).style.opacity || '';=0A=
};=0A=
=0A=
Element.forceRerendering =3D function(element) {=0A=
  try {=0A=
    element =3D $(element);=0A=
    var n =3D document.createTextNode(' ');=0A=
    element.appendChild(n);=0A=
    element.removeChild(n);=0A=
  } catch(e) { }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Effect =3D {=0A=
  _elementDoesNotExistError: {=0A=
    name: 'ElementDoesNotExistError',=0A=
    message: 'The specified DOM element does not exist, but is required =
for this effect to operate'=0A=
  },=0A=
  Transitions: {=0A=
    linear: Prototype.K,=0A=
    sinoidal: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI)/2) + .5;=0A=
    },=0A=
    reverse: function(pos) {=0A=
      return 1-pos;=0A=
    },=0A=
    flicker: function(pos) {=0A=
      var pos =3D ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;=0A=
      return pos > 1 ? 1 : pos;=0A=
    },=0A=
    wobble: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;=0A=
    },=0A=
    pulse: function(pos, pulses) {=0A=
      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;=0A=
    },=0A=
    spring: function(pos) {=0A=
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));=0A=
    },=0A=
    none: function(pos) {=0A=
      return 0;=0A=
    },=0A=
    full: function(pos) {=0A=
      return 1;=0A=
    }=0A=
  },=0A=
  DefaultOptions: {=0A=
    duration:   1.0,   // seconds=0A=
    fps:        100,   // 100=3D assume 66fps max.=0A=
    sync:       false, // true for combining=0A=
    from:       0.0,=0A=
    to:         1.0,=0A=
    delay:      0.0,=0A=
    queue:      'parallel'=0A=
  },=0A=
  tagifyText: function(element) {=0A=
    var tagifyStyle =3D 'position:relative';=0A=
    if (Prototype.Browser.IE) tagifyStyle +=3D ';zoom:1';=0A=
=0A=
    element =3D $(element);=0A=
    $A(element.childNodes).each( function(child) {=0A=
      if (child.nodeType=3D=3D3) {=0A=
        child.nodeValue.toArray().each( function(character) {=0A=
          element.insertBefore(=0A=
            new Element('span', {style: tagifyStyle}).update(=0A=
              character =3D=3D ' ' ? String.fromCharCode(160) : =
character),=0A=
              child);=0A=
        });=0A=
        Element.remove(child);=0A=
      }=0A=
    });=0A=
  },=0A=
  multiple: function(element, effect) {=0A=
    var elements;=0A=
    if (((typeof element =3D=3D 'object') ||=0A=
        Object.isFunction(element)) &&=0A=
       (element.length))=0A=
      elements =3D element;=0A=
    else=0A=
      elements =3D $(element).childNodes;=0A=
=0A=
    var options =3D Object.extend({=0A=
      speed: 0.1,=0A=
      delay: 0.0=0A=
    }, arguments[2] || { });=0A=
    var masterDelay =3D options.delay;=0A=
=0A=
    $A(elements).each( function(element, index) {=0A=
      new effect(element, Object.extend(options, { delay: index * =
options.speed + masterDelay }));=0A=
    });=0A=
  },=0A=
  PAIRS: {=0A=
    'slide':  ['SlideDown','SlideUp'],=0A=
    'blind':  ['BlindDown','BlindUp'],=0A=
    'appear': ['Appear','Fade']=0A=
  },=0A=
  toggle: function(element, effect) {=0A=
    element =3D $(element);=0A=
    effect =3D (effect || 'appear').toLowerCase();=0A=
    var options =3D Object.extend({=0A=
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }=0A=
    }, arguments[2] || { });=0A=
    Effect[element.visible() ?=0A=
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, =
options);=0A=
  }=0A=
};=0A=
=0A=
Effect.DefaultOptions.transition =3D Effect.Transitions.sinoidal;=0A=
=0A=
/* ------------- core effects ------------- */=0A=
=0A=
Effect.ScopedQueue =3D Class.create(Enumerable, {=0A=
  initialize: function() {=0A=
    this.effects  =3D [];=0A=
    this.interval =3D null;=0A=
  },=0A=
  _each: function(iterator) {=0A=
    this.effects._each(iterator);=0A=
  },=0A=
  add: function(effect) {=0A=
    var timestamp =3D new Date().getTime();=0A=
=0A=
    var position =3D Object.isString(effect.options.queue) ?=0A=
      effect.options.queue : effect.options.queue.position;=0A=
=0A=
    switch(position) {=0A=
      case 'front':=0A=
        // move unstarted effects after this effect=0A=
        this.effects.findAll(function(e){ return e.state=3D=3D'idle' =
}).each( function(e) {=0A=
            e.startOn  +=3D effect.finishOn;=0A=
            e.finishOn +=3D effect.finishOn;=0A=
          });=0A=
        break;=0A=
      case 'with-last':=0A=
        timestamp =3D this.effects.pluck('startOn').max() || timestamp;=0A=
        break;=0A=
      case 'end':=0A=
        // start effect after last queued effect has finished=0A=
        timestamp =3D this.effects.pluck('finishOn').max() || timestamp;=0A=
        break;=0A=
    }=0A=
=0A=
    effect.startOn  +=3D timestamp;=0A=
    effect.finishOn +=3D timestamp;=0A=
=0A=
    if (!effect.options.queue.limit || (this.effects.length < =
effect.options.queue.limit))=0A=
      this.effects.push(effect);=0A=
=0A=
    if (!this.interval)=0A=
      this.interval =3D setInterval(this.loop.bind(this), 15);=0A=
  },=0A=
  remove: function(effect) {=0A=
    this.effects =3D this.effects.reject(function(e) { return =
e=3D=3Deffect });=0A=
    if (this.effects.length =3D=3D 0) {=0A=
      clearInterval(this.interval);=0A=
      this.interval =3D null;=0A=
    }=0A=
  },=0A=
  loop: function() {=0A=
    var timePos =3D new Date().getTime();=0A=
    for(var i=3D0, len=3Dthis.effects.length;i<len;i++)=0A=
      this.effects[i] && this.effects[i].loop(timePos);=0A=
  }=0A=
});=0A=
=0A=
Effect.Queues =3D {=0A=
  instances: $H(),=0A=
  get: function(queueName) {=0A=
    if (!Object.isString(queueName)) return queueName;=0A=
=0A=
    return this.instances.get(queueName) ||=0A=
      this.instances.set(queueName, new Effect.ScopedQueue());=0A=
  }=0A=
};=0A=
Effect.Queue =3D Effect.Queues.get('global');=0A=
=0A=
Effect.Base =3D Class.create({=0A=
  position: null,=0A=
  start: function(options) {=0A=
    function codeForEvent(options,eventName){=0A=
      return (=0A=
        (options[eventName+'Internal'] ? =
'this.options.'+eventName+'Internal(this);' : '') +=0A=
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')=0A=
      );=0A=
    }=0A=
    if (options && options.transition =3D=3D=3D false) =
options.transition =3D Effect.Transitions.linear;=0A=
    this.options      =3D Object.extend(Object.extend({ =
},Effect.DefaultOptions), options || { });=0A=
    this.currentFrame =3D 0;=0A=
    this.state        =3D 'idle';=0A=
    this.startOn      =3D this.options.delay*1000;=0A=
    this.finishOn     =3D this.startOn+(this.options.duration*1000);=0A=
    this.fromToDelta  =3D this.options.to-this.options.from;=0A=
    this.totalTime    =3D this.finishOn-this.startOn;=0A=
    this.totalFrames  =3D this.options.fps*this.options.duration;=0A=
=0A=
    this.render =3D (function() {=0A=
      function dispatch(effect, eventName) {=0A=
        if (effect.options[eventName + 'Internal'])=0A=
          effect.options[eventName + 'Internal'](effect);=0A=
        if (effect.options[eventName])=0A=
          effect.options[eventName](effect);=0A=
      }=0A=
=0A=
      return function(pos) {=0A=
        if (this.state =3D=3D=3D "idle") {=0A=
          this.state =3D "running";=0A=
          dispatch(this, 'beforeSetup');=0A=
          if (this.setup) this.setup();=0A=
          dispatch(this, 'afterSetup');=0A=
        }=0A=
        if (this.state =3D=3D=3D "running") {=0A=
          pos =3D (this.options.transition(pos) * this.fromToDelta) + =
this.options.from;=0A=
          this.position =3D pos;=0A=
          dispatch(this, 'beforeUpdate');=0A=
          if (this.update) this.update(pos);=0A=
          dispatch(this, 'afterUpdate');=0A=
        }=0A=
      };=0A=
    })();=0A=
=0A=
    this.event('beforeStart');=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).add(this);=0A=
  },=0A=
  loop: function(timePos) {=0A=
    if (timePos >=3D this.startOn) {=0A=
      if (timePos >=3D this.finishOn) {=0A=
        this.render(1.0);=0A=
        this.cancel();=0A=
        this.event('beforeFinish');=0A=
        if (this.finish) this.finish();=0A=
        this.event('afterFinish');=0A=
        return;=0A=
      }=0A=
      var pos   =3D (timePos - this.startOn) / this.totalTime,=0A=
          frame =3D (pos * this.totalFrames).round();=0A=
      if (frame > this.currentFrame) {=0A=
        this.render(pos);=0A=
        this.currentFrame =3D frame;=0A=
      }=0A=
    }=0A=
  },=0A=
  cancel: function() {=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).remove(this);=0A=
    this.state =3D 'finished';=0A=
  },=0A=
  event: function(eventName) {=0A=
    if (this.options[eventName + 'Internal']) this.options[eventName + =
'Internal'](this);=0A=
    if (this.options[eventName]) this.options[eventName](this);=0A=
  },=0A=
  inspect: function() {=0A=
    var data =3D $H();=0A=
    for(property in this)=0A=
      if (!Object.isFunction(this[property])) data.set(property, =
this[property]);=0A=
    return '#<Effect:' + data.inspect() + ',options:' + =
$H(this.options).inspect() + '>';=0A=
  }=0A=
});=0A=
=0A=
Effect.Parallel =3D Class.create(Effect.Base, {=0A=
  initialize: function(effects) {=0A=
    this.effects =3D effects || [];=0A=
    this.start(arguments[1]);=0A=
  },=0A=
  update: function(position) {=0A=
    this.effects.invoke('render', position);=0A=
  },=0A=
  finish: function(position) {=0A=
    this.effects.each( function(effect) {=0A=
      effect.render(1.0);=0A=
      effect.cancel();=0A=
      effect.event('beforeFinish');=0A=
      if (effect.finish) effect.finish(position);=0A=
      effect.event('afterFinish');=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
Effect.Tween =3D Class.create(Effect.Base, {=0A=
  initialize: function(object, from, to) {=0A=
    object =3D Object.isString(object) ? $(object) : object;=0A=
    var args =3D $A(arguments), method =3D args.last(),=0A=
      options =3D args.length =3D=3D 5 ? args[3] : null;=0A=
    this.method =3D Object.isFunction(method) ? method.bind(object) :=0A=
      Object.isFunction(object[method]) ? object[method].bind(object) :=0A=
      function(value) { object[method] =3D value };=0A=
    this.start(Object.extend({ from: from, to: to }, options || { }));=0A=
  },=0A=
  update: function(position) {=0A=
    this.method(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Event =3D Class.create(Effect.Base, {=0A=
  initialize: function() {=0A=
    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));=0A=
  },=0A=
  update: Prototype.emptyFunction=0A=
});=0A=
=0A=
Effect.Opacity =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    // make this work on IE on elements without 'layout'=0A=
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))=0A=
      this.element.setStyle({zoom: 1});=0A=
    var options =3D Object.extend({=0A=
      from: this.element.getOpacity() || 0.0,=0A=
      to:   1.0=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setOpacity(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Move =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      x:    0,=0A=
      y:    0,=0A=
      mode: 'relative'=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.element.makePositioned();=0A=
    this.originalLeft =3D parseFloat(this.element.getStyle('left') || =
'0');=0A=
    this.originalTop  =3D parseFloat(this.element.getStyle('top')  || =
'0');=0A=
    if (this.options.mode =3D=3D 'absolute') {=0A=
      this.options.x =3D this.options.x - this.originalLeft;=0A=
      this.options.y =3D this.options.y - this.originalTop;=0A=
    }=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({=0A=
      left: (this.options.x  * position + this.originalLeft).round() + =
'px',=0A=
      top:  (this.options.y  * position + this.originalTop).round()  + =
'px'=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
// for backwards compatibility=0A=
Effect.MoveBy =3D function(element, toTop, toLeft) {=0A=
  return new Effect.Move(element,=0A=
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));=0A=
};=0A=
=0A=
Effect.Scale =3D Class.create(Effect.Base, {=0A=
  initialize: function(element, percent) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      scaleX: true,=0A=
      scaleY: true,=0A=
      scaleContent: true,=0A=
      scaleFromCenter: false,=0A=
      scaleMode: 'box',        // 'box' or 'contents' or { } with =
provided values=0A=
      scaleFrom: 100.0,=0A=
      scaleTo:   percent=0A=
    }, arguments[2] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.restoreAfterFinish =3D this.options.restoreAfterFinish || false;=0A=
    this.elementPositioning =3D this.element.getStyle('position');=0A=
=0A=
    this.originalStyle =3D { };=0A=
    ['top','left','width','height','fontSize'].each( function(k) {=0A=
      this.originalStyle[k] =3D this.element.style[k];=0A=
    }.bind(this));=0A=
=0A=
    this.originalTop  =3D this.element.offsetTop;=0A=
    this.originalLeft =3D this.element.offsetLeft;=0A=
=0A=
    var fontSize =3D this.element.getStyle('font-size') || '100%';=0A=
    ['em','px','%','pt'].each( function(fontSizeType) {=0A=
      if (fontSize.indexOf(fontSizeType)>0) {=0A=
        this.fontSize     =3D parseFloat(fontSize);=0A=
        this.fontSizeType =3D fontSizeType;=0A=
      }=0A=
    }.bind(this));=0A=
=0A=
    this.factor =3D (this.options.scaleTo - this.options.scaleFrom)/100;=0A=
=0A=
    this.dims =3D null;=0A=
    if (this.options.scaleMode=3D=3D'box')=0A=
      this.dims =3D [this.element.offsetHeight, =
this.element.offsetWidth];=0A=
    if (/^content/.test(this.options.scaleMode))=0A=
      this.dims =3D [this.element.scrollHeight, =
this.element.scrollWidth];=0A=
    if (!this.dims)=0A=
      this.dims =3D [this.options.scaleMode.originalHeight,=0A=
                   this.options.scaleMode.originalWidth];=0A=
  },=0A=
  update: function(position) {=0A=
    var currentScale =3D (this.options.scaleFrom/100.0) + (this.factor * =
position);=0A=
    if (this.options.scaleContent && this.fontSize)=0A=
      this.element.setStyle({fontSize: this.fontSize * currentScale + =
this.fontSizeType });=0A=
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * =
currentScale);=0A=
  },=0A=
  finish: function(position) {=0A=
    if (this.restoreAfterFinish) =
this.element.setStyle(this.originalStyle);=0A=
  },=0A=
  setDimensions: function(height, width) {=0A=
    var d =3D { };=0A=
    if (this.options.scaleX) d.width =3D width.round() + 'px';=0A=
    if (this.options.scaleY) d.height =3D height.round() + 'px';=0A=
    if (this.options.scaleFromCenter) {=0A=
      var topd  =3D (height - this.dims[0])/2;=0A=
      var leftd =3D (width  - this.dims[1])/2;=0A=
      if (this.elementPositioning =3D=3D 'absolute') {=0A=
        if (this.options.scaleY) d.top =3D this.originalTop-topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D this.originalLeft-leftd + =
'px';=0A=
      } else {=0A=
        if (this.options.scaleY) d.top =3D -topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D -leftd + 'px';=0A=
      }=0A=
    }=0A=
    this.element.setStyle(d);=0A=
  }=0A=
});=0A=
=0A=
Effect.Highlight =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({ startcolor: '#ffff99' }, =
arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    // Prevent executing on elements not in the layout flow=0A=
    if (this.element.getStyle('display')=3D=3D'none') { this.cancel(); =
return; }=0A=
    // Disable background image during the effect=0A=
    this.oldStyle =3D { };=0A=
    if (!this.options.keepBackgroundImage) {=0A=
      this.oldStyle.backgroundImage =3D =
this.element.getStyle('background-image');=0A=
      this.element.setStyle({backgroundImage: 'none'});=0A=
    }=0A=
    if (!this.options.endcolor)=0A=
      this.options.endcolor =3D =
this.element.getStyle('background-color').parseColor('#ffffff');=0A=
    if (!this.options.restorecolor)=0A=
      this.options.restorecolor =3D =
this.element.getStyle('background-color');=0A=
    // init color calculations=0A=
    this._base  =3D $R(0,2).map(function(i){ return =
parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));=0A=
    this._delta =3D $R(0,2).map(function(i){ return =
parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] =
}.bind(this));=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({backgroundColor: =
$R(0,2).inject('#',function(m,v,i){=0A=
      return =
m+((this._base[i]+(this._delta[i]*position)).round().toColorPart()); =
}.bind(this)) });=0A=
  },=0A=
  finish: function() {=0A=
    this.element.setStyle(Object.extend(this.oldStyle, {=0A=
      backgroundColor: this.options.restorecolor=0A=
    }));=0A=
  }=0A=
});=0A=
=0A=
Effect.ScrollTo =3D function(element) {=0A=
  var options =3D arguments[1] || { },=0A=
  scrollOffsets =3D document.viewport.getScrollOffsets(),=0A=
  elementOffsets =3D $(element).cumulativeOffset();=0A=
=0A=
  if (options.offset) elementOffsets[1] +=3D options.offset;=0A=
=0A=
  return new Effect.Tween(null,=0A=
    scrollOffsets.top,=0A=
    elementOffsets[1],=0A=
    options,=0A=
    function(p){ scrollTo(scrollOffsets.left, p.round()); }=0A=
  );=0A=
};=0A=
=0A=
/* ------------- combination effects ------------- */=0A=
=0A=
Effect.Fade =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  var options =3D Object.extend({=0A=
    from: element.getOpacity() || 1.0,=0A=
    to:   0.0,=0A=
    afterFinishInternal: function(effect) {=0A=
      if (effect.options.to!=3D0) return;=0A=
      effect.element.hide().setStyle({opacity: oldOpacity});=0A=
    }=0A=
  }, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Appear =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
  from: (element.getStyle('display') =3D=3D 'none' ? 0.0 : =
element.getOpacity() || 0.0),=0A=
  to:   1.0,=0A=
  // force Safari to render floated elements properly=0A=
  afterFinishInternal: function(effect) {=0A=
    effect.element.forceRerendering();=0A=
  },=0A=
  beforeSetup: function(effect) {=0A=
    effect.element.setOpacity(effect.options.from).show();=0A=
  }}, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Puff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    opacity: element.getInlineOpacity(),=0A=
    position: element.getStyle('position'),=0A=
    top:  element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height=0A=
  };=0A=
  return new Effect.Parallel(=0A=
   [ new Effect.Scale(element, 200,=0A=
      { sync: true, scaleFromCenter: true, scaleContent: true, =
restoreAfterFinish: true }),=0A=
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ],=0A=
     Object.extend({ duration: 1.0,=0A=
      beforeSetupInternal: function(effect) {=0A=
        Position.absolutize(effect.effects[0].element);=0A=
      },=0A=
      afterFinishInternal: function(effect) {=0A=
         effect.effects[0].element.hide().setStyle(oldStyle); }=0A=
     }, arguments[1] || { })=0A=
   );=0A=
};=0A=
=0A=
Effect.BlindUp =3D function(element) {=0A=
  element =3D $(element);=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 0,=0A=
    Object.extend({ scaleContent: false,=0A=
      scaleX: false,=0A=
      restoreAfterFinish: true,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping();=0A=
      }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.BlindDown =3D function(element) {=0A=
  element =3D $(element);=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: 0,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping();=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.SwitchOff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  return new Effect.Appear(element, Object.extend({=0A=
    duration: 0.4,=0A=
    from: 0,=0A=
    transition: Effect.Transitions.flicker,=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Scale(effect.element, 1, {=0A=
        duration: 0.3, scaleFromCenter: true,=0A=
        scaleX: false, scaleContent: false, restoreAfterFinish: true,=0A=
        beforeSetup: function(effect) {=0A=
          effect.element.makePositioned().makeClipping();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: =
oldOpacity});=0A=
        }=0A=
      });=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.DropOut =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left'),=0A=
    opacity: element.getInlineOpacity() };=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }),=0A=
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],=0A=
    Object.extend(=0A=
      { duration: 0.5,=0A=
        beforeSetup: function(effect) {=0A=
          effect.effects[0].element.makePositioned();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);=0A=
        }=0A=
      }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Shake =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    distance: 20,=0A=
    duration: 0.5=0A=
  }, arguments[1] || {});=0A=
  var distance =3D parseFloat(options.distance);=0A=
  var split =3D parseFloat(options.duration) / 10.0;=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left') };=0A=
    return new Effect.Move(element,=0A=
      { x:  distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
        effect.element.undoPositioned().setStyle(oldStyle);=0A=
  }}); }}); }}); }}); }}); }});=0A=
};=0A=
=0A=
Effect.SlideDown =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  // SlideDown need to have the content of the element wrapped in a =
container element with fixed height!=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: window.opera ? 0 : 1,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' });=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom}); }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.SlideUp =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, window.opera ? 0 : 1,=0A=
   Object.extend({ scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleMode: 'box',=0A=
    scaleFrom: 100,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' });=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom});=0A=
    }=0A=
   }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
// Bug in opera makes the TD containing this element expand for a =
instance after finish=0A=
Effect.Squish =3D function(element) {=0A=
  return new Effect.Scale(element, window.opera ? 1 : 0, {=0A=
    restoreAfterFinish: true,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.makeClipping();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping();=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Grow =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.full=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var initialMoveX, initialMoveY;=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      initialMoveX =3D initialMoveY =3D moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D moveY =3D 0;=0A=
      moveX =3D -dims.width;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      initialMoveX =3D moveX =3D 0;=0A=
      initialMoveY =3D dims.height;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D dims.height;=0A=
      moveX =3D -dims.width;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      initialMoveX =3D dims.width / 2;=0A=
      initialMoveY =3D dims.height / 2;=0A=
      moveX =3D -dims.width / 2;=0A=
      moveY =3D -dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Move(element, {=0A=
    x: initialMoveX,=0A=
    y: initialMoveY,=0A=
    duration: 0.01,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.hide().makeClipping().makePositioned();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Parallel(=0A=
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, =
from: 0.0, transition: options.opacityTransition }),=0A=
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: =
true, transition: options.moveTransition }),=0A=
          new Effect.Scale(effect.element, 100, {=0A=
            scaleMode: { originalHeight: dims.height, originalWidth: =
dims.width },=0A=
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: =
options.scaleTransition, restoreAfterFinish: true})=0A=
        ], Object.extend({=0A=
             beforeSetup: function(effect) {=0A=
               effect.effects[0].element.setStyle({height: =
'0px'}).show();=0A=
             },=0A=
             afterFinishInternal: function(effect) {=0A=
               =
effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldSty=
le);=0A=
             }=0A=
           }, options)=0A=
      );=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Shrink =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.none=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D 0;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      moveX =3D 0;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      moveX =3D dims.width / 2;=0A=
      moveY =3D dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, =
transition: options.opacityTransition }),=0A=
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, =
transition: options.scaleTransition, restoreAfterFinish: true}),=0A=
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, =
transition: options.moveTransition })=0A=
    ], Object.extend({=0A=
         beforeStartInternal: function(effect) {=0A=
           effect.effects[0].element.makePositioned().makeClipping();=0A=
         },=0A=
         afterFinishInternal: function(effect) {=0A=
           =
effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle=
(oldStyle); }=0A=
       }, options)=0A=
  );=0A=
};=0A=
=0A=
Effect.Pulsate =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options    =3D arguments[1] || { },=0A=
    oldOpacity =3D element.getInlineOpacity(),=0A=
    transition =3D options.transition || Effect.Transitions.linear,=0A=
    reverser   =3D function(pos){=0A=
      return 1 - =
transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)/2) + .5);=0A=
    };=0A=
=0A=
  return new Effect.Opacity(element,=0A=
    Object.extend(Object.extend({  duration: 2.0, from: 0,=0A=
      afterFinishInternal: function(effect) { =
effect.element.setStyle({opacity: oldOpacity}); }=0A=
    }, options), {transition: reverser}));=0A=
};=0A=
=0A=
Effect.Fold =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height };=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 5, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    afterFinishInternal: function(effect) {=0A=
    new Effect.Scale(element, 1, {=0A=
      scaleContent: false,=0A=
      scaleY: false,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping().setStyle(oldStyle);=0A=
      } });=0A=
  }}, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Morph =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      style: { }=0A=
    }, arguments[1] || { });=0A=
=0A=
    if (!Object.isString(options.style)) this.style =3D =
$H(options.style);=0A=
    else {=0A=
      if (options.style.include(':'))=0A=
        this.style =3D options.style.parseStyle();=0A=
      else {=0A=
        this.element.addClassName(options.style);=0A=
        this.style =3D $H(this.element.getStyles());=0A=
        this.element.removeClassName(options.style);=0A=
        var css =3D this.element.getStyles();=0A=
        this.style =3D this.style.reject(function(style) {=0A=
          return style.value =3D=3D css[style.key];=0A=
        });=0A=
        options.afterFinishInternal =3D function(effect) {=0A=
          effect.element.addClassName(effect.options.style);=0A=
          effect.transforms.each(function(transform) {=0A=
            effect.element.style[transform.style] =3D '';=0A=
          });=0A=
        };=0A=
      }=0A=
    }=0A=
    this.start(options);=0A=
  },=0A=
=0A=
  setup: function(){=0A=
    function parseColor(color){=0A=
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) =
color =3D '#ffffff';=0A=
      color =3D color.parseColor();=0A=
      return $R(0,2).map(function(i){=0A=
        return parseInt( color.slice(i*2+1,i*2+3), 16 );=0A=
      });=0A=
    }=0A=
    this.transforms =3D this.style.map(function(pair){=0A=
      var property =3D pair[0], value =3D pair[1], unit =3D null;=0A=
=0A=
      if (value.parseColor('#zzzzzz') !=3D '#zzzzzz') {=0A=
        value =3D value.parseColor();=0A=
        unit  =3D 'color';=0A=
      } else if (property =3D=3D 'opacity') {=0A=
        value =3D parseFloat(value);=0A=
        if (Prototype.Browser.IE && =
(!this.element.currentStyle.hasLayout))=0A=
          this.element.setStyle({zoom: 1});=0A=
      } else if (Element.CSS_LENGTH.test(value)) {=0A=
          var components =3D value.match(/^([\+\-]?[0-9\.]+)(.*)$/);=0A=
          value =3D parseFloat(components[1]);=0A=
          unit =3D (components.length =3D=3D 3) ? components[2] : null;=0A=
      }=0A=
=0A=
      var originalValue =3D this.element.getStyle(property);=0A=
      return {=0A=
        style: property.camelize(),=0A=
        originalValue: unit=3D=3D'color' ? parseColor(originalValue) : =
parseFloat(originalValue || 0),=0A=
        targetValue: unit=3D=3D'color' ? parseColor(value) : value,=0A=
        unit: unit=0A=
      };=0A=
    }.bind(this)).reject(function(transform){=0A=
      return (=0A=
        (transform.originalValue =3D=3D transform.targetValue) ||=0A=
        (=0A=
          transform.unit !=3D 'color' &&=0A=
          (isNaN(transform.originalValue) || =
isNaN(transform.targetValue))=0A=
        )=0A=
      );=0A=
    });=0A=
  },=0A=
  update: function(position) {=0A=
    var style =3D { }, transform, i =3D this.transforms.length;=0A=
    while(i--)=0A=
      style[(transform =3D this.transforms[i]).style] =3D=0A=
        transform.unit=3D=3D'color' ? '#'+=0A=
          (Math.round(transform.originalValue[0]+=0A=
            =
(transform.targetValue[0]-transform.originalValue[0])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[1]+=0A=
            =
(transform.targetValue[1]-transform.originalValue[1])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[2]+=0A=
            =
(transform.targetValue[2]-transform.originalValue[2])*position)).toColorP=
art() :=0A=
        (transform.originalValue +=0A=
          (transform.targetValue - transform.originalValue) * =
position).toFixed(3) +=0A=
            (transform.unit =3D=3D=3D null ? '' : transform.unit);=0A=
    this.element.setStyle(style, true);=0A=
  }=0A=
});=0A=
=0A=
Effect.Transform =3D Class.create({=0A=
  initialize: function(tracks){=0A=
    this.tracks  =3D [];=0A=
    this.options =3D arguments[1] || { };=0A=
    this.addTracks(tracks);=0A=
  },=0A=
  addTracks: function(tracks){=0A=
    tracks.each(function(track){=0A=
      track =3D $H(track);=0A=
      var data =3D track.values().first();=0A=
      this.tracks.push($H({=0A=
        ids:     track.keys().first(),=0A=
        effect:  Effect.Morph,=0A=
        options: { style: data }=0A=
      }));=0A=
    }.bind(this));=0A=
    return this;=0A=
  },=0A=
  play: function(){=0A=
    return new Effect.Parallel(=0A=
      this.tracks.map(function(track){=0A=
        var ids =3D track.get('ids'), effect =3D track.get('effect'), =
options =3D track.get('options');=0A=
        var elements =3D [$(ids) || $$(ids)].flatten();=0A=
        return elements.map(function(e){ return new effect(e, =
Object.extend({ sync:true }, options)) });=0A=
      }).flatten(),=0A=
      this.options=0A=
    );=0A=
  }=0A=
});=0A=
=0A=
Element.CSS_PROPERTIES =3D $w(=0A=
  'backgroundColor backgroundPosition borderBottomColor =
borderBottomStyle ' +=0A=
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +=0A=
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +=0A=
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +=0A=
  'fontSize fontWeight height left letterSpacing lineHeight ' +=0A=
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight =
'+=0A=
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +=0A=
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +=0A=
  'right textIndent top width wordSpacing zIndex');=0A=
=0A=
Element.CSS_LENGTH =3D =
/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;=0A=
=0A=
String.__parseStyleElement =3D document.createElement('div');=0A=
String.prototype.parseStyle =3D function(){=0A=
  var style, styleRules =3D $H();=0A=
  if (Prototype.Browser.WebKit)=0A=
    style =3D new Element('div',{style:this}).style;=0A=
  else {=0A=
    String.__parseStyleElement.innerHTML =3D '<div style=3D"' + this + =
'"></div>';=0A=
    style =3D String.__parseStyleElement.childNodes[0].style;=0A=
  }=0A=
=0A=
  Element.CSS_PROPERTIES.each(function(property){=0A=
    if (style[property]) styleRules.set(property, style[property]);=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE && this.include('opacity'))=0A=
    styleRules.set('opacity', =
this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);=0A=
=0A=
  return styleRules;=0A=
};=0A=
=0A=
if (document.defaultView && document.defaultView.getComputedStyle) {=0A=
  Element.getStyles =3D function(element) {=0A=
    var css =3D document.defaultView.getComputedStyle($(element), null);=0A=
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) =
{=0A=
      styles[property] =3D css[property];=0A=
      return styles;=0A=
    });=0A=
  };=0A=
} else {=0A=
  Element.getStyles =3D function(element) {=0A=
    element =3D $(element);=0A=
    var css =3D element.currentStyle, styles;=0A=
    styles =3D Element.CSS_PROPERTIES.inject({ }, function(results, =
property) {=0A=
      results[property] =3D css[property];=0A=
      return results;=0A=
    });=0A=
    if (!styles.opacity) styles.opacity =3D element.getOpacity();=0A=
    return styles;=0A=
  };=0A=
}=0A=
=0A=
Effect.Methods =3D {=0A=
  morph: function(element, style) {=0A=
    element =3D $(element);=0A=
    new Effect.Morph(element, Object.extend({ style: style }, =
arguments[2] || { }));=0A=
    return element;=0A=
  },=0A=
  visualEffect: function(element, effect, options) {=0A=
    element =3D $(element);=0A=
    var s =3D effect.dasherize().camelize(), klass =3D =
s.charAt(0).toUpperCase() + s.substring(1);=0A=
    new Effect[klass](element, options);=0A=
    return element;=0A=
  },=0A=
  highlight: function(element, options) {=0A=
    element =3D $(element);=0A=
    new Effect.Highlight(element, options);=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+=0A=
  'pulsate shake puff squish switchOff dropOut').each(=0A=
  function(effect) {=0A=
    Effect.Methods[effect] =3D function(element, options){=0A=
      element =3D $(element);=0A=
      Effect[effect.charAt(0).toUpperCase() + =
effect.substring(1)](element, options);=0A=
      return element;=0A=
    };=0A=
  }=0A=
);=0A=
=0A=
$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes =
collectTextNodesIgnoreClass getStyles').each(=0A=
  function(f) { Effect.Methods[f] =3D Element[f]; }=0A=
);=0A=
=0A=
Element.addMethods(Effect.Methods);
------=_NextPart_000_000F_01CA45DE.2B862BB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://localhost:3000/javascripts/dragdrop.js?1253859600

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
//           (c) 2005-2008 Sammi Williams =
(http://www.oriontransfer.co.nz, sammi@oriontransfer.co.nz)=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
if(Object.isUndefined(Effect))=0A=
  throw("dragdrop.js requires including script.aculo.us' effects.js =
library");=0A=
=0A=
var Droppables =3D {=0A=
  drops: [],=0A=
=0A=
  remove: function(element) {=0A=
    this.drops =3D this.drops.reject(function(d) { return =
d.element=3D=3D$(element) });=0A=
  },=0A=
=0A=
  add: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend({=0A=
      greedy:     true,=0A=
      hoverclass: null,=0A=
      tree:       false=0A=
    }, arguments[1] || { });=0A=
=0A=
    // cache containers=0A=
    if(options.containment) {=0A=
      options._containers =3D [];=0A=
      var containment =3D options.containment;=0A=
      if(Object.isArray(containment)) {=0A=
        containment.each( function(c) { options._containers.push($(c)) =
});=0A=
      } else {=0A=
        options._containers.push($(containment));=0A=
      }=0A=
    }=0A=
=0A=
    if(options.accept) options.accept =3D [options.accept].flatten();=0A=
=0A=
    Element.makePositioned(element); // fix IE=0A=
    options.element =3D element;=0A=
=0A=
    this.drops.push(options);=0A=
  },=0A=
=0A=
  findDeepestChild: function(drops) {=0A=
    deepest =3D drops[0];=0A=
=0A=
    for (i =3D 1; i < drops.length; ++i)=0A=
      if (Element.isParent(drops[i].element, deepest.element))=0A=
        deepest =3D drops[i];=0A=
=0A=
    return deepest;=0A=
  },=0A=
=0A=
  isContained: function(element, drop) {=0A=
    var containmentNode;=0A=
    if(drop.tree) {=0A=
      containmentNode =3D element.treeNode;=0A=
    } else {=0A=
      containmentNode =3D element.parentNode;=0A=
    }=0A=
    return drop._containers.detect(function(c) { return containmentNode =
=3D=3D c });=0A=
  },=0A=
=0A=
  isAffected: function(point, element, drop) {=0A=
    return (=0A=
      (drop.element!=3Delement) &&=0A=
      ((!drop._containers) ||=0A=
        this.isContained(element, drop)) &&=0A=
      ((!drop.accept) ||=0A=
        (Element.classNames(element).detect(=0A=
          function(v) { return drop.accept.include(v) } ) )) &&=0A=
      Position.within(drop.element, point[0], point[1]) );=0A=
  },=0A=
=0A=
  deactivate: function(drop) {=0A=
    if(drop.hoverclass)=0A=
      Element.removeClassName(drop.element, drop.hoverclass);=0A=
    this.last_active =3D null;=0A=
  },=0A=
=0A=
  activate: function(drop) {=0A=
    if(drop.hoverclass)=0A=
      Element.addClassName(drop.element, drop.hoverclass);=0A=
    this.last_active =3D drop;=0A=
  },=0A=
=0A=
  show: function(point, element) {=0A=
    if(!this.drops.length) return;=0A=
    var drop, affected =3D [];=0A=
=0A=
    this.drops.each( function(drop) {=0A=
      if(Droppables.isAffected(point, element, drop))=0A=
        affected.push(drop);=0A=
    });=0A=
=0A=
    if(affected.length>0)=0A=
      drop =3D Droppables.findDeepestChild(affected);=0A=
=0A=
    if(this.last_active && this.last_active !=3D drop) =
this.deactivate(this.last_active);=0A=
    if (drop) {=0A=
      Position.within(drop.element, point[0], point[1]);=0A=
      if(drop.onHover)=0A=
        drop.onHover(element, drop.element, =
Position.overlap(drop.overlap, drop.element));=0A=
=0A=
      if (drop !=3D this.last_active) Droppables.activate(drop);=0A=
    }=0A=
  },=0A=
=0A=
  fire: function(event, element) {=0A=
    if(!this.last_active) return;=0A=
    Position.prepare();=0A=
=0A=
    if (this.isAffected([Event.pointerX(event), Event.pointerY(event)], =
element, this.last_active))=0A=
      if (this.last_active.onDrop) {=0A=
        this.last_active.onDrop(element, this.last_active.element, =
event);=0A=
        return true;=0A=
      }=0A=
  },=0A=
=0A=
  reset: function() {=0A=
    if(this.last_active)=0A=
      this.deactivate(this.last_active);=0A=
  }=0A=
};=0A=
=0A=
var Draggables =3D {=0A=
  drags: [],=0A=
  observers: [],=0A=
=0A=
  register: function(draggable) {=0A=
    if(this.drags.length =3D=3D 0) {=0A=
      this.eventMouseUp   =3D this.endDrag.bindAsEventListener(this);=0A=
      this.eventMouseMove =3D this.updateDrag.bindAsEventListener(this);=0A=
      this.eventKeypress  =3D this.keyPress.bindAsEventListener(this);=0A=
=0A=
      Event.observe(document, "mouseup", this.eventMouseUp);=0A=
      Event.observe(document, "mousemove", this.eventMouseMove);=0A=
      Event.observe(document, "keypress", this.eventKeypress);=0A=
    }=0A=
    this.drags.push(draggable);=0A=
  },=0A=
=0A=
  unregister: function(draggable) {=0A=
    this.drags =3D this.drags.reject(function(d) { return =
d=3D=3Ddraggable });=0A=
    if(this.drags.length =3D=3D 0) {=0A=
      Event.stopObserving(document, "mouseup", this.eventMouseUp);=0A=
      Event.stopObserving(document, "mousemove", this.eventMouseMove);=0A=
      Event.stopObserving(document, "keypress", this.eventKeypress);=0A=
    }=0A=
  },=0A=
=0A=
  activate: function(draggable) {=0A=
    if(draggable.options.delay) {=0A=
      this._timeout =3D setTimeout(function() {=0A=
        Draggables._timeout =3D null;=0A=
        window.focus();=0A=
        Draggables.activeDraggable =3D draggable;=0A=
      }.bind(this), draggable.options.delay);=0A=
    } else {=0A=
      window.focus(); // allows keypress events if window isn't =
currently focused, fails for Safari=0A=
      this.activeDraggable =3D draggable;=0A=
    }=0A=
  },=0A=
=0A=
  deactivate: function() {=0A=
    this.activeDraggable =3D null;=0A=
  },=0A=
=0A=
  updateDrag: function(event) {=0A=
    if(!this.activeDraggable) return;=0A=
    var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
    // Mozilla-based browsers fire successive mousemove events with=0A=
    // the same coordinates, prevent needless redrawing (moz bug?)=0A=
    if(this._lastPointer && (this._lastPointer.inspect() =3D=3D =
pointer.inspect())) return;=0A=
    this._lastPointer =3D pointer;=0A=
=0A=
    this.activeDraggable.updateDrag(event, pointer);=0A=
  },=0A=
=0A=
  endDrag: function(event) {=0A=
    if(this._timeout) {=0A=
      clearTimeout(this._timeout);=0A=
      this._timeout =3D null;=0A=
    }=0A=
    if(!this.activeDraggable) return;=0A=
    this._lastPointer =3D null;=0A=
    this.activeDraggable.endDrag(event);=0A=
    this.activeDraggable =3D null;=0A=
  },=0A=
=0A=
  keyPress: function(event) {=0A=
    if(this.activeDraggable)=0A=
      this.activeDraggable.keyPress(event);=0A=
  },=0A=
=0A=
  addObserver: function(observer) {=0A=
    this.observers.push(observer);=0A=
    this._cacheObserverCallbacks();=0A=
  },=0A=
=0A=
  removeObserver: function(element) {  // element instead of observer =
fixes mem leaks=0A=
    this.observers =3D this.observers.reject( function(o) { return =
o.element=3D=3Delement });=0A=
    this._cacheObserverCallbacks();=0A=
  },=0A=
=0A=
  notify: function(eventName, draggable, event) {  // 'onStart', =
'onEnd', 'onDrag'=0A=
    if(this[eventName+'Count'] > 0)=0A=
      this.observers.each( function(o) {=0A=
        if(o[eventName]) o[eventName](eventName, draggable, event);=0A=
      });=0A=
    if(draggable.options[eventName]) =
draggable.options[eventName](draggable, event);=0A=
  },=0A=
=0A=
  _cacheObserverCallbacks: function() {=0A=
    ['onStart','onEnd','onDrag'].each( function(eventName) {=0A=
      Draggables[eventName+'Count'] =3D Draggables.observers.select(=0A=
        function(o) { return o[eventName]; }=0A=
      ).length;=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Draggable =3D Class.create({=0A=
  initialize: function(element) {=0A=
    var defaults =3D {=0A=
      handle: false,=0A=
      reverteffect: function(element, top_offset, left_offset) {=0A=
        var dur =3D =
Math.sqrt(Math.abs(top_offset^2)+Math.abs(left_offset^2))*0.02;=0A=
        new Effect.Move(element, { x: -left_offset, y: -top_offset, =
duration: dur,=0A=
          queue: {scope:'_draggable', position:'end'}=0A=
        });=0A=
      },=0A=
      endeffect: function(element) {=0A=
        var toOpacity =3D Object.isNumber(element._opacity) ? =
element._opacity : 1.0;=0A=
        new Effect.Opacity(element, {duration:0.2, from:0.7, =
to:toOpacity,=0A=
          queue: {scope:'_draggable', position:'end'},=0A=
          afterFinish: function(){=0A=
            Draggable._dragging[element] =3D false=0A=
          }=0A=
        });=0A=
      },=0A=
      zindex: 1000,=0A=
      revert: false,=0A=
      quiet: false,=0A=
      scroll: false,=0A=
      scrollSensitivity: 20,=0A=
      scrollSpeed: 15,=0A=
      snap: false,  // false, or xy or [x,y] or function(x,y){ return =
[x,y] }=0A=
      delay: 0=0A=
    };=0A=
=0A=
    if(!arguments[1] || Object.isUndefined(arguments[1].endeffect))=0A=
      Object.extend(defaults, {=0A=
        starteffect: function(element) {=0A=
          element._opacity =3D Element.getOpacity(element);=0A=
          Draggable._dragging[element] =3D true;=0A=
          new Effect.Opacity(element, {duration:0.2, =
from:element._opacity, to:0.7});=0A=
        }=0A=
      });=0A=
=0A=
    var options =3D Object.extend(defaults, arguments[1] || { });=0A=
=0A=
    this.element =3D $(element);=0A=
=0A=
    if(options.handle && Object.isString(options.handle))=0A=
      this.handle =3D this.element.down('.'+options.handle, 0);=0A=
=0A=
    if(!this.handle) this.handle =3D $(options.handle);=0A=
    if(!this.handle) this.handle =3D this.element;=0A=
=0A=
    if(options.scroll && !options.scroll.scrollTo && =
!options.scroll.outerHTML) {=0A=
      options.scroll =3D $(options.scroll);=0A=
      this._isScrollChild =3D Element.childOf(this.element, =
options.scroll);=0A=
    }=0A=
=0A=
    Element.makePositioned(this.element); // fix IE=0A=
=0A=
    this.options  =3D options;=0A=
    this.dragging =3D false;=0A=
=0A=
    this.eventMouseDown =3D this.initDrag.bindAsEventListener(this);=0A=
    Event.observe(this.handle, "mousedown", this.eventMouseDown);=0A=
=0A=
    Draggables.register(this);=0A=
  },=0A=
=0A=
  destroy: function() {=0A=
    Event.stopObserving(this.handle, "mousedown", this.eventMouseDown);=0A=
    Draggables.unregister(this);=0A=
  },=0A=
=0A=
  currentDelta: function() {=0A=
    return([=0A=
      parseInt(Element.getStyle(this.element,'left') || '0'),=0A=
      parseInt(Element.getStyle(this.element,'top') || '0')]);=0A=
  },=0A=
=0A=
  initDrag: function(event) {=0A=
    if(!Object.isUndefined(Draggable._dragging[this.element]) &&=0A=
      Draggable._dragging[this.element]) return;=0A=
    if(Event.isLeftClick(event)) {=0A=
      // abort on form elements, fixes a Firefox issue=0A=
      var src =3D Event.element(event);=0A=
      if((tag_name =3D src.tagName.toUpperCase()) && (=0A=
        tag_name=3D=3D'INPUT' ||=0A=
        tag_name=3D=3D'SELECT' ||=0A=
        tag_name=3D=3D'OPTION' ||=0A=
        tag_name=3D=3D'BUTTON' ||=0A=
        tag_name=3D=3D'TEXTAREA')) return;=0A=
=0A=
      var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
      var pos     =3D Position.cumulativeOffset(this.element);=0A=
      this.offset =3D [0,1].map( function(i) { return (pointer[i] - =
pos[i]) });=0A=
=0A=
      Draggables.activate(this);=0A=
      Event.stop(event);=0A=
    }=0A=
  },=0A=
=0A=
  startDrag: function(event) {=0A=
    this.dragging =3D true;=0A=
    if(!this.delta)=0A=
      this.delta =3D this.currentDelta();=0A=
=0A=
    if(this.options.zindex) {=0A=
      this.originalZ =3D =
parseInt(Element.getStyle(this.element,'z-index') || 0);=0A=
      this.element.style.zIndex =3D this.options.zindex;=0A=
    }=0A=
=0A=
    if(this.options.ghosting) {=0A=
      this._clone =3D this.element.cloneNode(true);=0A=
      this._originallyAbsolute =3D (this.element.getStyle('position') =
=3D=3D 'absolute');=0A=
      if (!this._originallyAbsolute)=0A=
        Position.absolutize(this.element);=0A=
      this.element.parentNode.insertBefore(this._clone, this.element);=0A=
    }=0A=
=0A=
    if(this.options.scroll) {=0A=
      if (this.options.scroll =3D=3D window) {=0A=
        var where =3D this._getWindowScroll(this.options.scroll);=0A=
        this.originalScrollLeft =3D where.left;=0A=
        this.originalScrollTop =3D where.top;=0A=
      } else {=0A=
        this.originalScrollLeft =3D this.options.scroll.scrollLeft;=0A=
        this.originalScrollTop =3D this.options.scroll.scrollTop;=0A=
      }=0A=
    }=0A=
=0A=
    Draggables.notify('onStart', this, event);=0A=
=0A=
    if(this.options.starteffect) this.options.starteffect(this.element);=0A=
  },=0A=
=0A=
  updateDrag: function(event, pointer) {=0A=
    if(!this.dragging) this.startDrag(event);=0A=
=0A=
    if(!this.options.quiet){=0A=
      Position.prepare();=0A=
      Droppables.show(pointer, this.element);=0A=
    }=0A=
=0A=
    Draggables.notify('onDrag', this, event);=0A=
=0A=
    this.draw(pointer);=0A=
    if(this.options.change) this.options.change(this);=0A=
=0A=
    if(this.options.scroll) {=0A=
      this.stopScrolling();=0A=
=0A=
      var p;=0A=
      if (this.options.scroll =3D=3D window) {=0A=
        with(this._getWindowScroll(this.options.scroll)) { p =3D [ left, =
top, left+width, top+height ]; }=0A=
      } else {=0A=
        p =3D Position.page(this.options.scroll);=0A=
        p[0] +=3D this.options.scroll.scrollLeft + Position.deltaX;=0A=
        p[1] +=3D this.options.scroll.scrollTop + Position.deltaY;=0A=
        p.push(p[0]+this.options.scroll.offsetWidth);=0A=
        p.push(p[1]+this.options.scroll.offsetHeight);=0A=
      }=0A=
      var speed =3D [0,0];=0A=
      if(pointer[0] < (p[0]+this.options.scrollSensitivity)) speed[0] =
=3D pointer[0]-(p[0]+this.options.scrollSensitivity);=0A=
      if(pointer[1] < (p[1]+this.options.scrollSensitivity)) speed[1] =
=3D pointer[1]-(p[1]+this.options.scrollSensitivity);=0A=
      if(pointer[0] > (p[2]-this.options.scrollSensitivity)) speed[0] =
=3D pointer[0]-(p[2]-this.options.scrollSensitivity);=0A=
      if(pointer[1] > (p[3]-this.options.scrollSensitivity)) speed[1] =
=3D pointer[1]-(p[3]-this.options.scrollSensitivity);=0A=
      this.startScrolling(speed);=0A=
    }=0A=
=0A=
    // fix AppleWebKit rendering=0A=
    if(Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
=0A=
    Event.stop(event);=0A=
  },=0A=
=0A=
  finishDrag: function(event, success) {=0A=
    this.dragging =3D false;=0A=
=0A=
    if(this.options.quiet){=0A=
      Position.prepare();=0A=
      var pointer =3D [Event.pointerX(event), Event.pointerY(event)];=0A=
      Droppables.show(pointer, this.element);=0A=
    }=0A=
=0A=
    if(this.options.ghosting) {=0A=
      if (!this._originallyAbsolute)=0A=
        Position.relativize(this.element);=0A=
      delete this._originallyAbsolute;=0A=
      Element.remove(this._clone);=0A=
      this._clone =3D null;=0A=
    }=0A=
=0A=
    var dropped =3D false;=0A=
    if(success) {=0A=
      dropped =3D Droppables.fire(event, this.element);=0A=
      if (!dropped) dropped =3D false;=0A=
    }=0A=
    if(dropped && this.options.onDropped) =
this.options.onDropped(this.element);=0A=
    Draggables.notify('onEnd', this, event);=0A=
=0A=
    var revert =3D this.options.revert;=0A=
    if(revert && Object.isFunction(revert)) revert =3D =
revert(this.element);=0A=
=0A=
    var d =3D this.currentDelta();=0A=
    if(revert && this.options.reverteffect) {=0A=
      if (dropped =3D=3D 0 || revert !=3D 'failure')=0A=
        this.options.reverteffect(this.element,=0A=
          d[1]-this.delta[1], d[0]-this.delta[0]);=0A=
    } else {=0A=
      this.delta =3D d;=0A=
    }=0A=
=0A=
    if(this.options.zindex)=0A=
      this.element.style.zIndex =3D this.originalZ;=0A=
=0A=
    if(this.options.endeffect)=0A=
      this.options.endeffect(this.element);=0A=
=0A=
    Draggables.deactivate(this);=0A=
    Droppables.reset();=0A=
  },=0A=
=0A=
  keyPress: function(event) {=0A=
    if(event.keyCode!=3DEvent.KEY_ESC) return;=0A=
    this.finishDrag(event, false);=0A=
    Event.stop(event);=0A=
  },=0A=
=0A=
  endDrag: function(event) {=0A=
    if(!this.dragging) return;=0A=
    this.stopScrolling();=0A=
    this.finishDrag(event, true);=0A=
    Event.stop(event);=0A=
  },=0A=
=0A=
  draw: function(point) {=0A=
    var pos =3D Position.cumulativeOffset(this.element);=0A=
    if(this.options.ghosting) {=0A=
      var r   =3D Position.realOffset(this.element);=0A=
      pos[0] +=3D r[0] - Position.deltaX; pos[1] +=3D r[1] - =
Position.deltaY;=0A=
    }=0A=
=0A=
    var d =3D this.currentDelta();=0A=
    pos[0] -=3D d[0]; pos[1] -=3D d[1];=0A=
=0A=
    if(this.options.scroll && (this.options.scroll !=3D window && =
this._isScrollChild)) {=0A=
      pos[0] -=3D this.options.scroll.scrollLeft-this.originalScrollLeft;=0A=
      pos[1] -=3D this.options.scroll.scrollTop-this.originalScrollTop;=0A=
    }=0A=
=0A=
    var p =3D [0,1].map(function(i){=0A=
      return (point[i]-pos[i]-this.offset[i])=0A=
    }.bind(this));=0A=
=0A=
    if(this.options.snap) {=0A=
      if(Object.isFunction(this.options.snap)) {=0A=
        p =3D this.options.snap(p[0],p[1],this);=0A=
      } else {=0A=
      if(Object.isArray(this.options.snap)) {=0A=
        p =3D p.map( function(v, i) {=0A=
          return (v/this.options.snap[i]).round()*this.options.snap[i] =
}.bind(this));=0A=
      } else {=0A=
        p =3D p.map( function(v) {=0A=
          return (v/this.options.snap).round()*this.options.snap =
}.bind(this));=0A=
      }=0A=
    }}=0A=
=0A=
    var style =3D this.element.style;=0A=
    if((!this.options.constraint) || =
(this.options.constraint=3D=3D'horizontal'))=0A=
      style.left =3D p[0] + "px";=0A=
    if((!this.options.constraint) || =
(this.options.constraint=3D=3D'vertical'))=0A=
      style.top  =3D p[1] + "px";=0A=
=0A=
    if(style.visibility=3D=3D"hidden") style.visibility =3D ""; // fix =
gecko rendering=0A=
  },=0A=
=0A=
  stopScrolling: function() {=0A=
    if(this.scrollInterval) {=0A=
      clearInterval(this.scrollInterval);=0A=
      this.scrollInterval =3D null;=0A=
      Draggables._lastScrollPointer =3D null;=0A=
    }=0A=
  },=0A=
=0A=
  startScrolling: function(speed) {=0A=
    if(!(speed[0] || speed[1])) return;=0A=
    this.scrollSpeed =3D =
[speed[0]*this.options.scrollSpeed,speed[1]*this.options.scrollSpeed];=0A=
    this.lastScrolled =3D new Date();=0A=
    this.scrollInterval =3D setInterval(this.scroll.bind(this), 10);=0A=
  },=0A=
=0A=
  scroll: function() {=0A=
    var current =3D new Date();=0A=
    var delta =3D current - this.lastScrolled;=0A=
    this.lastScrolled =3D current;=0A=
    if(this.options.scroll =3D=3D window) {=0A=
      with (this._getWindowScroll(this.options.scroll)) {=0A=
        if (this.scrollSpeed[0] || this.scrollSpeed[1]) {=0A=
          var d =3D delta / 1000;=0A=
          this.options.scroll.scrollTo( left + d*this.scrollSpeed[0], =
top + d*this.scrollSpeed[1] );=0A=
        }=0A=
      }=0A=
    } else {=0A=
      this.options.scroll.scrollLeft +=3D this.scrollSpeed[0] * delta / =
1000;=0A=
      this.options.scroll.scrollTop  +=3D this.scrollSpeed[1] * delta / =
1000;=0A=
    }=0A=
=0A=
    Position.prepare();=0A=
    Droppables.show(Draggables._lastPointer, this.element);=0A=
    Draggables.notify('onDrag', this);=0A=
    if (this._isScrollChild) {=0A=
      Draggables._lastScrollPointer =3D Draggables._lastScrollPointer || =
$A(Draggables._lastPointer);=0A=
      Draggables._lastScrollPointer[0] +=3D this.scrollSpeed[0] * delta =
/ 1000;=0A=
      Draggables._lastScrollPointer[1] +=3D this.scrollSpeed[1] * delta =
/ 1000;=0A=
      if (Draggables._lastScrollPointer[0] < 0)=0A=
        Draggables._lastScrollPointer[0] =3D 0;=0A=
      if (Draggables._lastScrollPointer[1] < 0)=0A=
        Draggables._lastScrollPointer[1] =3D 0;=0A=
      this.draw(Draggables._lastScrollPointer);=0A=
    }=0A=
=0A=
    if(this.options.change) this.options.change(this);=0A=
  },=0A=
=0A=
  _getWindowScroll: function(w) {=0A=
    var T, L, W, H;=0A=
    with (w.document) {=0A=
      if (w.document.documentElement && documentElement.scrollTop) {=0A=
        T =3D documentElement.scrollTop;=0A=
        L =3D documentElement.scrollLeft;=0A=
      } else if (w.document.body) {=0A=
        T =3D body.scrollTop;=0A=
        L =3D body.scrollLeft;=0A=
      }=0A=
      if (w.innerWidth) {=0A=
        W =3D w.innerWidth;=0A=
        H =3D w.innerHeight;=0A=
      } else if (w.document.documentElement && =
documentElement.clientWidth) {=0A=
        W =3D documentElement.clientWidth;=0A=
        H =3D documentElement.clientHeight;=0A=
      } else {=0A=
        W =3D body.offsetWidth;=0A=
        H =3D body.offsetHeight;=0A=
      }=0A=
    }=0A=
    return { top: T, left: L, width: W, height: H };=0A=
  }=0A=
});=0A=
=0A=
Draggable._dragging =3D { };=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var SortableObserver =3D Class.create({=0A=
  initialize: function(element, observer) {=0A=
    this.element   =3D $(element);=0A=
    this.observer  =3D observer;=0A=
    this.lastValue =3D Sortable.serialize(this.element);=0A=
  },=0A=
=0A=
  onStart: function() {=0A=
    this.lastValue =3D Sortable.serialize(this.element);=0A=
  },=0A=
=0A=
  onEnd: function() {=0A=
    Sortable.unmark();=0A=
    if(this.lastValue !=3D Sortable.serialize(this.element))=0A=
      this.observer(this.element)=0A=
  }=0A=
});=0A=
=0A=
var Sortable =3D {=0A=
  SERIALIZE_RULE: /^[^_\-](?:[A-Za-z0-9\-\_]*)[_](.*)$/,=0A=
=0A=
  sortables: { },=0A=
=0A=
  _findRootElement: function(element) {=0A=
    while (element.tagName.toUpperCase() !=3D "BODY") {=0A=
      if(element.id && Sortable.sortables[element.id]) return element;=0A=
      element =3D element.parentNode;=0A=
    }=0A=
  },=0A=
=0A=
  options: function(element) {=0A=
    element =3D Sortable._findRootElement($(element));=0A=
    if(!element) return;=0A=
    return Sortable.sortables[element.id];=0A=
  },=0A=
=0A=
  destroy: function(element){=0A=
    element =3D $(element);=0A=
    var s =3D Sortable.sortables[element.id];=0A=
=0A=
    if(s) {=0A=
      Draggables.removeObserver(s.element);=0A=
      s.droppables.each(function(d){ Droppables.remove(d) });=0A=
      s.draggables.invoke('destroy');=0A=
=0A=
      delete Sortable.sortables[s.element.id];=0A=
    }=0A=
  },=0A=
=0A=
  create: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend({=0A=
      element:     element,=0A=
      tag:         'li',       // assumes li children, override with =
tag: 'tagname'=0A=
      dropOnEmpty: false,=0A=
      tree:        false,=0A=
      treeTag:     'ul',=0A=
      overlap:     'vertical', // one of 'vertical', 'horizontal'=0A=
      constraint:  'vertical', // one of 'vertical', 'horizontal', false=0A=
      containment: element,    // also takes array of elements (or =
id's); or false=0A=
      handle:      false,      // or a CSS class=0A=
      only:        false,=0A=
      delay:       0,=0A=
      hoverclass:  null,=0A=
      ghosting:    false,=0A=
      quiet:       false,=0A=
      scroll:      false,=0A=
      scrollSensitivity: 20,=0A=
      scrollSpeed: 15,=0A=
      format:      this.SERIALIZE_RULE,=0A=
=0A=
      // these take arrays of elements or ids and can be=0A=
      // used for better initialization performance=0A=
      elements:    false,=0A=
      handles:     false,=0A=
=0A=
      onChange:    Prototype.emptyFunction,=0A=
      onUpdate:    Prototype.emptyFunction=0A=
    }, arguments[1] || { });=0A=
=0A=
    // clear any old sortable with same element=0A=
    this.destroy(element);=0A=
=0A=
    // build options for the draggables=0A=
    var options_for_draggable =3D {=0A=
      revert:      true,=0A=
      quiet:       options.quiet,=0A=
      scroll:      options.scroll,=0A=
      scrollSpeed: options.scrollSpeed,=0A=
      scrollSensitivity: options.scrollSensitivity,=0A=
      delay:       options.delay,=0A=
      ghosting:    options.ghosting,=0A=
      constraint:  options.constraint,=0A=
      handle:      options.handle };=0A=
=0A=
    if(options.starteffect)=0A=
      options_for_draggable.starteffect =3D options.starteffect;=0A=
=0A=
    if(options.reverteffect)=0A=
      options_for_draggable.reverteffect =3D options.reverteffect;=0A=
    else=0A=
      if(options.ghosting) options_for_draggable.reverteffect =3D =
function(element) {=0A=
        element.style.top  =3D 0;=0A=
        element.style.left =3D 0;=0A=
      };=0A=
=0A=
    if(options.endeffect)=0A=
      options_for_draggable.endeffect =3D options.endeffect;=0A=
=0A=
    if(options.zindex)=0A=
      options_for_draggable.zindex =3D options.zindex;=0A=
=0A=
    // build options for the droppables=0A=
    var options_for_droppable =3D {=0A=
      overlap:     options.overlap,=0A=
      containment: options.containment,=0A=
      tree:        options.tree,=0A=
      hoverclass:  options.hoverclass,=0A=
      onHover:     Sortable.onHover=0A=
    };=0A=
=0A=
    var options_for_tree =3D {=0A=
      onHover:      Sortable.onEmptyHover,=0A=
      overlap:      options.overlap,=0A=
      containment:  options.containment,=0A=
      hoverclass:   options.hoverclass=0A=
    };=0A=
=0A=
    // fix for gecko engine=0A=
    Element.cleanWhitespace(element);=0A=
=0A=
    options.draggables =3D [];=0A=
    options.droppables =3D [];=0A=
=0A=
    // drop on empty handling=0A=
    if(options.dropOnEmpty || options.tree) {=0A=
      Droppables.add(element, options_for_tree);=0A=
      options.droppables.push(element);=0A=
    }=0A=
=0A=
    (options.elements || this.findElements(element, options) || =
[]).each( function(e,i) {=0A=
      var handle =3D options.handles ? $(options.handles[i]) :=0A=
        (options.handle ? $(e).select('.' + options.handle)[0] : e);=0A=
      options.draggables.push(=0A=
        new Draggable(e, Object.extend(options_for_draggable, { handle: =
handle })));=0A=
      Droppables.add(e, options_for_droppable);=0A=
      if(options.tree) e.treeNode =3D element;=0A=
      options.droppables.push(e);=0A=
    });=0A=
=0A=
    if(options.tree) {=0A=
      (Sortable.findTreeElements(element, options) || []).each( =
function(e) {=0A=
        Droppables.add(e, options_for_tree);=0A=
        e.treeNode =3D element;=0A=
        options.droppables.push(e);=0A=
      });=0A=
    }=0A=
=0A=
    // keep reference=0A=
    this.sortables[element.id] =3D options;=0A=
=0A=
    // for onupdate=0A=
    Draggables.addObserver(new SortableObserver(element, =
options.onUpdate));=0A=
=0A=
  },=0A=
=0A=
  // return all suitable-for-sortable elements in a guaranteed order=0A=
  findElements: function(element, options) {=0A=
    return Element.findChildren(=0A=
      element, options.only, options.tree ? true : false, options.tag);=0A=
  },=0A=
=0A=
  findTreeElements: function(element, options) {=0A=
    return Element.findChildren(=0A=
      element, options.only, options.tree ? true : false, =
options.treeTag);=0A=
  },=0A=
=0A=
  onHover: function(element, dropon, overlap) {=0A=
    if(Element.isParent(dropon, element)) return;=0A=
=0A=
    if(overlap > .33 && overlap < .66 && Sortable.options(dropon).tree) {=0A=
      return;=0A=
    } else if(overlap>0.5) {=0A=
      Sortable.mark(dropon, 'before');=0A=
      if(dropon.previousSibling !=3D element) {=0A=
        var oldParentNode =3D element.parentNode;=0A=
        element.style.visibility =3D "hidden"; // fix gecko rendering=0A=
        dropon.parentNode.insertBefore(element, dropon);=0A=
        if(dropon.parentNode!=3DoldParentNode)=0A=
          Sortable.options(oldParentNode).onChange(element);=0A=
        Sortable.options(dropon.parentNode).onChange(element);=0A=
      }=0A=
    } else {=0A=
      Sortable.mark(dropon, 'after');=0A=
      var nextElement =3D dropon.nextSibling || null;=0A=
      if(nextElement !=3D element) {=0A=
        var oldParentNode =3D element.parentNode;=0A=
        element.style.visibility =3D "hidden"; // fix gecko rendering=0A=
        dropon.parentNode.insertBefore(element, nextElement);=0A=
        if(dropon.parentNode!=3DoldParentNode)=0A=
          Sortable.options(oldParentNode).onChange(element);=0A=
        Sortable.options(dropon.parentNode).onChange(element);=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  onEmptyHover: function(element, dropon, overlap) {=0A=
    var oldParentNode =3D element.parentNode;=0A=
    var droponOptions =3D Sortable.options(dropon);=0A=
=0A=
    if(!Element.isParent(dropon, element)) {=0A=
      var index;=0A=
=0A=
      var children =3D Sortable.findElements(dropon, {tag: =
droponOptions.tag, only: droponOptions.only});=0A=
      var child =3D null;=0A=
=0A=
      if(children) {=0A=
        var offset =3D Element.offsetSize(dropon, droponOptions.overlap) =
* (1.0 - overlap);=0A=
=0A=
        for (index =3D 0; index < children.length; index +=3D 1) {=0A=
          if (offset - Element.offsetSize (children[index], =
droponOptions.overlap) >=3D 0) {=0A=
            offset -=3D Element.offsetSize (children[index], =
droponOptions.overlap);=0A=
          } else if (offset - (Element.offsetSize (children[index], =
droponOptions.overlap) / 2) >=3D 0) {=0A=
            child =3D index + 1 < children.length ? children[index + 1] =
: null;=0A=
            break;=0A=
          } else {=0A=
            child =3D children[index];=0A=
            break;=0A=
          }=0A=
        }=0A=
      }=0A=
=0A=
      dropon.insertBefore(element, child);=0A=
=0A=
      Sortable.options(oldParentNode).onChange(element);=0A=
      droponOptions.onChange(element);=0A=
    }=0A=
  },=0A=
=0A=
  unmark: function() {=0A=
    if(Sortable._marker) Sortable._marker.hide();=0A=
  },=0A=
=0A=
  mark: function(dropon, position) {=0A=
    // mark on ghosting only=0A=
    var sortable =3D Sortable.options(dropon.parentNode);=0A=
    if(sortable && !sortable.ghosting) return;=0A=
=0A=
    if(!Sortable._marker) {=0A=
      Sortable._marker =3D=0A=
        ($('dropmarker') || =
Element.extend(document.createElement('DIV'))).=0A=
          =
hide().addClassName('dropmarker').setStyle({position:'absolute'});=0A=
      =
document.getElementsByTagName("body").item(0).appendChild(Sortable._marke=
r);=0A=
    }=0A=
    var offsets =3D Position.cumulativeOffset(dropon);=0A=
    Sortable._marker.setStyle({left: offsets[0]+'px', top: offsets[1] + =
'px'});=0A=
=0A=
    if(position=3D=3D'after')=0A=
      if(sortable.overlap =3D=3D 'horizontal')=0A=
        Sortable._marker.setStyle({left: (offsets[0]+dropon.clientWidth) =
+ 'px'});=0A=
      else=0A=
        Sortable._marker.setStyle({top: (offsets[1]+dropon.clientHeight) =
+ 'px'});=0A=
=0A=
    Sortable._marker.show();=0A=
  },=0A=
=0A=
  _tree: function(element, options, parent) {=0A=
    var children =3D Sortable.findElements(element, options) || [];=0A=
=0A=
    for (var i =3D 0; i < children.length; ++i) {=0A=
      var match =3D children[i].id.match(options.format);=0A=
=0A=
      if (!match) continue;=0A=
=0A=
      var child =3D {=0A=
        id: encodeURIComponent(match ? match[1] : null),=0A=
        element: element,=0A=
        parent: parent,=0A=
        children: [],=0A=
        position: parent.children.length,=0A=
        container: $(children[i]).down(options.treeTag)=0A=
      };=0A=
=0A=
      /* Get the element containing the children and recurse over it */=0A=
      if (child.container)=0A=
        this._tree(child.container, options, child);=0A=
=0A=
      parent.children.push (child);=0A=
    }=0A=
=0A=
    return parent;=0A=
  },=0A=
=0A=
  tree: function(element) {=0A=
    element =3D $(element);=0A=
    var sortableOptions =3D this.options(element);=0A=
    var options =3D Object.extend({=0A=
      tag: sortableOptions.tag,=0A=
      treeTag: sortableOptions.treeTag,=0A=
      only: sortableOptions.only,=0A=
      name: element.id,=0A=
      format: sortableOptions.format=0A=
    }, arguments[1] || { });=0A=
=0A=
    var root =3D {=0A=
      id: null,=0A=
      parent: null,=0A=
      children: [],=0A=
      container: element,=0A=
      position: 0=0A=
    };=0A=
=0A=
    return Sortable._tree(element, options, root);=0A=
  },=0A=
=0A=
  /* Construct a [i] index for a particular node */=0A=
  _constructIndex: function(node) {=0A=
    var index =3D '';=0A=
    do {=0A=
      if (node.id) index =3D '[' + node.position + ']' + index;=0A=
    } while ((node =3D node.parent) !=3D null);=0A=
    return index;=0A=
  },=0A=
=0A=
  sequence: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(this.options(element), arguments[1] || =
{ });=0A=
=0A=
    return $(this.findElements(element, options) || []).map( =
function(item) {=0A=
      return item.id.match(options.format) ? =
item.id.match(options.format)[1] : '';=0A=
    });=0A=
  },=0A=
=0A=
  setSequence: function(element, new_sequence) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(this.options(element), arguments[2] || =
{ });=0A=
=0A=
    var nodeMap =3D { };=0A=
    this.findElements(element, options).each( function(n) {=0A=
        if (n.id.match(options.format))=0A=
            nodeMap[n.id.match(options.format)[1]] =3D [n, n.parentNode];=0A=
        n.parentNode.removeChild(n);=0A=
    });=0A=
=0A=
    new_sequence.each(function(ident) {=0A=
      var n =3D nodeMap[ident];=0A=
      if (n) {=0A=
        n[1].appendChild(n[0]);=0A=
        delete nodeMap[ident];=0A=
      }=0A=
    });=0A=
  },=0A=
=0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    var options =3D Object.extend(Sortable.options(element), =
arguments[1] || { });=0A=
    var name =3D encodeURIComponent(=0A=
      (arguments[1] && arguments[1].name) ? arguments[1].name : =
element.id);=0A=
=0A=
    if (options.tree) {=0A=
      return Sortable.tree(element, arguments[1]).children.map( function =
(item) {=0A=
        return [name + Sortable._constructIndex(item) + "[id]=3D" +=0A=
                =
encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));=0A=
      }).flatten().join('&');=0A=
    } else {=0A=
      return Sortable.sequence(element, arguments[1]).map( =
function(item) {=0A=
        return name + "[]=3D" + encodeURIComponent(item);=0A=
      }).join('&');=0A=
    }=0A=
  }=0A=
};=0A=
=0A=
// Returns true if child is contained within element=0A=
Element.isParent =3D function(child, element) {=0A=
  if (!child.parentNode || child =3D=3D element) return false;=0A=
  if (child.parentNode =3D=3D element) return true;=0A=
  return Element.isParent(child.parentNode, element);=0A=
};=0A=
=0A=
Element.findChildren =3D function(element, only, recursive, tagName) {=0A=
  if(!element.hasChildNodes()) return null;=0A=
  tagName =3D tagName.toUpperCase();=0A=
  if(only) only =3D [only].flatten();=0A=
  var elements =3D [];=0A=
  $A(element.childNodes).each( function(e) {=0A=
    if(e.tagName && e.tagName.toUpperCase()=3D=3DtagName &&=0A=
      (!only || (Element.classNames(e).detect(function(v) { return =
only.include(v) }))))=0A=
        elements.push(e);=0A=
    if(recursive) {=0A=
      var grandchildren =3D Element.findChildren(e, only, recursive, =
tagName);=0A=
      if(grandchildren) elements.push(grandchildren);=0A=
    }=0A=
  });=0A=
=0A=
  return (elements.length>0 ? elements.flatten() : []);=0A=
};=0A=
=0A=
Element.offsetSize =3D function (element, type) {=0A=
  return element['offset' + ((type=3D=3D'vertical' || =
type=3D=3D'height') ? 'Height' : 'Width')];=0A=
};
------=_NextPart_000_000F_01CA45DE.2B862BB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://localhost:3000/javascripts/controls.js?1253859600

// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
//           (c) 2005-2008 Ivan Krstic =
(http://blogs.law.harvard.edu/ivan)=0A=
//           (c) 2005-2008 Jon Tirsen (http://www.tirsen.com)=0A=
// Contributors:=0A=
//  Richard Livsey=0A=
//  Rahul Bhargava=0A=
//  Rob Wills=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
// Autocompleter.Base handles all the autocompletion functionality=0A=
// that's independent of the data source for autocompletion. This=0A=
// includes drawing the autocompletion menu, observing keyboard=0A=
// and mouse events, and similar.=0A=
//=0A=
// Specific autocompleters need to provide, at the very least,=0A=
// a getUpdatedChoices function that will be invoked every time=0A=
// the text inside the monitored textbox changes. This method=0A=
// should get the text for which to provide autocompletion by=0A=
// invoking this.getToken(), NOT by directly accessing=0A=
// this.element.value. This is to allow incremental tokenized=0A=
// autocompletion. Specific auto-completion logic (AJAX, etc)=0A=
// belongs in getUpdatedChoices.=0A=
//=0A=
// Tokenized incremental autocompletion is enabled automatically=0A=
// when an autocompleter is instantiated with the 'tokens' option=0A=
// in the options parameter, e.g.:=0A=
// new Ajax.Autocompleter('id','upd', '/url/', { tokens: ',' });=0A=
// will incrementally autocomplete with a comma as the token.=0A=
// Additionally, ',' in the above example can be replaced with=0A=
// a token array, e.g. { tokens: [',', '\n'] } which=0A=
// enables autocompletion on multiple tokens. This is most=0A=
// useful when one of the tokens is \n (a newline), as it=0A=
// allows smart autocompletion after linebreaks.=0A=
=0A=
if(typeof Effect =3D=3D 'undefined')=0A=
  throw("controls.js requires including script.aculo.us' effects.js =
library");=0A=
=0A=
var Autocompleter =3D { };=0A=
Autocompleter.Base =3D Class.create({=0A=
  baseInitialize: function(element, update, options) {=0A=
    element          =3D $(element);=0A=
    this.element     =3D element;=0A=
    this.update      =3D $(update);=0A=
    this.hasFocus    =3D false;=0A=
    this.changed     =3D false;=0A=
    this.active      =3D false;=0A=
    this.index       =3D 0;=0A=
    this.entryCount  =3D 0;=0A=
    this.oldElementValue =3D this.element.value;=0A=
=0A=
    if(this.setOptions)=0A=
      this.setOptions(options);=0A=
    else=0A=
      this.options =3D options || { };=0A=
=0A=
    this.options.paramName    =3D this.options.paramName || =
this.element.name;=0A=
    this.options.tokens       =3D this.options.tokens || [];=0A=
    this.options.frequency    =3D this.options.frequency || 0.4;=0A=
    this.options.minChars     =3D this.options.minChars || 1;=0A=
    this.options.onShow       =3D this.options.onShow ||=0A=
      function(element, update){=0A=
        if(!update.style.position || =
update.style.position=3D=3D'absolute') {=0A=
          update.style.position =3D 'absolute';=0A=
          Position.clone(element, update, {=0A=
            setHeight: false,=0A=
            offsetTop: element.offsetHeight=0A=
          });=0A=
        }=0A=
        Effect.Appear(update,{duration:0.15});=0A=
      };=0A=
    this.options.onHide =3D this.options.onHide ||=0A=
      function(element, update){ new Effect.Fade(update,{duration:0.15}) =
};=0A=
=0A=
    if(typeof(this.options.tokens) =3D=3D 'string')=0A=
      this.options.tokens =3D new Array(this.options.tokens);=0A=
    // Force carriage returns as token delimiters anyway=0A=
    if (!this.options.tokens.include('\n'))=0A=
      this.options.tokens.push('\n');=0A=
=0A=
    this.observer =3D null;=0A=
=0A=
    this.element.setAttribute('autocomplete','off');=0A=
=0A=
    Element.hide(this.update);=0A=
=0A=
    Event.observe(this.element, 'blur', =
this.onBlur.bindAsEventListener(this));=0A=
    Event.observe(this.element, 'keydown', =
this.onKeyPress.bindAsEventListener(this));=0A=
  },=0A=
=0A=
  show: function() {=0A=
    if(Element.getStyle(this.update, 'display')=3D=3D'none') =
this.options.onShow(this.element, this.update);=0A=
    if(!this.iefix &&=0A=
      (Prototype.Browser.IE) &&=0A=
      (Element.getStyle(this.update, 'position')=3D=3D'absolute')) {=0A=
      new Insertion.After(this.update,=0A=
       '<iframe id=3D"' + this.update.id + '_iefix" '+=0A=
       =
'style=3D"display:none;position:absolute;filter:progid:DXImageTransform.M=
icrosoft.Alpha(opacity=3D0);" ' +=0A=
       'src=3D"javascript:false;" frameborder=3D"0" =
scrolling=3D"no"></iframe>');=0A=
      this.iefix =3D $(this.update.id+'_iefix');=0A=
    }=0A=
    if(this.iefix) setTimeout(this.fixIEOverlapping.bind(this), 50);=0A=
  },=0A=
=0A=
  fixIEOverlapping: function() {=0A=
    Position.clone(this.update, this.iefix, =
{setTop:(!this.update.style.height)});=0A=
    this.iefix.style.zIndex =3D 1;=0A=
    this.update.style.zIndex =3D 2;=0A=
    Element.show(this.iefix);=0A=
  },=0A=
=0A=
  hide: function() {=0A=
    this.stopIndicator();=0A=
    if(Element.getStyle(this.update, 'display')!=3D'none') =
this.options.onHide(this.element, this.update);=0A=
    if(this.iefix) Element.hide(this.iefix);=0A=
  },=0A=
=0A=
  startIndicator: function() {=0A=
    if(this.options.indicator) Element.show(this.options.indicator);=0A=
  },=0A=
=0A=
  stopIndicator: function() {=0A=
    if(this.options.indicator) Element.hide(this.options.indicator);=0A=
  },=0A=
=0A=
  onKeyPress: function(event) {=0A=
    if(this.active)=0A=
      switch(event.keyCode) {=0A=
       case Event.KEY_TAB:=0A=
       case Event.KEY_RETURN:=0A=
         this.selectEntry();=0A=
         Event.stop(event);=0A=
       case Event.KEY_ESC:=0A=
         this.hide();=0A=
         this.active =3D false;=0A=
         Event.stop(event);=0A=
         return;=0A=
       case Event.KEY_LEFT:=0A=
       case Event.KEY_RIGHT:=0A=
         return;=0A=
       case Event.KEY_UP:=0A=
         this.markPrevious();=0A=
         this.render();=0A=
         Event.stop(event);=0A=
         return;=0A=
       case Event.KEY_DOWN:=0A=
         this.markNext();=0A=
         this.render();=0A=
         Event.stop(event);=0A=
         return;=0A=
      }=0A=
     else=0A=
       if(event.keyCode=3D=3DEvent.KEY_TAB || =
event.keyCode=3D=3DEvent.KEY_RETURN ||=0A=
         (Prototype.Browser.WebKit > 0 && event.keyCode =3D=3D 0)) =
return;=0A=
=0A=
    this.changed =3D true;=0A=
    this.hasFocus =3D true;=0A=
=0A=
    if(this.observer) clearTimeout(this.observer);=0A=
      this.observer =3D=0A=
        setTimeout(this.onObserverEvent.bind(this), =
this.options.frequency*1000);=0A=
  },=0A=
=0A=
  activate: function() {=0A=
    this.changed =3D false;=0A=
    this.hasFocus =3D true;=0A=
    this.getUpdatedChoices();=0A=
  },=0A=
=0A=
  onHover: function(event) {=0A=
    var element =3D Event.findElement(event, 'LI');=0A=
    if(this.index !=3D element.autocompleteIndex)=0A=
    {=0A=
        this.index =3D element.autocompleteIndex;=0A=
        this.render();=0A=
    }=0A=
    Event.stop(event);=0A=
  },=0A=
=0A=
  onClick: function(event) {=0A=
    var element =3D Event.findElement(event, 'LI');=0A=
    this.index =3D element.autocompleteIndex;=0A=
    this.selectEntry();=0A=
    this.hide();=0A=
  },=0A=
=0A=
  onBlur: function(event) {=0A=
    // needed to make click events working=0A=
    setTimeout(this.hide.bind(this), 250);=0A=
    this.hasFocus =3D false;=0A=
    this.active =3D false;=0A=
  },=0A=
=0A=
  render: function() {=0A=
    if(this.entryCount > 0) {=0A=
      for (var i =3D 0; i < this.entryCount; i++)=0A=
        this.index=3D=3Di ?=0A=
          Element.addClassName(this.getEntry(i),"selected") :=0A=
          Element.removeClassName(this.getEntry(i),"selected");=0A=
      if(this.hasFocus) {=0A=
        this.show();=0A=
        this.active =3D true;=0A=
      }=0A=
    } else {=0A=
      this.active =3D false;=0A=
      this.hide();=0A=
    }=0A=
  },=0A=
=0A=
  markPrevious: function() {=0A=
    if(this.index > 0) this.index--;=0A=
      else this.index =3D this.entryCount-1;=0A=
    this.getEntry(this.index).scrollIntoView(true);=0A=
  },=0A=
=0A=
  markNext: function() {=0A=
    if(this.index < this.entryCount-1) this.index++;=0A=
      else this.index =3D 0;=0A=
    this.getEntry(this.index).scrollIntoView(false);=0A=
  },=0A=
=0A=
  getEntry: function(index) {=0A=
    return this.update.firstChild.childNodes[index];=0A=
  },=0A=
=0A=
  getCurrentEntry: function() {=0A=
    return this.getEntry(this.index);=0A=
  },=0A=
=0A=
  selectEntry: function() {=0A=
    this.active =3D false;=0A=
    this.updateElement(this.getCurrentEntry());=0A=
  },=0A=
=0A=
  updateElement: function(selectedElement) {=0A=
    if (this.options.updateElement) {=0A=
      this.options.updateElement(selectedElement);=0A=
      return;=0A=
    }=0A=
    var value =3D '';=0A=
    if (this.options.select) {=0A=
      var nodes =3D $(selectedElement).select('.' + this.options.select) =
|| [];=0A=
      if(nodes.length>0) value =3D Element.collectTextNodes(nodes[0], =
this.options.select);=0A=
    } else=0A=
      value =3D Element.collectTextNodesIgnoreClass(selectedElement, =
'informal');=0A=
=0A=
    var bounds =3D this.getTokenBounds();=0A=
    if (bounds[0] !=3D -1) {=0A=
      var newValue =3D this.element.value.substr(0, bounds[0]);=0A=
      var whitespace =3D =
this.element.value.substr(bounds[0]).match(/^\s+/);=0A=
      if (whitespace)=0A=
        newValue +=3D whitespace[0];=0A=
      this.element.value =3D newValue + value + =
this.element.value.substr(bounds[1]);=0A=
    } else {=0A=
      this.element.value =3D value;=0A=
    }=0A=
    this.oldElementValue =3D this.element.value;=0A=
    this.element.focus();=0A=
=0A=
    if (this.options.afterUpdateElement)=0A=
      this.options.afterUpdateElement(this.element, selectedElement);=0A=
  },=0A=
=0A=
  updateChoices: function(choices) {=0A=
    if(!this.changed && this.hasFocus) {=0A=
      this.update.innerHTML =3D choices;=0A=
      Element.cleanWhitespace(this.update);=0A=
      Element.cleanWhitespace(this.update.down());=0A=
=0A=
      if(this.update.firstChild && this.update.down().childNodes) {=0A=
        this.entryCount =3D=0A=
          this.update.down().childNodes.length;=0A=
        for (var i =3D 0; i < this.entryCount; i++) {=0A=
          var entry =3D this.getEntry(i);=0A=
          entry.autocompleteIndex =3D i;=0A=
          this.addObservers(entry);=0A=
        }=0A=
      } else {=0A=
        this.entryCount =3D 0;=0A=
      }=0A=
=0A=
      this.stopIndicator();=0A=
      this.index =3D 0;=0A=
=0A=
      if(this.entryCount=3D=3D1 && this.options.autoSelect) {=0A=
        this.selectEntry();=0A=
        this.hide();=0A=
      } else {=0A=
        this.render();=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  addObservers: function(element) {=0A=
    Event.observe(element, "mouseover", =
this.onHover.bindAsEventListener(this));=0A=
    Event.observe(element, "click", =
this.onClick.bindAsEventListener(this));=0A=
  },=0A=
=0A=
  onObserverEvent: function() {=0A=
    this.changed =3D false;=0A=
    this.tokenBounds =3D null;=0A=
    if(this.getToken().length>=3Dthis.options.minChars) {=0A=
      this.getUpdatedChoices();=0A=
    } else {=0A=
      this.active =3D false;=0A=
      this.hide();=0A=
    }=0A=
    this.oldElementValue =3D this.element.value;=0A=
  },=0A=
=0A=
  getToken: function() {=0A=
    var bounds =3D this.getTokenBounds();=0A=
    return this.element.value.substring(bounds[0], bounds[1]).strip();=0A=
  },=0A=
=0A=
  getTokenBounds: function() {=0A=
    if (null !=3D this.tokenBounds) return this.tokenBounds;=0A=
    var value =3D this.element.value;=0A=
    if (value.strip().empty()) return [-1, 0];=0A=
    var diff =3D arguments.callee.getFirstDifferencePos(value, =
this.oldElementValue);=0A=
    var offset =3D (diff =3D=3D this.oldElementValue.length ? 1 : 0);=0A=
    var prevTokenPos =3D -1, nextTokenPos =3D value.length;=0A=
    var tp;=0A=
    for (var index =3D 0, l =3D this.options.tokens.length; index < l; =
++index) {=0A=
      tp =3D value.lastIndexOf(this.options.tokens[index], diff + offset =
- 1);=0A=
      if (tp > prevTokenPos) prevTokenPos =3D tp;=0A=
      tp =3D value.indexOf(this.options.tokens[index], diff + offset);=0A=
      if (-1 !=3D tp && tp < nextTokenPos) nextTokenPos =3D tp;=0A=
    }=0A=
    return (this.tokenBounds =3D [prevTokenPos + 1, nextTokenPos]);=0A=
  }=0A=
});=0A=
=0A=
Autocompleter.Base.prototype.getTokenBounds.getFirstDifferencePos =3D =
function(newS, oldS) {=0A=
  var boundary =3D Math.min(newS.length, oldS.length);=0A=
  for (var index =3D 0; index < boundary; ++index)=0A=
    if (newS[index] !=3D oldS[index])=0A=
      return index;=0A=
  return boundary;=0A=
};=0A=
=0A=
Ajax.Autocompleter =3D Class.create(Autocompleter.Base, {=0A=
  initialize: function(element, update, url, options) {=0A=
    this.baseInitialize(element, update, options);=0A=
    this.options.asynchronous  =3D true;=0A=
    this.options.onComplete    =3D this.onComplete.bind(this);=0A=
    this.options.defaultParams =3D this.options.parameters || null;=0A=
    this.url                   =3D url;=0A=
  },=0A=
=0A=
  getUpdatedChoices: function() {=0A=
    this.startIndicator();=0A=
=0A=
    var entry =3D encodeURIComponent(this.options.paramName) + '=3D' +=0A=
      encodeURIComponent(this.getToken());=0A=
=0A=
    this.options.parameters =3D this.options.callback ?=0A=
      this.options.callback(this.element, entry) : entry;=0A=
=0A=
    if(this.options.defaultParams)=0A=
      this.options.parameters +=3D '&' + this.options.defaultParams;=0A=
=0A=
    new Ajax.Request(this.url, this.options);=0A=
  },=0A=
=0A=
  onComplete: function(request) {=0A=
    this.updateChoices(request.responseText);=0A=
  }=0A=
});=0A=
=0A=
// The local array autocompleter. Used when you'd prefer to=0A=
// inject an array of autocompletion options into the page, rather=0A=
// than sending out Ajax queries, which can be quite slow sometimes.=0A=
//=0A=
// The constructor takes four parameters. The first two are, as usual,=0A=
// the id of the monitored textbox, and id of the autocompletion menu.=0A=
// The third is the array you want to autocomplete from, and the fourth=0A=
// is the options block.=0A=
//=0A=
// Extra local autocompletion options:=0A=
// - choices - How many autocompletion choices to offer=0A=
//=0A=
// - partialSearch - If false, the autocompleter will match entered=0A=
//                    text only at the beginning of strings in the=0A=
//                    autocomplete array. Defaults to true, which will=0A=
//                    match text at the beginning of any *word* in the=0A=
//                    strings in the autocomplete array. If you want to=0A=
//                    search anywhere in the string, additionally set=0A=
//                    the option fullSearch to true (default: off).=0A=
//=0A=
// - fullSsearch - Search anywhere in autocomplete array strings.=0A=
//=0A=
// - partialChars - How many characters to enter before triggering=0A=
//                   a partial match (unlike minChars, which defines=0A=
//                   how many characters are required to do any match=0A=
//                   at all). Defaults to 2.=0A=
//=0A=
// - ignoreCase - Whether to ignore case when autocompleting.=0A=
//                 Defaults to true.=0A=
//=0A=
// It's possible to pass in a custom function as the 'selector'=0A=
// option, if you prefer to write your own autocompletion logic.=0A=
// In that case, the other options above will not apply unless=0A=
// you support them.=0A=
=0A=
Autocompleter.Local =3D Class.create(Autocompleter.Base, {=0A=
  initialize: function(element, update, array, options) {=0A=
    this.baseInitialize(element, update, options);=0A=
    this.options.array =3D array;=0A=
  },=0A=
=0A=
  getUpdatedChoices: function() {=0A=
    this.updateChoices(this.options.selector(this));=0A=
  },=0A=
=0A=
  setOptions: function(options) {=0A=
    this.options =3D Object.extend({=0A=
      choices: 10,=0A=
      partialSearch: true,=0A=
      partialChars: 2,=0A=
      ignoreCase: true,=0A=
      fullSearch: false,=0A=
      selector: function(instance) {=0A=
        var ret       =3D []; // Beginning matches=0A=
        var partial   =3D []; // Inside matches=0A=
        var entry     =3D instance.getToken();=0A=
        var count     =3D 0;=0A=
=0A=
        for (var i =3D 0; i < instance.options.array.length &&=0A=
          ret.length < instance.options.choices ; i++) {=0A=
=0A=
          var elem =3D instance.options.array[i];=0A=
          var foundPos =3D instance.options.ignoreCase ?=0A=
            elem.toLowerCase().indexOf(entry.toLowerCase()) :=0A=
            elem.indexOf(entry);=0A=
=0A=
          while (foundPos !=3D -1) {=0A=
            if (foundPos =3D=3D 0 && elem.length !=3D entry.length) {=0A=
              ret.push("<li><strong>" + elem.substr(0, entry.length) + =
"</strong>" +=0A=
                elem.substr(entry.length) + "</li>");=0A=
              break;=0A=
            } else if (entry.length >=3D instance.options.partialChars &&=0A=
              instance.options.partialSearch && foundPos !=3D -1) {=0A=
              if (instance.options.fullSearch || =
/\s/.test(elem.substr(foundPos-1,1))) {=0A=
                partial.push("<li>" + elem.substr(0, foundPos) + =
"<strong>" +=0A=
                  elem.substr(foundPos, entry.length) + "</strong>" + =
elem.substr(=0A=
                  foundPos + entry.length) + "</li>");=0A=
                break;=0A=
              }=0A=
            }=0A=
=0A=
            foundPos =3D instance.options.ignoreCase ?=0A=
              elem.toLowerCase().indexOf(entry.toLowerCase(), foundPos + =
1) :=0A=
              elem.indexOf(entry, foundPos + 1);=0A=
=0A=
          }=0A=
        }=0A=
        if (partial.length)=0A=
          ret =3D ret.concat(partial.slice(0, instance.options.choices - =
ret.length));=0A=
        return "<ul>" + ret.join('') + "</ul>";=0A=
      }=0A=
    }, options || { });=0A=
  }=0A=
});=0A=
=0A=
// AJAX in-place editor and collection editor=0A=
// Full rewrite by Christophe Porteneuve <tdd@tddsworld.com> (April =
2007).=0A=
=0A=
// Use this if you notice weird scrolling problems on some browsers,=0A=
// the DOM might be a bit confused when this gets called so do this=0A=
// waits 1 ms (with setTimeout) until it does the activation=0A=
Field.scrollFreeActivate =3D function(field) {=0A=
  setTimeout(function() {=0A=
    Field.activate(field);=0A=
  }, 1);=0A=
};=0A=
=0A=
Ajax.InPlaceEditor =3D Class.create({=0A=
  initialize: function(element, url, options) {=0A=
    this.url =3D url;=0A=
    this.element =3D element =3D $(element);=0A=
    this.prepareOptions();=0A=
    this._controls =3D { };=0A=
    arguments.callee.dealWithDeprecatedOptions(options); // DEPRECATION =
LAYER!!!=0A=
    Object.extend(this.options, options || { });=0A=
    if (!this.options.formId && this.element.id) {=0A=
      this.options.formId =3D this.element.id + '-inplaceeditor';=0A=
      if ($(this.options.formId))=0A=
        this.options.formId =3D '';=0A=
    }=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl =3D $(this.options.externalControl);=0A=
    if (!this.options.externalControl)=0A=
      this.options.externalControlOnly =3D false;=0A=
    this._originalBackground =3D =
this.element.getStyle('background-color') || 'transparent';=0A=
    this.element.title =3D this.options.clickToEditText;=0A=
    this._boundCancelHandler =3D this.handleFormCancellation.bind(this);=0A=
    this._boundComplete =3D (this.options.onComplete || =
Prototype.emptyFunction).bind(this);=0A=
    this._boundFailureHandler =3D this.handleAJAXFailure.bind(this);=0A=
    this._boundSubmitHandler =3D this.handleFormSubmission.bind(this);=0A=
    this._boundWrapperHandler =3D this.wrapUp.bind(this);=0A=
    this.registerListeners();=0A=
  },=0A=
  checkForEscapeOrReturn: function(e) {=0A=
    if (!this._editing || e.ctrlKey || e.altKey || e.shiftKey) return;=0A=
    if (Event.KEY_ESC =3D=3D e.keyCode)=0A=
      this.handleFormCancellation(e);=0A=
    else if (Event.KEY_RETURN =3D=3D e.keyCode)=0A=
      this.handleFormSubmission(e);=0A=
  },=0A=
  createControl: function(mode, handler, extraClasses) {=0A=
    var control =3D this.options[mode + 'Control'];=0A=
    var text =3D this.options[mode + 'Text'];=0A=
    if ('button' =3D=3D control) {=0A=
      var btn =3D document.createElement('input');=0A=
      btn.type =3D 'submit';=0A=
      btn.value =3D text;=0A=
      btn.className =3D 'editor_' + mode + '_button';=0A=
      if ('cancel' =3D=3D mode)=0A=
        btn.onclick =3D this._boundCancelHandler;=0A=
      this._form.appendChild(btn);=0A=
      this._controls[mode] =3D btn;=0A=
    } else if ('link' =3D=3D control) {=0A=
      var link =3D document.createElement('a');=0A=
      link.href =3D '#';=0A=
      link.appendChild(document.createTextNode(text));=0A=
      link.onclick =3D 'cancel' =3D=3D mode ? this._boundCancelHandler : =
this._boundSubmitHandler;=0A=
      link.className =3D 'editor_' + mode + '_link';=0A=
      if (extraClasses)=0A=
        link.className +=3D ' ' + extraClasses;=0A=
      this._form.appendChild(link);=0A=
      this._controls[mode] =3D link;=0A=
    }=0A=
  },=0A=
  createEditField: function() {=0A=
    var text =3D (this.options.loadTextURL ? this.options.loadingText : =
this.getText());=0A=
    var fld;=0A=
    if (1 >=3D this.options.rows && !/\r|\n/.test(this.getText())) {=0A=
      fld =3D document.createElement('input');=0A=
      fld.type =3D 'text';=0A=
      var size =3D this.options.size || this.options.cols || 0;=0A=
      if (0 < size) fld.size =3D size;=0A=
    } else {=0A=
      fld =3D document.createElement('textarea');=0A=
      fld.rows =3D (1 >=3D this.options.rows ? this.options.autoRows : =
this.options.rows);=0A=
      fld.cols =3D this.options.cols || 40;=0A=
    }=0A=
    fld.name =3D this.options.paramName;=0A=
    fld.value =3D text; // No HTML breaks conversion anymore=0A=
    fld.className =3D 'editor_field';=0A=
    if (this.options.submitOnBlur)=0A=
      fld.onblur =3D this._boundSubmitHandler;=0A=
    this._controls.editor =3D fld;=0A=
    if (this.options.loadTextURL)=0A=
      this.loadExternalText();=0A=
    this._form.appendChild(this._controls.editor);=0A=
  },=0A=
  createForm: function() {=0A=
    var ipe =3D this;=0A=
    function addText(mode, condition) {=0A=
      var text =3D ipe.options['text' + mode + 'Controls'];=0A=
      if (!text || condition =3D=3D=3D false) return;=0A=
      ipe._form.appendChild(document.createTextNode(text));=0A=
    };=0A=
    this._form =3D $(document.createElement('form'));=0A=
    this._form.id =3D this.options.formId;=0A=
    this._form.addClassName(this.options.formClassName);=0A=
    this._form.onsubmit =3D this._boundSubmitHandler;=0A=
    this.createEditField();=0A=
    if ('textarea' =3D=3D this._controls.editor.tagName.toLowerCase())=0A=
      this._form.appendChild(document.createElement('br'));=0A=
    if (this.options.onFormCustomization)=0A=
      this.options.onFormCustomization(this, this._form);=0A=
    addText('Before', this.options.okControl || =
this.options.cancelControl);=0A=
    this.createControl('ok', this._boundSubmitHandler);=0A=
    addText('Between', this.options.okControl && =
this.options.cancelControl);=0A=
    this.createControl('cancel', this._boundCancelHandler, =
'editor_cancel');=0A=
    addText('After', this.options.okControl || =
this.options.cancelControl);=0A=
  },=0A=
  destroy: function() {=0A=
    if (this._oldInnerHTML)=0A=
      this.element.innerHTML =3D this._oldInnerHTML;=0A=
    this.leaveEditMode();=0A=
    this.unregisterListeners();=0A=
  },=0A=
  enterEditMode: function(e) {=0A=
    if (this._saving || this._editing) return;=0A=
    this._editing =3D true;=0A=
    this.triggerCallback('onEnterEditMode');=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl.hide();=0A=
    this.element.hide();=0A=
    this.createForm();=0A=
    this.element.parentNode.insertBefore(this._form, this.element);=0A=
    if (!this.options.loadTextURL)=0A=
      this.postProcessEditField();=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  enterHover: function(e) {=0A=
    if (this.options.hoverClassName)=0A=
      this.element.addClassName(this.options.hoverClassName);=0A=
    if (this._saving) return;=0A=
    this.triggerCallback('onEnterHover');=0A=
  },=0A=
  getText: function() {=0A=
    return this.element.innerHTML.unescapeHTML();=0A=
  },=0A=
  handleAJAXFailure: function(transport) {=0A=
    this.triggerCallback('onFailure', transport);=0A=
    if (this._oldInnerHTML) {=0A=
      this.element.innerHTML =3D this._oldInnerHTML;=0A=
      this._oldInnerHTML =3D null;=0A=
    }=0A=
  },=0A=
  handleFormCancellation: function(e) {=0A=
    this.wrapUp();=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  handleFormSubmission: function(e) {=0A=
    var form =3D this._form;=0A=
    var value =3D $F(this._controls.editor);=0A=
    this.prepareSubmission();=0A=
    var params =3D this.options.callback(form, value) || '';=0A=
    if (Object.isString(params))=0A=
      params =3D params.toQueryParams();=0A=
    params.editorId =3D this.element.id;=0A=
    if (this.options.htmlResponse) {=0A=
      var options =3D Object.extend({ evalScripts: true }, =
this.options.ajaxOptions);=0A=
      Object.extend(options, {=0A=
        parameters: params,=0A=
        onComplete: this._boundWrapperHandler,=0A=
        onFailure: this._boundFailureHandler=0A=
      });=0A=
      new Ajax.Updater({ success: this.element }, this.url, options);=0A=
    } else {=0A=
      var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
      Object.extend(options, {=0A=
        parameters: params,=0A=
        onComplete: this._boundWrapperHandler,=0A=
        onFailure: this._boundFailureHandler=0A=
      });=0A=
      new Ajax.Request(this.url, options);=0A=
    }=0A=
    if (e) Event.stop(e);=0A=
  },=0A=
  leaveEditMode: function() {=0A=
    this.element.removeClassName(this.options.savingClassName);=0A=
    this.removeForm();=0A=
    this.leaveHover();=0A=
    this.element.style.backgroundColor =3D this._originalBackground;=0A=
    this.element.show();=0A=
    if (this.options.externalControl)=0A=
      this.options.externalControl.show();=0A=
    this._saving =3D false;=0A=
    this._editing =3D false;=0A=
    this._oldInnerHTML =3D null;=0A=
    this.triggerCallback('onLeaveEditMode');=0A=
  },=0A=
  leaveHover: function(e) {=0A=
    if (this.options.hoverClassName)=0A=
      this.element.removeClassName(this.options.hoverClassName);=0A=
    if (this._saving) return;=0A=
    this.triggerCallback('onLeaveHover');=0A=
  },=0A=
  loadExternalText: function() {=0A=
    this._form.addClassName(this.options.loadingClassName);=0A=
    this._controls.editor.disabled =3D true;=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        this._form.removeClassName(this.options.loadingClassName);=0A=
        var text =3D transport.responseText;=0A=
        if (this.options.stripLoadedTextTags)=0A=
          text =3D text.stripTags();=0A=
        this._controls.editor.value =3D text;=0A=
        this._controls.editor.disabled =3D false;=0A=
        this.postProcessEditField();=0A=
      }.bind(this),=0A=
      onFailure: this._boundFailureHandler=0A=
    });=0A=
    new Ajax.Request(this.options.loadTextURL, options);=0A=
  },=0A=
  postProcessEditField: function() {=0A=
    var fpc =3D this.options.fieldPostCreation;=0A=
    if (fpc)=0A=
      $(this._controls.editor)['focus' =3D=3D fpc ? 'focus' : =
'activate']();=0A=
  },=0A=
  prepareOptions: function() {=0A=
    this.options =3D Object.clone(Ajax.InPlaceEditor.DefaultOptions);=0A=
    Object.extend(this.options, Ajax.InPlaceEditor.DefaultCallbacks);=0A=
    [this._extraDefaultOptions].flatten().compact().each(function(defs) {=0A=
      Object.extend(this.options, defs);=0A=
    }.bind(this));=0A=
  },=0A=
  prepareSubmission: function() {=0A=
    this._saving =3D true;=0A=
    this.removeForm();=0A=
    this.leaveHover();=0A=
    this.showSaving();=0A=
  },=0A=
  registerListeners: function() {=0A=
    this._listeners =3D { };=0A=
    var listener;=0A=
    $H(Ajax.InPlaceEditor.Listeners).each(function(pair) {=0A=
      listener =3D this[pair.value].bind(this);=0A=
      this._listeners[pair.key] =3D listener;=0A=
      if (!this.options.externalControlOnly)=0A=
        this.element.observe(pair.key, listener);=0A=
      if (this.options.externalControl)=0A=
        this.options.externalControl.observe(pair.key, listener);=0A=
    }.bind(this));=0A=
  },=0A=
  removeForm: function() {=0A=
    if (!this._form) return;=0A=
    this._form.remove();=0A=
    this._form =3D null;=0A=
    this._controls =3D { };=0A=
  },=0A=
  showSaving: function() {=0A=
    this._oldInnerHTML =3D this.element.innerHTML;=0A=
    this.element.innerHTML =3D this.options.savingText;=0A=
    this.element.addClassName(this.options.savingClassName);=0A=
    this.element.style.backgroundColor =3D this._originalBackground;=0A=
    this.element.show();=0A=
  },=0A=
  triggerCallback: function(cbName, arg) {=0A=
    if ('function' =3D=3D typeof this.options[cbName]) {=0A=
      this.options[cbName](this, arg);=0A=
    }=0A=
  },=0A=
  unregisterListeners: function() {=0A=
    $H(this._listeners).each(function(pair) {=0A=
      if (!this.options.externalControlOnly)=0A=
        this.element.stopObserving(pair.key, pair.value);=0A=
      if (this.options.externalControl)=0A=
        this.options.externalControl.stopObserving(pair.key, pair.value);=0A=
    }.bind(this));=0A=
  },=0A=
  wrapUp: function(transport) {=0A=
    this.leaveEditMode();=0A=
    // Can't use triggerCallback due to backward compatibility: requires=0A=
    // binding + direct element=0A=
    this._boundComplete(transport, this.element);=0A=
  }=0A=
});=0A=
=0A=
Object.extend(Ajax.InPlaceEditor.prototype, {=0A=
  dispose: Ajax.InPlaceEditor.prototype.destroy=0A=
});=0A=
=0A=
Ajax.InPlaceCollectionEditor =3D Class.create(Ajax.InPlaceEditor, {=0A=
  initialize: function($super, element, url, options) {=0A=
    this._extraDefaultOptions =3D =
Ajax.InPlaceCollectionEditor.DefaultOptions;=0A=
    $super(element, url, options);=0A=
  },=0A=
=0A=
  createEditField: function() {=0A=
    var list =3D document.createElement('select');=0A=
    list.name =3D this.options.paramName;=0A=
    list.size =3D 1;=0A=
    this._controls.editor =3D list;=0A=
    this._collection =3D this.options.collection || [];=0A=
    if (this.options.loadCollectionURL)=0A=
      this.loadCollection();=0A=
    else=0A=
      this.checkForExternalText();=0A=
    this._form.appendChild(this._controls.editor);=0A=
  },=0A=
=0A=
  loadCollection: function() {=0A=
    this._form.addClassName(this.options.loadingClassName);=0A=
    this.showLoadingText(this.options.loadingCollectionText);=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        var js =3D transport.responseText.strip();=0A=
        if (!/^\[.*\]$/.test(js)) // TODO: improve sanity check=0A=
          throw('Server returned an invalid collection representation.');=0A=
        this._collection =3D eval(js);=0A=
        this.checkForExternalText();=0A=
      }.bind(this),=0A=
      onFailure: this.onFailure=0A=
    });=0A=
    new Ajax.Request(this.options.loadCollectionURL, options);=0A=
  },=0A=
=0A=
  showLoadingText: function(text) {=0A=
    this._controls.editor.disabled =3D true;=0A=
    var tempOption =3D this._controls.editor.firstChild;=0A=
    if (!tempOption) {=0A=
      tempOption =3D document.createElement('option');=0A=
      tempOption.value =3D '';=0A=
      this._controls.editor.appendChild(tempOption);=0A=
      tempOption.selected =3D true;=0A=
    }=0A=
    tempOption.update((text || '').stripScripts().stripTags());=0A=
  },=0A=
=0A=
  checkForExternalText: function() {=0A=
    this._text =3D this.getText();=0A=
    if (this.options.loadTextURL)=0A=
      this.loadExternalText();=0A=
    else=0A=
      this.buildOptionList();=0A=
  },=0A=
=0A=
  loadExternalText: function() {=0A=
    this.showLoadingText(this.options.loadingText);=0A=
    var options =3D Object.extend({ method: 'get' }, =
this.options.ajaxOptions);=0A=
    Object.extend(options, {=0A=
      parameters: 'editorId=3D' + encodeURIComponent(this.element.id),=0A=
      onComplete: Prototype.emptyFunction,=0A=
      onSuccess: function(transport) {=0A=
        this._text =3D transport.responseText.strip();=0A=
        this.buildOptionList();=0A=
      }.bind(this),=0A=
      onFailure: this.onFailure=0A=
    });=0A=
    new Ajax.Request(this.options.loadTextURL, options);=0A=
  },=0A=
=0A=
  buildOptionList: function() {=0A=
    this._form.removeClassName(this.options.loadingClassName);=0A=
    this._collection =3D this._collection.map(function(entry) {=0A=
      return 2 =3D=3D=3D entry.length ? entry : [entry, entry].flatten();=0A=
    });=0A=
    var marker =3D ('value' in this.options) ? this.options.value : =
this._text;=0A=
    var textFound =3D this._collection.any(function(entry) {=0A=
      return entry[0] =3D=3D marker;=0A=
    }.bind(this));=0A=
    this._controls.editor.update('');=0A=
    var option;=0A=
    this._collection.each(function(entry, index) {=0A=
      option =3D document.createElement('option');=0A=
      option.value =3D entry[0];=0A=
      option.selected =3D textFound ? entry[0] =3D=3D marker : 0 =3D=3D =
index;=0A=
      option.appendChild(document.createTextNode(entry[1]));=0A=
      this._controls.editor.appendChild(option);=0A=
    }.bind(this));=0A=
    this._controls.editor.disabled =3D false;=0A=
    Field.scrollFreeActivate(this._controls.editor);=0A=
  }=0A=
});=0A=
=0A=
//**** DEPRECATION LAYER FOR InPlace[Collection]Editor! ****=0A=
//**** This only  exists for a while,  in order to  let ****=0A=
//**** users adapt to  the new API.  Read up on the new ****=0A=
//**** API and convert your code to it ASAP!            ****=0A=
=0A=
Ajax.InPlaceEditor.prototype.initialize.dealWithDeprecatedOptions =3D =
function(options) {=0A=
  if (!options) return;=0A=
  function fallback(name, expr) {=0A=
    if (name in options || expr =3D=3D=3D undefined) return;=0A=
    options[name] =3D expr;=0A=
  };=0A=
  fallback('cancelControl', (options.cancelLink ? 'link' : =
(options.cancelButton ? 'button' :=0A=
    options.cancelLink =3D=3D options.cancelButton =3D=3D false ? false =
: undefined)));=0A=
  fallback('okControl', (options.okLink ? 'link' : (options.okButton ? =
'button' :=0A=
    options.okLink =3D=3D options.okButton =3D=3D false ? false : =
undefined)));=0A=
  fallback('highlightColor', options.highlightcolor);=0A=
  fallback('highlightEndColor', options.highlightendcolor);=0A=
};=0A=
=0A=
Object.extend(Ajax.InPlaceEditor, {=0A=
  DefaultOptions: {=0A=
    ajaxOptions: { },=0A=
    autoRows: 3,                                // Use when multi-line =
w/ rows =3D=3D 1=0A=
    cancelControl: 'link',                      // 'link'|'button'|false=0A=
    cancelText: 'cancel',=0A=
    clickToEditText: 'Click to edit',=0A=
    externalControl: null,                      // id|elt=0A=
    externalControlOnly: false,=0A=
    fieldPostCreation: 'activate',              // =
'activate'|'focus'|false=0A=
    formClassName: 'inplaceeditor-form',=0A=
    formId: null,                               // id|elt=0A=
    highlightColor: '#ffff99',=0A=
    highlightEndColor: '#ffffff',=0A=
    hoverClassName: '',=0A=
    htmlResponse: true,=0A=
    loadingClassName: 'inplaceeditor-loading',=0A=
    loadingText: 'Loading...',=0A=
    okControl: 'button',                        // 'link'|'button'|false=0A=
    okText: 'ok',=0A=
    paramName: 'value',=0A=
    rows: 1,                                    // If 1 and multi-line, =
uses autoRows=0A=
    savingClassName: 'inplaceeditor-saving',=0A=
    savingText: 'Saving...',=0A=
    size: 0,=0A=
    stripLoadedTextTags: false,=0A=
    submitOnBlur: false,=0A=
    textAfterControls: '',=0A=
    textBeforeControls: '',=0A=
    textBetweenControls: ''=0A=
  },=0A=
  DefaultCallbacks: {=0A=
    callback: function(form) {=0A=
      return Form.serialize(form);=0A=
    },=0A=
    onComplete: function(transport, element) {=0A=
      // For backward compatibility, this one is bound to the IPE, and =
passes=0A=
      // the element directly.  It was too often customized, so we don't =
break it.=0A=
      new Effect.Highlight(element, {=0A=
        startcolor: this.options.highlightColor, keepBackgroundImage: =
true });=0A=
    },=0A=
    onEnterEditMode: null,=0A=
    onEnterHover: function(ipe) {=0A=
      ipe.element.style.backgroundColor =3D ipe.options.highlightColor;=0A=
      if (ipe._effect)=0A=
        ipe._effect.cancel();=0A=
    },=0A=
    onFailure: function(transport, ipe) {=0A=
      alert('Error communication with the server: ' + =
transport.responseText.stripTags());=0A=
    },=0A=
    onFormCustomization: null, // Takes the IPE and its generated form, =
after editor, before controls.=0A=
    onLeaveEditMode: null,=0A=
    onLeaveHover: function(ipe) {=0A=
      ipe._effect =3D new Effect.Highlight(ipe.element, {=0A=
        startcolor: ipe.options.highlightColor, endcolor: =
ipe.options.highlightEndColor,=0A=
        restorecolor: ipe._originalBackground, keepBackgroundImage: true=0A=
      });=0A=
    }=0A=
  },=0A=
  Listeners: {=0A=
    click: 'enterEditMode',=0A=
    keydown: 'checkForEscapeOrReturn',=0A=
    mouseover: 'enterHover',=0A=
    mouseout: 'leaveHover'=0A=
  }=0A=
});=0A=
=0A=
Ajax.InPlaceCollectionEditor.DefaultOptions =3D {=0A=
  loadingCollectionText: 'Loading options...'=0A=
};=0A=
=0A=
// Delayed observer, like Form.Element.Observer,=0A=
// but waits for delay after last key input=0A=
// Ideal for live-search fields=0A=
=0A=
Form.Element.DelayedObserver =3D Class.create({=0A=
  initialize: function(element, delay, callback) {=0A=
    this.delay     =3D delay || 0.5;=0A=
    this.element   =3D $(element);=0A=
    this.callback  =3D callback;=0A=
    this.timer     =3D null;=0A=
    this.lastValue =3D $F(this.element);=0A=
    =
Event.observe(this.element,'keyup',this.delayedListener.bindAsEventListen=
er(this));=0A=
  },=0A=
  delayedListener: function(event) {=0A=
    if(this.lastValue =3D=3D $F(this.element)) return;=0A=
    if(this.timer) clearTimeout(this.timer);=0A=
    this.timer =3D setTimeout(this.onTimerEvent.bind(this), this.delay * =
1000);=0A=
    this.lastValue =3D $F(this.element);=0A=
  },=0A=
  onTimerEvent: function() {=0A=
    this.timer =3D null;=0A=
    this.callback(this.element, $F(this.element));=0A=
  }=0A=
});
------=_NextPart_000_000F_01CA45DE.2B862BB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://localhost:3000/javascripts/raphael.js?1253952080

/*=0A=
 * Raphael 0.8.6 - JavaScript Vector Library=0A=
 *=0A=
 * Copyright (c) 2008 - 2009 Dmitry Baranovskiy (http://raphaeljs.com)=0A=
 * Licensed under the MIT =
(http://www.opensource.org/licenses/mit-license.php) license.=0A=
 */=0A=
=0A=
=0A=
window.Raphael =3D (function () {=0A=
    var separator =3D /[, ]+/,=0A=
        doc =3D document,=0A=
        win =3D window,=0A=
        oldRaphael =3D {=0A=
            was: "Raphael" in window,=0A=
            is: window.Raphael=0A=
        },=0A=
        R =3D function () {=0A=
            return create.apply(R, arguments);=0A=
        },=0A=
        paper =3D {},=0A=
        availableAttrs =3D {cx: 0, cy: 0, fill: "#fff", "fill-opacity": =
1, font: '10px "Arial"', "font-family": '"Arial"', "font-size": "10", =
"font-style": "normal", "font-weight": 400, gradient: 0, height: 0, =
href: "http://raphaeljs.com/", opacity: 1, path: "M0,0", r: 0, rotation: =
0, rx: 0, ry: 0, scale: "1 1", src: "", stroke: "#000", =
"stroke-dasharray": "", "stroke-linecap": "butt", "stroke-linejoin": =
"butt", "stroke-miterlimit": 0, "stroke-opacity": 1, "stroke-width": 1, =
target: "_blank", "text-anchor": "middle", title: "Raphael", =
translation: "0 0", width: 0, x: 0, y: 0},=0A=
        availableAnimAttrs =3D {cx: "number", cy: "number", fill: =
"colour", "fill-opacity": "number", "font-size": "number", height: =
"number", opacity: "number", path: "path", r: "number", rotation: "csv", =
rx: "number", ry: "number", scale: "csv", stroke: "colour", =
"stroke-opacity": "number", "stroke-width": "number", translation: =
"csv", width: "number", x: "number", y: "number"},=0A=
        events =3D ["click", "dblclick", "mousedown", "mousemove", =
"mouseout", "mouseover", "mouseup"];=0A=
    R.version =3D "0.8.6";=0A=
    R.type =3D (window.SVGAngle || =
document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#Ba=
sicStructure", "1.1") ? "SVG" : "VML");=0A=
    R.svg =3D !(R.vml =3D R.type =3D=3D "VML");=0A=
    R.idGenerator =3D 0;=0A=
    R.fn =3D {};=0A=
    R.isArray =3D function (arr) {=0A=
        return Object.prototype.toString.call(arr) =3D=3D "[object =
Array]";=0A=
    };=0A=
    R.setWindow =3D function (newwin) {=0A=
        win =3D newwin;=0A=
        doc =3D win.document;=0A=
    };=0A=
    // colour utilities=0A=
    R.hsb2rgb =3D function (hue, saturation, brightness) {=0A=
        if (typeof hue =3D=3D "object" && "h" in hue && "s" in hue && =
"b" in hue) {=0A=
            brightness =3D hue.b;=0A=
            saturation =3D hue.s;=0A=
            hue =3D hue.h;=0A=
        }=0A=
        var red,=0A=
            green,=0A=
            blue;=0A=
        if (brightness =3D=3D 0) {=0A=
            return {r: 0, g: 0, b: 0, hex: "#000"};=0A=
        }=0A=
        if (hue > 1 || saturation > 1 || brightness > 1) {=0A=
            hue /=3D 255;=0A=
            saturation /=3D 255;=0A=
            brightness /=3D 255;=0A=
        }=0A=
        var i =3D Math.floor(hue * 6),=0A=
            f =3D (hue * 6) - i,=0A=
            p =3D brightness * (1 - saturation),=0A=
            q =3D brightness * (1 - (saturation * f)),=0A=
            t =3D brightness * (1 - (saturation * (1 - f)));=0A=
        red =3D [brightness, q, p, p, t, brightness, brightness][i];=0A=
        green =3D [t, brightness, brightness, q, p, p, t][i];=0A=
        blue =3D [p, p, t, brightness, brightness, q, p][i];=0A=
        red *=3D 255;=0A=
        green *=3D 255;=0A=
        blue *=3D 255;=0A=
        var rgb =3D {r: red, g: green, b: blue},=0A=
            r =3D Math.round(red).toString(16),=0A=
            g =3D Math.round(green).toString(16),=0A=
            b =3D Math.round(blue).toString(16);=0A=
        if (r.length =3D=3D 1) {=0A=
            r =3D "0" + r;=0A=
        }=0A=
        if (g.length =3D=3D 1) {=0A=
            g =3D "0" + g;=0A=
        }=0A=
        if (b.length =3D=3D 1) {=0A=
            b =3D "0" + b;=0A=
        }=0A=
        rgb.hex =3D "#" + r + g + b;=0A=
        return rgb;=0A=
    };=0A=
    R.rgb2hsb =3D function (red, green, blue) {=0A=
        if (typeof red =3D=3D "object" && "r" in red && "g" in red && =
"b" in red) {=0A=
            blue =3D red.b;=0A=
            green =3D red.g;=0A=
            red =3D red.r;=0A=
        }=0A=
        if (typeof red =3D=3D "string") {=0A=
            var clr =3D R.getRGB(red);=0A=
            red =3D clr.r;=0A=
            green =3D clr.g;=0A=
            blue =3D clr.b;=0A=
        }=0A=
        if (red > 1 || green > 1 || blue > 1) {=0A=
            red /=3D 255;=0A=
            green /=3D 255;=0A=
            blue /=3D 255;=0A=
        }=0A=
        var max =3D Math.max(red, green, blue),=0A=
            min =3D Math.min(red, green, blue),=0A=
            hue,=0A=
            saturation,=0A=
            brightness =3D max;=0A=
        if (min =3D=3D max) {=0A=
            return {h: 0, s: 0, b: max};=0A=
        } else {=0A=
            var delta =3D (max - min);=0A=
            saturation =3D delta / max;=0A=
            if (red =3D=3D max) {=0A=
                hue =3D (green - blue) / delta;=0A=
            } else if (green =3D=3D max) {=0A=
                hue =3D 2 + ((blue - red) / delta);=0A=
            } else {=0A=
                hue =3D 4 + ((red - green) / delta);=0A=
            }=0A=
            hue /=3D 6;=0A=
            if (hue < 0) {=0A=
                hue +=3D 1;=0A=
            }=0A=
            if (hue > 1) {=0A=
                hue -=3D 1;=0A=
            }=0A=
        }=0A=
        return {h: hue, s: saturation, b: brightness};=0A=
    };=0A=
    var getRGBcache =3D {},=0A=
        getRGBcount =3D [];=0A=
    R.getRGB =3D function (colour) {=0A=
        if (colour in getRGBcache) {=0A=
            return getRGBcache[colour];=0A=
        }=0A=
        var htmlcolors =3D {aliceblue: "#f0f8ff", amethyst: "#96c", =
antiquewhite: "#faebd7", aqua: "#0ff", aquamarine: "#7fffd4", azure: =
"#f0ffff", beige: "#f5f5dc", bisque: "#ffe4c4", black: "#000", =
blanchedalmond: "#ffebcd", blue: "#00f", blueviolet: "#8a2be2", brown: =
"#a52a2a", burlywood: "#deb887", cadetblue: "#5f9ea0", chartreuse: =
"#7fff00", chocolate: "#d2691e", coral: "#ff7f50", cornflowerblue: =
"#6495ed", cornsilk: "#fff8dc", crimson: "#dc143c", cyan: "#0ff", =
darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", =
darkgray: "#a9a9a9", darkgreen: "#006400", darkkhaki: "#bdb76b", =
darkmagenta: "#8b008b", darkolivegreen: "#556b2f", darkorange: =
"#ff8c00", darkorchid: "#9932cc", darkred: "#8b0000", darksalmon: =
"#e9967a", darkseagreen: "#8fbc8f", darkslateblue: "#483d8b", =
darkslategray: "#2f4f4f", darkturquoise: "#00ced1", darkviolet: =
"#9400d3", deeppink: "#ff1493", deepskyblue: "#00bfff", dimgray: =
"#696969", dodgerblue: "#1e90ff", firebrick: "#b22222", floralwhite: =
"#fffaf0", forestgreen: "#228b22", fuchsia: "#f0f", gainsboro: =
"#dcdcdc", ghostwhite: "#f8f8ff", gold: "#ffd700", goldenrod: "#daa520", =
gray: "#808080", green: "#008000", greenyellow: "#adff2f", honeydew: =
"#f0fff0", hotpink: "#ff69b4", indianred: "#cd5c5c", indigo: "#4b0082", =
ivory: "#fffff0", khaki: "#f0e68c", lavender: "#e6e6fa", lavenderblush: =
"#fff0f5", lawngreen: "#7cfc00", lemonchiffon: "#fffacd", lightblue: =
"#add8e6", lightcoral: "#f08080", lightcyan: "#e0ffff", =
lightgoldenrodyellow: "#fafad2", lightgreen: "#90ee90", lightgrey: =
"#d3d3d3", lightpink: "#ffb6c1", lightsalmon: "#ffa07a", lightsalmon: =
"#ffa07a", lightseagreen: "#20b2aa", lightskyblue: "#87cefa", =
lightslategray: "#789", lightsteelblue: "#b0c4de", lightyellow: =
"#ffffe0", lime: "#0f0", limegreen: "#32cd32", linen: "#faf0e6", =
magenta: "#f0f", maroon: "#800000", mediumaquamarine: "#66cdaa", =
mediumblue: "#0000cd", mediumorchid: "#ba55d3", mediumpurple: "#9370db", =
mediumseagreen: "#3cb371", mediumslateblue: "#7b68ee", mediumslateblue: =
"#7b68ee", mediumspringgreen: "#00fa9a", mediumturquoise: "#48d1cc", =
mediumvioletred: "#c71585", midnightblue: "#191970", mintcream: =
"#f5fffa", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", navajowhite: =
"#ffdead", navy: "#000080", oldlace: "#fdf5e6", olive: "#808000", =
olivedrab: "#6b8e23", orange: "#ffa500", orangered: "#ff4500", orchid: =
"#da70d6", palegoldenrod: "#eee8aa", palegreen: "#98fb98", =
paleturquoise: "#afeeee", palevioletred: "#db7093", papayawhip: =
"#ffefd5", peachpuff: "#ffdab9", peru: "#cd853f", pink: "#ffc0cb", plum: =
"#dda0dd", powderblue: "#b0e0e6", purple: "#800080", red: "#f00", =
rosybrown: "#bc8f8f", royalblue: "#4169e1", saddlebrown: "#8b4513", =
salmon: "#fa8072", sandybrown: "#f4a460", seagreen: "#2e8b57", seashell: =
"#fff5ee", sienna: "#a0522d", silver: "#c0c0c0", skyblue: "#87ceeb", =
slateblue: "#6a5acd", slategray: "#708090", snow: "#fffafa", =
springgreen: "#00ff7f", steelblue: "#4682b4", tan: "#d2b48c", teal: =
"#008080", thistle: "#d8bfd8", tomato: "#ff6347", turquoise: "#40e0d0", =
violet: "#ee82ee", wheat: "#f5deb3", white: "#fff", whitesmoke: =
"#f5f5f5", yellow: "#ff0", yellowgreen: "#9acd32"},=0A=
        res;=0A=
        if ((colour + "").toLowerCase() in htmlcolors) {=0A=
            colour =3D htmlcolors[colour.toString().toLowerCase()];=0A=
        }=0A=
        if (!colour) {=0A=
            return {r: 0, g: 0, b: 0, hex: "#000"};=0A=
        }=0A=
        if (colour =3D=3D "none") {=0A=
            return {r: -1, g: -1, b: -1, hex: "none"};=0A=
        }=0A=
        var red,=0A=
            green,=0A=
            blue,=0A=
            rgb =3D (colour + =
"").match(/^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgb\(\s*([\d\.]+\s*,\s*[\d\.]=
+\s*,\s*[\d\.]+)\s*\)|rgb\(\s*([\d\.]+%\s*,\s*[\d\.]+%\s*,\s*[\d\.]+%)\s*=
\)|hsb\(\s*([\d\.]+\s*,\s*[\d\.]+\s*,\s*[\d\.]+)\s*\)|hsb\(\s*([\d\.]+%\s=
*,\s*[\d\.]+%\s*,\s*[\d\.]+%)\s*\))\s*$/i);=0A=
        if (rgb) {=0A=
            if (rgb[2]) {=0A=
                blue =3D parseInt(rgb[2].substring(5), 16);=0A=
                green =3D parseInt(rgb[2].substring(3, 5), 16);=0A=
                red =3D parseInt(rgb[2].substring(1, 3), 16);=0A=
            }=0A=
            if (rgb[3]) {=0A=
                blue =3D parseInt(rgb[3].substring(3) + =
rgb[3].substring(3), 16);=0A=
                green =3D parseInt(rgb[3].substring(2, 3) + =
rgb[3].substring(2, 3), 16);=0A=
                red =3D parseInt(rgb[3].substring(1, 2) + =
rgb[3].substring(1, 2), 16);=0A=
            }=0A=
            if (rgb[4]) {=0A=
                rgb =3D rgb[4].split(/\s*,\s*/);=0A=
                red =3D parseFloat(rgb[0]);=0A=
                green =3D parseFloat(rgb[1]);=0A=
                blue =3D parseFloat(rgb[2]);=0A=
            }=0A=
            if (rgb[5]) {=0A=
                rgb =3D rgb[5].split(/\s*,\s*/);=0A=
                red =3D parseFloat(rgb[0]) * 2.55;=0A=
                green =3D parseFloat(rgb[1]) * 2.55;=0A=
                blue =3D parseFloat(rgb[2]) * 2.55;=0A=
            }=0A=
            if (rgb[6]) {=0A=
                rgb =3D rgb[6].split(/\s*,\s*/);=0A=
                red =3D parseFloat(rgb[0]);=0A=
                green =3D parseFloat(rgb[1]);=0A=
                blue =3D parseFloat(rgb[2]);=0A=
                return R.hsb2rgb(red, green, blue);=0A=
            }=0A=
            if (rgb[7]) {=0A=
                rgb =3D rgb[7].split(/\s*,\s*/);=0A=
                red =3D parseFloat(rgb[0]) * 2.55;=0A=
                green =3D parseFloat(rgb[1]) * 2.55;=0A=
                blue =3D parseFloat(rgb[2]) * 2.55;=0A=
                return R.hsb2rgb(red, green, blue);=0A=
            }=0A=
            var rgb =3D {r: red, g: green, b: blue},=0A=
                r =3D Math.round(red).toString(16),=0A=
                g =3D Math.round(green).toString(16),=0A=
                b =3D Math.round(blue).toString(16);=0A=
            (r.length =3D=3D 1) && (r =3D "0" + r);=0A=
            (g.length =3D=3D 1) && (g =3D "0" + g);=0A=
            (b.length =3D=3D 1) && (b =3D "0" + b);=0A=
            rgb.hex =3D "#" + r + g + b;=0A=
            res =3D rgb;=0A=
        } else {=0A=
            res =3D {r: -1, g: -1, b: -1, hex: "none"};=0A=
        }=0A=
        if (getRGBcount.length > 20) {=0A=
            delete getRGBcache[getRGBcount.unshift()];=0A=
        }=0A=
        getRGBcount.push(colour);=0A=
        getRGBcache[colour] =3D res;=0A=
        return res;=0A=
    };=0A=
    R.getColor =3D function (value) {=0A=
        var start =3D this.getColor.start =3D this.getColor.start || {h: =
0, s: 1, b: value || .75},=0A=
            rgb =3D this.hsb2rgb(start.h, start.s, start.b);=0A=
        start.h +=3D .075;=0A=
        if (start.h > 1) {=0A=
            start.h =3D 0;=0A=
            start.s -=3D .2;=0A=
            if (start.s <=3D 0) {=0A=
                this.getColor.start =3D {h: 0, s: 1, b: start.b};=0A=
            }=0A=
        }=0A=
        return rgb.hex;=0A=
    };=0A=
    R.getColor.reset =3D function () {=0A=
        delete this.start;=0A=
    };=0A=
    // path utilities=0A=
    var pathcache =3D {},=0A=
        pathcount =3D [];=0A=
    R.parsePathString =3D function (pathString) {=0A=
        if (pathString in pathcache) {=0A=
            return pathcache[pathString];=0A=
        }=0A=
        var paramCounts =3D {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, =
t: 2, v: 1, z: 0},=0A=
            data =3D [],=0A=
            toString =3D function () {=0A=
                var res =3D "";=0A=
                for (var i =3D 0, ii =3D this.length; i < ii; i++) {=0A=
                    res +=3D this[i][0] + this[i].join(",").substring(2);=0A=
                }=0A=
                return res;=0A=
            };=0A=
        if (pathString.toString.toString() =3D=3D toString.toString()) {=0A=
            data =3D pathString;=0A=
        }=0A=
        if (!data.length) {=0A=
            =
pathString.replace(/([achlmqstvz])[\s,]*((-?\d*\.?\d*(?:e[-+]?\d+)?\s*,?\=
s*)+)/ig, function (a, b, c) {=0A=
                var params =3D [],=0A=
                    name =3D b.toLowerCase();=0A=
                c.replace(/(-?\d*\.?\d*(?:e[-+]?\d+)?)\s*,?\s*/ig, =
function (a, b) {=0A=
                    b && params.push(+b);=0A=
                });=0A=
                while (params.length >=3D paramCounts[name]) {=0A=
                    data.push([b].concat(params.splice(0, =
paramCounts[name])));=0A=
                    if (!paramCounts[name]) {=0A=
                        break;=0A=
                    };=0A=
                }=0A=
            });=0A=
            data.toString =3D toString;=0A=
        }=0A=
        if (pathcount.length > 20) {=0A=
            delete pathcache[pathcount.unshift()];=0A=
        }=0A=
        pathcount.push(pathString);=0A=
        pathcache[pathString] =3D data;=0A=
        return data;=0A=
    };=0A=
    var pathDimensions =3D function (path) {=0A=
        var pathArray =3D path;=0A=
        if (typeof path =3D=3D "string") {=0A=
            pathArray =3D R.parsePathString(path);=0A=
        }=0A=
        pathArray =3D pathToAbsolute(pathArray);=0A=
        var x =3D [],=0A=
            y =3D [],=0A=
            length =3D 0;=0A=
        for (var i =3D 0, ii =3D pathArray.length; i < ii; i++) {=0A=
            var pa =3D pathArray[i];=0A=
            switch (pa[0]) {=0A=
                case "Z":=0A=
                    break;=0A=
                case "A":=0A=
                    x.push(pa[pa.length - 2]);=0A=
                    y.push(pa[pa.length - 1]);=0A=
                    break;=0A=
                default:=0A=
                    for (var j =3D 1, jj =3D pa.length; j < jj; j++) {=0A=
                        (j % 2 ? x : y).push(pa[j]);=0A=
                    }=0A=
            }=0A=
        }=0A=
        var minx =3D Math.min.apply(Math, x),=0A=
            miny =3D Math.min.apply(Math, y);=0A=
        if (!x.length) {=0A=
            return {=0A=
                x: 0,=0A=
                y: 0,=0A=
                width: 0,=0A=
                height: 0,=0A=
                X: 0,=0A=
                Y: 0=0A=
            };=0A=
        } else {=0A=
            return {=0A=
                x: minx,=0A=
                y: miny,=0A=
                width: Math.max.apply(Math, x) - minx,=0A=
                height: Math.max.apply(Math, y) - miny,=0A=
                X: x,=0A=
                Y: y=0A=
            };=0A=
        }=0A=
    },=0A=
        addRoundedCorner =3D function (r, dir) {=0A=
            var R =3D .5522 * r,=0A=
                rollback =3D this.isAbsolute,=0A=
                o =3D this;=0A=
            if (rollback) {=0A=
                this.relatively();=0A=
                rollback =3D function () {=0A=
                    o.absolutely();=0A=
                };=0A=
            } else {=0A=
                rollback =3D function () {};=0A=
            }=0A=
            var actions =3D {=0A=
                l: function () {=0A=
                    return {=0A=
                        u: function () {=0A=
                            o.curveTo(-R, 0, -r, -(r - R), -r, -r);=0A=
                        },=0A=
                        d: function () {=0A=
                            o.curveTo(-R, 0, -r, r - R, -r, r);=0A=
                        }=0A=
                    };=0A=
                },=0A=
                r: function () {=0A=
                    return {=0A=
                        u: function () {=0A=
                            o.curveTo(R, 0, r, -(r - R), r, -r);=0A=
                        },=0A=
                        d: function () {=0A=
                            o.curveTo(R, 0, r, r - R, r, r);=0A=
                        }=0A=
                    };=0A=
                },=0A=
                u: function () {=0A=
                    return {=0A=
                        r: function () {=0A=
                            o.curveTo(0, -R, -(R - r), -r, r, -r);=0A=
                        },=0A=
                        l: function () {=0A=
                            o.curveTo(0, -R, R - r, -r, -r, -r);=0A=
                        }=0A=
                    };=0A=
                },=0A=
                d: function () {=0A=
                    return {=0A=
                        r: function () {=0A=
                            o.curveTo(0, R, -(R - r), r, r, r);=0A=
                        },=0A=
                        l: function () {=0A=
                            o.curveTo(0, R, R - r, r, -r, r);=0A=
                        }=0A=
                    };=0A=
                }=0A=
            };=0A=
            actions[dir.charAt(0)]()[dir.charAt(1)]();=0A=
            rollback();=0A=
            return o;=0A=
        },=0A=
        pathToRelative =3D function (pathArray) {=0A=
            var res =3D [],=0A=
                x =3D 0,=0A=
                y =3D 0,=0A=
                start =3D 0;=0A=
            if (typeof pathArray =3D=3D "string") {=0A=
                pathArray =3D R.parsePathString(pathArray);=0A=
            }=0A=
            if (pathArray[0][0] =3D=3D "M") {=0A=
                x =3D pathArray[0][1];=0A=
                y =3D pathArray[0][2];=0A=
                start++;=0A=
                res.push(["M", x, y]);=0A=
            }=0A=
            for (var i =3D start, ii =3D pathArray.length; i < ii; i++) {=0A=
                var r =3D res[i] =3D [],=0A=
                    pa =3D pathArray[i];=0A=
                if (pa[0] !=3D pa[0].toLowerCase()) {=0A=
                    r[0] =3D pa[0].toLowerCase();=0A=
                    switch (r[0]) {=0A=
                        case "a":=0A=
                            r[1] =3D pa[1];=0A=
                            r[2] =3D pa[2];=0A=
                            r[3] =3D pa[3];=0A=
                            r[4] =3D pa[4];=0A=
                            r[5] =3D pa[5];=0A=
                            r[6] =3D +(pa[6] - x).toFixed(3);=0A=
                            r[7] =3D +(pa[7] - y).toFixed(3);=0A=
                            break;=0A=
                        case "v":=0A=
                            r[1] =3D +(pa[1] - y).toFixed(3);=0A=
                            break;=0A=
                        default:=0A=
                            for (var j =3D 1, jj =3D pa.length; j < jj; =
j++) {=0A=
                                r[j] =3D +(pa[j] - ((j % 2) ? x : =
y)).toFixed(3);=0A=
                            }=0A=
                    }=0A=
                } else {=0A=
                    r =3D res[i] =3D [];=0A=
                    for (var k =3D 0, kk =3D pa.length; k < kk; k++) {=0A=
                        res[i][k] =3D pa[k];=0A=
                    }=0A=
                }=0A=
                var len =3D res[i].length;=0A=
                switch (res[i][0]) {=0A=
                    case "z":=0A=
                        break;=0A=
                    case "h":=0A=
                        x +=3D +res[i][len - 1];=0A=
                        break;=0A=
                    case "v":=0A=
                        y +=3D +res[i][len - 1];=0A=
                        break;=0A=
                    default:=0A=
                        x +=3D +res[i][len - 2];=0A=
                        y +=3D +res[i][len - 1];=0A=
                }=0A=
            }=0A=
            res.toString =3D pathArray.toString;=0A=
            return res;=0A=
        },=0A=
        pathToAbsolute =3D function (pathArray) {=0A=
            var res =3D [];=0A=
            if (typeof pathArray =3D=3D "string") {=0A=
                pathArray =3D R.parsePathString(pathArray);=0A=
            }=0A=
            var x =3D 0,=0A=
                y =3D 0,=0A=
                start =3D 0;=0A=
            if (pathArray[0][0] =3D=3D "M") {=0A=
                x =3D +pathArray[0][1];=0A=
                y =3D +pathArray[0][2];=0A=
                start++;=0A=
                res[0] =3D ["M", x, y];=0A=
            }=0A=
            for (var i =3D start, ii =3D pathArray.length; i < ii; i++) {=0A=
                var r =3D res[i] =3D [],=0A=
                    pa =3D pathArray[i];=0A=
                if (pa[0] !=3D (pa[0] + "").toUpperCase()) {=0A=
                    r[0] =3D (pa[0] + "").toUpperCase();=0A=
                    switch (r[0]) {=0A=
                        case "A":=0A=
                            r[1] =3D pa[1];=0A=
                            r[2] =3D pa[2];=0A=
                            r[3] =3D 0;=0A=
                            r[4] =3D pa[4];=0A=
                            r[5] =3D pa[5];=0A=
                            r[6] =3D +(pa[6] + x).toFixed(3);=0A=
                            r[7] =3D +(pa[7] + y).toFixed(3);=0A=
                            break;=0A=
                        case "V":=0A=
                            r[1] =3D +pa[1] + y;=0A=
                            break;=0A=
                        case "H":=0A=
                            r[1] =3D +pa[1] + x;=0A=
                            break;=0A=
                        default:=0A=
                            for (var j =3D 1, jj =3D pa.length; j < jj; =
j++) {=0A=
                                r[j] =3D +pa[j] + ((j % 2) ? x : y);=0A=
                            }=0A=
                    }=0A=
                } else {=0A=
                    r =3D res[i] =3D [];=0A=
                    for (var k =3D 0, kk =3D pa.length; k < kk; k++) {=0A=
                        res[i][k] =3D pa[k];=0A=
                    }=0A=
                }=0A=
                switch (r[0]) {=0A=
                    case "Z":=0A=
                        break;=0A=
                    case "H":=0A=
                        x =3D r[1];=0A=
                        break;=0A=
                    case "V":=0A=
                        y =3D r[1];=0A=
                        break;=0A=
                    default:=0A=
                        x =3D res[i][res[i].length - 2];=0A=
                        y =3D res[i][res[i].length - 1];=0A=
                }=0A=
            }=0A=
            res.toString =3D pathArray.toString;=0A=
            return res;=0A=
        },=0A=
        pecache =3D {}, pecount =3D [],=0A=
        pathEqualiser =3D function (path1, path2) {=0A=
            if ((path1 + path2) in pecache) {=0A=
                return pecache[path1 + path2];=0A=
            }=0A=
            var data =3D [pathToAbsolute(R.parsePathString(path1)), =
pathToAbsolute(R.parsePathString(path2))],=0A=
                attrs =3D [{x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0}, {x: =
0, y: 0, bx: 0, by: 0, X: 0, Y: 0}],=0A=
                processPath =3D function (path, d) {=0A=
                    if (!path) {=0A=
                        return ["U"];=0A=
                    }=0A=
                    switch (path[0]) {=0A=
                        case "M":=0A=
                            d.X =3D path[1];=0A=
                            d.Y =3D path[2];=0A=
                            break;=0A=
                        case "S":=0A=
                            var nx =3D d.x + (d.x - (d.bx || d.x)),=0A=
                                ny =3D d.y + (d.y - (d.by || d.y));=0A=
                            path =3D ["C", nx, ny, path[1], path[2], =
path[3], path[4]];=0A=
                            break;=0A=
                        case "T":=0A=
                            var nx =3D d.x + (d.x - (d.bx || d.x)),=0A=
                                ny =3D d.y + (d.y - (d.by || d.y));=0A=
                            path =3D ["Q", nx, ny, path[1], path[2]];=0A=
                            break;=0A=
                        case "H":=0A=
                            path =3D ["L", path[1], d.y];=0A=
                            break;=0A=
                        case "V":=0A=
                            path =3D ["L", d.x, path[1]];=0A=
                            break;=0A=
                        case "Z":=0A=
                            path =3D ["L", d.X, d.Y];=0A=
                            break;=0A=
                    }=0A=
                    return path;=0A=
                },=0A=
                edgeCases =3D function (a, b, i) {=0A=
                    if (data[a][i][0] =3D=3D "M" && data[b][i][0] !=3D =
"M") {=0A=
                        data[b].splice(i, 0, ["M", attrs[b].x, =
attrs[b].y]);=0A=
                        attrs[a].bx =3D data[a][i][data[a][i].length - =
4] || 0;=0A=
                        attrs[a].by =3D data[a][i][data[a][i].length - =
3] || 0;=0A=
                        attrs[a].x =3D data[a][i][data[a][i].length - 2];=0A=
                        attrs[a].y =3D data[a][i][data[a][i].length - 1];=0A=
                        return true;=0A=
                    } else if (data[a][i][0] =3D=3D "L" && data[b][i][0] =
=3D=3D "C") {=0A=
                        data[a][i] =3D ["C", attrs[a].x, attrs[a].y, =
data[a][i][1], data[a][i][2], data[a][i][1], data[a][i][2]];=0A=
                    } else if (data[a][i][0] =3D=3D "L" && data[b][i][0] =
=3D=3D "Q") {=0A=
                        data[a][i] =3D ["Q", data[a][i][1], =
data[a][i][2], data[a][i][1], data[a][i][2]];=0A=
                    } else if (data[a][i][0] =3D=3D "Q" && data[b][i][0] =
=3D=3D "C") {=0A=
                        var x =3D data[b][i][data[b][i].length - 2],=0A=
                            y =3D data[b][i][data[b][i].length - 1];=0A=
                        data[b].splice(i + 1, 0, ["Q", x, y, x, y]);=0A=
                        data[a].splice(i, 0, ["C", attrs[a].x, =
attrs[a].y, attrs[a].x, attrs[a].y, attrs[a].x, attrs[a].y]);=0A=
                        i++;=0A=
                        attrs[b].bx =3D data[b][i][data[b][i].length - =
4] || 0;=0A=
                        attrs[b].by =3D data[b][i][data[b][i].length - =
3] || 0;=0A=
                        attrs[b].x =3D data[b][i][data[b][i].length - 2];=0A=
                        attrs[b].y =3D data[b][i][data[b][i].length - 1];=0A=
                        return true;=0A=
                    } else if (data[a][i][0] =3D=3D "A" && data[b][i][0] =
=3D=3D "C") {=0A=
                        var x =3D data[b][i][data[b][i].length - 2],=0A=
                            y =3D data[b][i][data[b][i].length - 1];=0A=
                        data[b].splice(i + 1, 0, ["A", 0, 0, =
data[a][i][3], data[a][i][4], data[a][i][5], x, y]);=0A=
                        data[a].splice(i, 0, ["C", attrs[a].x, =
attrs[a].y, attrs[a].x, attrs[a].y, attrs[a].x, attrs[a].y]);=0A=
                        i++;=0A=
                        attrs[b].bx =3D data[b][i][data[b][i].length - =
4] || 0;=0A=
                        attrs[b].by =3D data[b][i][data[b][i].length - =
3] || 0;=0A=
                        attrs[b].x =3D data[b][i][data[b][i].length - 2];=0A=
                        attrs[b].y =3D data[b][i][data[b][i].length - 1];=0A=
                        return true;=0A=
                    } else if (data[a][i][0] =3D=3D "U") {=0A=
                        data[a][i][0] =3D data[b][i][0];=0A=
                        for (var j =3D 1, jj =3D data[b][i].length; j < =
jj; j++) {=0A=
                            data[a][i][j] =3D (j % 2) ? attrs[a].x : =
attrs[a].y;=0A=
                        }=0A=
                    }=0A=
                    return false;=0A=
                };=0A=
            for (var i =3D 0; i < Math.max(data[0].length, =
data[1].length); i++) {=0A=
                data[0][i] =3D processPath(data[0][i], attrs[0]);=0A=
                data[1][i] =3D processPath(data[1][i], attrs[1]);=0A=
                if (data[0][i][0] !=3D data[1][i][0] && (edgeCases(0, 1, =
i) || edgeCases(1, 0, i))) {=0A=
                    continue;=0A=
                }=0A=
                attrs[0].bx =3D data[0][i][data[0][i].length - 4] || 0;=0A=
                attrs[0].by =3D data[0][i][data[0][i].length - 3] || 0;=0A=
                attrs[0].x =3D data[0][i][data[0][i].length - 2];=0A=
                attrs[0].y =3D data[0][i][data[0][i].length - 1];=0A=
                attrs[1].bx =3D data[1][i][data[1][i].length - 4] || 0;=0A=
                attrs[1].by =3D data[1][i][data[1][i].length - 3] || 0;=0A=
                attrs[1].x =3D data[1][i][data[1][i].length - 2];=0A=
                attrs[1].y =3D data[1][i][data[1][i].length - 1];=0A=
            }=0A=
            if (pecount.length > 20) {=0A=
                delete pecache[pecount.unshift()];=0A=
            }=0A=
            pecount.push(path1 + path2);=0A=
            pecache[path1 + path2] =3D data;=0A=
            return data;=0A=
        },=0A=
        toGradient =3D function (gradient) {=0A=
            if (typeof gradient =3D=3D "string") {=0A=
                gradient =3D gradient.split(/\s*\-\s*/);=0A=
                var angle =3D gradient.shift();=0A=
                if (angle.toLowerCase() =3D=3D "v") {=0A=
                    angle =3D 90;=0A=
                } else if (angle.toLowerCase() =3D=3D "h") {=0A=
                    angle =3D 0;=0A=
                } else {=0A=
                    angle =3D parseFloat(angle);=0A=
                }=0A=
                angle =3D -angle;=0A=
                var grobj =3D {angle: angle, type: "linear", dots: [], =
vector: [0, 0, Math.cos(angle * Math.PI / 180).toFixed(3), =
Math.sin(angle * Math.PI / 180).toFixed(3)]},=0A=
                    max =3D 1 / (Math.max(Math.abs(grobj.vector[2]), =
Math.abs(grobj.vector[3])) || 1);=0A=
                grobj.vector[2] *=3D max;=0A=
                grobj.vector[3] *=3D max;=0A=
                if (grobj.vector[2] < 0) {=0A=
                    grobj.vector[0] =3D -grobj.vector[2];=0A=
                    grobj.vector[2] =3D 0;=0A=
                }=0A=
                if (grobj.vector[3] < 0) {=0A=
                    grobj.vector[1] =3D -grobj.vector[3];=0A=
                    grobj.vector[3] =3D 0;=0A=
                }=0A=
                grobj.vector[0] =3D grobj.vector[0].toFixed(3);=0A=
                grobj.vector[1] =3D grobj.vector[1].toFixed(3);=0A=
                grobj.vector[2] =3D grobj.vector[2].toFixed(3);=0A=
                grobj.vector[3] =3D grobj.vector[3].toFixed(3);=0A=
                for (var i =3D 0, ii =3D gradient.length; i < ii; i++) {=0A=
                    var dot =3D {},=0A=
                        par =3D gradient[i].match(/^([^:]*):?([\d\.]*)/);=0A=
                    dot.color =3D R.getRGB(par[1]).hex;=0A=
                    par[2] && (dot.offset =3D par[2] + "%");=0A=
                    grobj.dots.push(dot);=0A=
                }=0A=
                for (var i =3D 1, ii =3D grobj.dots.length - 1; i < ii; =
i++) {=0A=
                    if (!grobj.dots[i].offset) {=0A=
                        var start =3D parseFloat(grobj.dots[i - =
1].offset || 0),=0A=
                            end =3D false;=0A=
                        for (var j =3D i + 1; j < ii; j++) {=0A=
                            if (grobj.dots[j].offset) {=0A=
                                end =3D grobj.dots[j].offset;=0A=
                                break;=0A=
                            }=0A=
                        }=0A=
                        if (!end) {=0A=
                            end =3D 100;=0A=
                            j =3D ii;=0A=
                        }=0A=
                        end =3D parseFloat(end);=0A=
                        var d =3D (end - start) / (j - i + 1);=0A=
                        for (; i < j; i++) {=0A=
                            start +=3D d;=0A=
                            grobj.dots[i].offset =3D start + "%";=0A=
                        }=0A=
                    }=0A=
                }=0A=
                return grobj;=0A=
            } else {=0A=
                return gradient;=0A=
            }=0A=
        },=0A=
        getContainer =3D function () {=0A=
            var container,=0A=
                x,=0A=
                y,=0A=
                width,=0A=
                height;=0A=
            if (typeof arguments[0] =3D=3D "string" || typeof =
arguments[0] =3D=3D "object") {=0A=
                if (typeof arguments[0] =3D=3D "string") {=0A=
                    container =3D doc.getElementById(arguments[0]);=0A=
                } else {=0A=
                    container =3D arguments[0];=0A=
                }=0A=
                if (container.tagName) {=0A=
                    if (arguments[1] =3D=3D null) {=0A=
                        return {=0A=
                            container: container,=0A=
                            width: container.style.pixelWidth || =
container.offsetWidth,=0A=
                            height: container.style.pixelHeight || =
container.offsetHeight=0A=
                        };=0A=
                    } else {=0A=
                        return {container: container, width: =
arguments[1], height: arguments[2]};=0A=
                    }=0A=
                }=0A=
            } else if (typeof arguments[0] =3D=3D "number" && =
arguments.length > 3) {=0A=
                return {container: 1, x: arguments[0], y: arguments[1], =
width: arguments[2], height: arguments[3]};=0A=
            }=0A=
        },=0A=
        plugins =3D function (con, add) {=0A=
            var that =3D this;=0A=
            for (var prop in add) if (add.hasOwnProperty(prop) && !(prop =
in con)) {=0A=
                switch (typeof add[prop]) {=0A=
                    case "function":=0A=
                        (function (f) {=0A=
                            con[prop] =3D con =3D=3D=3D that ? f : =
function () { return f.apply(that, arguments); };=0A=
                        })(add[prop]);=0A=
                    break;=0A=
                    case "object":=0A=
                        con[prop] =3D con[prop] || {};=0A=
                        plugins.call(this, con[prop], add[prop]);=0A=
                    break;=0A=
                    default:=0A=
                        con[prop] =3D add[prop];=0A=
                    break;=0A=
                }=0A=
            }=0A=
        };=0A=
=0A=
    // SVG=0A=
    if (R.svg) {=0A=
        R.toString =3D function () {=0A=
            return  "Your browser supports SVG.\nYou are running =
Rapha\u00ebl " + this.version;=0A=
        };=0A=
        var pathMethods =3D {=0A=
            absolutely: function () {=0A=
                this.isAbsolute =3D true;=0A=
                return this;=0A=
            },=0A=
            relatively: function () {=0A=
                this.isAbsolute =3D false;=0A=
                return this;=0A=
            },=0A=
            moveTo: function (x, y) {=0A=
                var d =3D this.isAbsolute ? "M" : "m";=0A=
                d +=3D parseFloat(x).toFixed(3) + " " + =
parseFloat(y).toFixed(3) + " ";=0A=
                var oldD =3D this[0].getAttribute("d") || "";=0A=
                (oldD =3D=3D "M0,0") && (oldD =3D "");=0A=
                this[0].setAttribute("d", oldD + d);=0A=
                this.last.x =3D (this.isAbsolute ? 0 : this.last.x) + =
parseFloat(x);=0A=
                this.last.y =3D (this.isAbsolute ? 0 : this.last.y) + =
parseFloat(y);=0A=
                this.attrs.path =3D oldD + d;=0A=
                return this;=0A=
            },=0A=
            lineTo: function (x, y) {=0A=
                this.last.x =3D (!this.isAbsolute * this.last.x) + =
parseFloat(x);=0A=
                this.last.y =3D (!this.isAbsolute * this.last.y) + =
parseFloat(y);=0A=
                var d =3D this.isAbsolute ? "L" : "l";=0A=
                d +=3D parseFloat(x).toFixed(3) + " " + =
parseFloat(y).toFixed(3) + " ";=0A=
                var oldD =3D this.node.getAttribute("d") || "";=0A=
                this.node.setAttribute("d", oldD + d);=0A=
                this.attrs.path =3D oldD + d;=0A=
                return this;=0A=
            },=0A=
            arcTo: function (rx, ry, large_arc_flag, sweep_flag, x, y) {=0A=
                var d =3D this.isAbsolute ? "A" : "a";=0A=
                d +=3D [parseFloat(rx).toFixed(3), =
parseFloat(ry).toFixed(3), 0, large_arc_flag, sweep_flag, =
parseFloat(x).toFixed(3), parseFloat(y).toFixed(3)].join(" ");=0A=
                var oldD =3D this[0].getAttribute("d") || "";=0A=
                this.node.setAttribute("d", oldD + d);=0A=
                this.last.x =3D parseFloat(x);=0A=
                this.last.y =3D parseFloat(y);=0A=
                this.attrs.path =3D oldD + d;=0A=
                return this;=0A=
            },=0A=
            cplineTo: function (x1, y1, w1) {=0A=
                if (!w1) {=0A=
                    return this.lineTo(x1, y1);=0A=
                } else {=0A=
                    var p =3D {},=0A=
                        x =3D parseFloat(x1),=0A=
                        y =3D parseFloat(y1),=0A=
                        w =3D parseFloat(w1),=0A=
                        d =3D this.isAbsolute ? "C" : "c",=0A=
                        attr =3D [+this.last.x + w, +this.last.y, x - w, =
y, x, y];=0A=
                    for (var i =3D 0, ii =3D attr.length; i < ii; i++) {=0A=
                        d +=3D attr[i] + " ";=0A=
                    }=0A=
                    this.last.x =3D (this.isAbsolute ? 0 : this.last.x) =
+ attr[4];=0A=
                    this.last.y =3D (this.isAbsolute ? 0 : this.last.y) =
+ attr[5];=0A=
                    this.last.bx =3D attr[2];=0A=
                    this.last.by =3D attr[3];=0A=
                    var oldD =3D this.node.getAttribute("d") || "";=0A=
                    this.node.setAttribute("d", oldD + d);=0A=
                    this.attrs.path =3D oldD + d;=0A=
                    return this;=0A=
                }=0A=
            },=0A=
            curveTo: function () {=0A=
                var p =3D {},=0A=
                    d =3D [0, 1, 2, 3, "s", 5, "c"][arguments.length];=0A=
                if (this.isAbsolute) {=0A=
                    d =3D d.toUpperCase();=0A=
                }=0A=
                for (var i =3D 0, ii =3D arguments.length; i < ii; i++) {=0A=
                    d +=3D parseFloat(arguments[i]).toFixed(3) + " ";=0A=
                }=0A=
                this.last.x =3D (this.isAbsolute ? 0 : this.last.x) + =
parseFloat(arguments[arguments.length - 2]);=0A=
                this.last.y =3D (this.isAbsolute ? 0 : this.last.y) + =
parseFloat(arguments[arguments.length - 1]);=0A=
                this.last.bx =3D parseFloat(arguments[arguments.length - =
4]);=0A=
                this.last.by =3D parseFloat(arguments[arguments.length - =
3]);=0A=
                var oldD =3D this.node.getAttribute("d") || "";=0A=
                this.node.setAttribute("d", oldD + d);=0A=
                this.attrs.path =3D oldD + d;=0A=
                return this;=0A=
            },=0A=
            qcurveTo: function () {=0A=
                var p =3D {},=0A=
                    d =3D [0, 1, "t", 3, "q"][arguments.length];=0A=
                if (this.isAbsolute) {=0A=
                    d =3D d.toUpperCase();=0A=
                }=0A=
                for (var i =3D 0, ii =3D arguments.length; i < ii; i++) {=0A=
                    d +=3D parseFloat(arguments[i]).toFixed(3) + " ";=0A=
                }=0A=
                this.last.x =3D (this.isAbsolute ? 0 : this.last.x) + =
parseFloat(arguments[arguments.length - 2]);=0A=
                this.last.y =3D (this.isAbsolute ? 0 : this.last.y) + =
parseFloat(arguments[arguments.length - 1]);=0A=
                if (arguments.length !=3D 2) {=0A=
                    this.last.qx =3D =
parseFloat(arguments[arguments.length - 4]);=0A=
                    this.last.qy =3D =
parseFloat(arguments[arguments.length - 3]);=0A=
                }=0A=
                var oldD =3D this.node.getAttribute("d") || "";=0A=
                this.node.setAttribute("d", oldD + d);=0A=
                this.attrs.path =3D oldD + d;=0A=
                return this;=0A=
            },=0A=
            addRoundedCorner: addRoundedCorner,=0A=
            andClose: function () {=0A=
                var oldD =3D this[0].getAttribute("d") || "";=0A=
                this[0].setAttribute("d", oldD + "Z ");=0A=
                this.attrs.path =3D oldD + "Z ";=0A=
                return this;=0A=
            }=0A=
        };=0A=
        var thePath =3D function (params, pathString, SVG) {=0A=
            params =3D params || {};=0A=
            var el =3D doc.createElementNS(SVG.svgns, "path");=0A=
            if (SVG.canvas) {=0A=
                SVG.canvas.appendChild(el);=0A=
            }=0A=
            var p =3D new Element(el, SVG);=0A=
            p.isAbsolute =3D true;=0A=
            for (var method in pathMethods) {=0A=
                p[method] =3D pathMethods[method];=0A=
            }=0A=
            p.type =3D "path";=0A=
            p.last =3D {x: 0, y: 0, bx: 0, by: 0};=0A=
            if (pathString) {=0A=
                p.attrs.path =3D "" + pathString;=0A=
                p.absolutely();=0A=
                paper.pathfinder(p, p.attrs.path);=0A=
            }=0A=
            if (params) {=0A=
                !params.gradient && (params.fill =3D params.fill || =
"none");=0A=
                params.stroke =3D params.stroke || "#000";=0A=
            } else {=0A=
                params =3D {fill: "none", stroke: "#000"};=0A=
            }=0A=
            setFillAndStroke(p, params);=0A=
            return p;=0A=
        };=0A=
        var addGradientFill =3D function (o, gradient, SVG) {=0A=
            gradient =3D toGradient(gradient);=0A=
            var el =3D doc.createElementNS(SVG.svgns, (gradient.type || =
"linear") + "Gradient");=0A=
            el.id =3D "raphael-gradient-" + R.idGenerator++;=0A=
            if (gradient.vector && gradient.vector.length) {=0A=
                el.setAttribute("x1", gradient.vector[0]);=0A=
                el.setAttribute("y1", gradient.vector[1]);=0A=
                el.setAttribute("x2", gradient.vector[2]);=0A=
                el.setAttribute("y2", gradient.vector[3]);=0A=
            }=0A=
            SVG.defs.appendChild(el);=0A=
            var isopacity =3D true;=0A=
            for (var i =3D 0, ii =3D gradient.dots.length; i < ii; i++) {=0A=
                var stop =3D doc.createElementNS(SVG.svgns, "stop");=0A=
                if (gradient.dots[i].offset) {=0A=
                    isopacity =3D false;=0A=
                }=0A=
                stop.setAttribute("offset", gradient.dots[i].offset ? =
gradient.dots[i].offset : (i =3D=3D 0) ? "0%" : "100%");=0A=
                stop.setAttribute("stop-color", =
R.getRGB(gradient.dots[i].color).hex || "#fff");=0A=
                // ignoring opacity for internal points, because VML =
doesn't support it=0A=
                el.appendChild(stop);=0A=
            };=0A=
            if (isopacity && typeof gradient.dots[ii - 1].opacity !=3D =
"undefined") {=0A=
                stop.setAttribute("stop-opacity", gradient.dots[ii - =
1].opacity);=0A=
            }=0A=
            o.setAttribute("fill", "url(#" + el.id + ")");=0A=
            o.style.fill =3D "";=0A=
            o.style.opacity =3D 1;=0A=
            o.style.fillOpacity =3D 1;=0A=
            o.setAttribute("opacity", 1);=0A=
            o.setAttribute("fill-opacity", 1);=0A=
        };=0A=
        var updatePosition =3D function (o) {=0A=
            if (o.pattern) {=0A=
                var bbox =3D o.getBBox();=0A=
                o.pattern.setAttribute("patternTransform", =
"translate(".concat(bbox.x, ",", bbox.y, ")"));=0A=
            }=0A=
        };=0A=
        var setFillAndStroke =3D function (o, params) {=0A=
            var dasharray =3D {=0A=
                    "": [0],=0A=
                    "none": [0],=0A=
                    "-": [3, 1],=0A=
                    ".": [1, 1],=0A=
                    "-.": [3, 1, 1, 1],=0A=
                    "-..": [3, 1, 1, 1, 1, 1],=0A=
                    ". ": [1, 3],=0A=
                    "- ": [4, 3],=0A=
                    "--": [8, 3],=0A=
                    "- .": [4, 3, 1, 3],=0A=
                    "--.": [8, 3, 1, 3],=0A=
                    "--..": [8, 3, 1, 3, 1, 3]=0A=
                },=0A=
                node =3D o.node,=0A=
                attrs =3D o.attrs,=0A=
                rot =3D attrs.rotation,=0A=
                addDashes =3D function (o, value) {=0A=
                    value =3D dasharray[value.toString().toLowerCase()];=0A=
                    if (value) {=0A=
                        var width =3D o.attrs["stroke-width"] || "1",=0A=
                            butt =3D {round: width, square: width, butt: =
0}[o.attrs["stroke-linecap"] || params["stroke-linecap"]] || 0,=0A=
                            dashes =3D [];=0A=
                        for (var i =3D 0, ii =3D value.length; i < ii; =
i++) {=0A=
                            dashes.push(value[i] * width + ((i % 2) ? 1 =
: -1) * butt);=0A=
                        }=0A=
                        value =3D dashes.join(",");=0A=
                        node.setAttribute("stroke-dasharray", value);=0A=
                    }=0A=
                };=0A=
            o.rotate(0, true);=0A=
            for (var att in params) {=0A=
                if (!(att in availableAttrs)) {=0A=
                    continue;=0A=
                }=0A=
                var value =3D params[att];=0A=
                attrs[att] =3D value;=0A=
                switch (att) {=0A=
                    // Hyperlink=0A=
                    case "href":=0A=
                    case "title":=0A=
                    case "target":=0A=
                        var pn =3D node.parentNode;=0A=
                        if (pn.tagName.toLowerCase() !=3D "a") {=0A=
                            var hl =3D =
doc.createElementNS(o.paper.svgns, "a");=0A=
                            pn.insertBefore(hl, node);=0A=
                            hl.appendChild(node);=0A=
                            pn =3D hl;=0A=
                        }=0A=
                        pn.setAttributeNS(o.paper.xlink, att, value);=0A=
                      break;=0A=
                    case "path":=0A=
                        if (o.type =3D=3D "path") {=0A=
                            node.setAttribute("d", "M0,0");=0A=
                            paper.pathfinder(o, value);=0A=
                        }=0A=
                    case "width":=0A=
                        node.setAttribute(att, value);=0A=
                        if (attrs.fx) {=0A=
                            att =3D "x";=0A=
                            value =3D attrs.x;=0A=
                        } else {=0A=
                            break;=0A=
                        }=0A=
                    case "x":=0A=
                        if (attrs.fx) {=0A=
                            value =3D -attrs.x - (attrs.width || 0);=0A=
                        }=0A=
                    case "rx":=0A=
                    case "cx":=0A=
                        node.setAttribute(att, value);=0A=
                        updatePosition(o);=0A=
                        break;=0A=
                    case "height":=0A=
                        node.setAttribute(att, value);=0A=
                        if (attrs.fy) {=0A=
                            att =3D "y";=0A=
                            value =3D attrs.y;=0A=
                        } else {=0A=
                            break;=0A=
                        }=0A=
                    case "y":=0A=
                        if (attrs.fy) {=0A=
                            value =3D -attrs.y - (attrs.height || 0);=0A=
                        }=0A=
                    case "ry":=0A=
                    case "cy":=0A=
                        node.setAttribute(att, value);=0A=
                        updatePosition(o);=0A=
                        break;=0A=
                    case "r":=0A=
                        if (o.type =3D=3D "rect") {=0A=
                            node.setAttribute("rx", value);=0A=
                            node.setAttribute("ry", value);=0A=
                        } else {=0A=
                            node.setAttribute(att, value);=0A=
                        }=0A=
                        break;=0A=
                    case "src":=0A=
                        if (o.type =3D=3D "image") {=0A=
                            node.setAttributeNS(o.paper.xlink, "href", =
value);=0A=
                        }=0A=
                        break;=0A=
                    case "stroke-width":=0A=
                        node.style.strokeWidth =3D value;=0A=
                        // Need following line for Firefox=0A=
                        node.setAttribute(att, value);=0A=
                        if (attrs["stroke-dasharray"]) {=0A=
                            addDashes(o, attrs["stroke-dasharray"]);=0A=
                        }=0A=
                        break;=0A=
                    case "stroke-dasharray":=0A=
                        addDashes(o, value);=0A=
                        break;=0A=
                    case "rotation":=0A=
                        o.rotate(value, true);=0A=
                        break;=0A=
                    case "translation":=0A=
                        var xy =3D (value + "").split(separator);=0A=
                        o.translate((+xy[0] + 1 || 2) - 1, (+xy[1] + 1 =
|| 2) - 1);=0A=
                        break;=0A=
                    case "scale":=0A=
                        var xy =3D (value + "").split(separator);=0A=
                        o.scale(+xy[0] || 1, +xy[1] || +xy[0] || 1, =
+xy[2] || null, +xy[3] || null);=0A=
                        break;=0A=
                    case "fill":=0A=
                        var isURL =3D (value + =
"").match(/^url\(([^\)]+)\)$/i);=0A=
                        if (isURL) {=0A=
                            var el =3D =
doc.createElementNS(o.paper.svgns, "pattern"),=0A=
                                ig =3D =
doc.createElementNS(o.paper.svgns, "image");=0A=
                            el.id =3D "raphael-pattern-" + =
R.idGenerator++;=0A=
                            el.setAttribute("x", 0);=0A=
                            el.setAttribute("y", 0);=0A=
                            el.setAttribute("patternUnits", =
"userSpaceOnUse");=0A=
                            ig.setAttribute("x", 0);=0A=
                            ig.setAttribute("y", 0);=0A=
                            ig.setAttributeNS(o.paper.xlink, "href", =
isURL[1]);=0A=
                            el.appendChild(ig);=0A=
=0A=
                            var img =3D doc.createElement("img");=0A=
                            img.style.position =3D "absolute";=0A=
                            img.style.top =3D "-9999em";=0A=
                            img.style.left =3D "-9999em";=0A=
                            img.onload =3D function () {=0A=
                                el.setAttribute("width", =
this.offsetWidth);=0A=
                                el.setAttribute("height", =
this.offsetHeight);=0A=
                                ig.setAttribute("width", =
this.offsetWidth);=0A=
                                ig.setAttribute("height", =
this.offsetHeight);=0A=
                                doc.body.removeChild(this);=0A=
                                paper.safari();=0A=
                            };=0A=
                            doc.body.appendChild(img);=0A=
                            img.src =3D isURL[1];=0A=
                            o.paper.defs.appendChild(el);=0A=
                            node.style.fill =3D "url(#" + el.id + ")";=0A=
                            node.setAttribute("fill", "url(#" + el.id + =
")");=0A=
                            o.pattern =3D el;=0A=
                            updatePosition(o);=0A=
                            break;=0A=
                        }=0A=
                        delete params.gradient;=0A=
                        delete attrs.gradient;=0A=
                        if (typeof attrs.opacity !=3D "undefined" && =
typeof params.opacity =3D=3D "undefined" ) {=0A=
                            node.style.opacity =3D attrs.opacity;=0A=
                            // Need following line for Firefox=0A=
                            node.setAttribute("opacity", attrs.opacity);=0A=
                        }=0A=
                        if (typeof attrs["fill-opacity"] !=3D =
"undefined" && typeof params["fill-opacity"] =3D=3D "undefined" ) {=0A=
                            node.style.fillOpacity =3D =
o.attrs["fill-opacity"];=0A=
                            // Need following line for Firefox=0A=
                            node.setAttribute("fill-opacity", =
attrs["fill-opacity"]);=0A=
                        }=0A=
                    case "stroke":=0A=
                        node.style[att] =3D R.getRGB(value).hex;=0A=
                        // Need following line for Firefox=0A=
                        node.setAttribute(att, R.getRGB(value).hex);=0A=
                        break;=0A=
                    case "gradient":=0A=
                        addGradientFill(node, value, o.paper);=0A=
                        break;=0A=
                    case "opacity":=0A=
                    case "fill-opacity":=0A=
                        if (attrs.gradient) {=0A=
                            var gradient =3D =
doc.getElementById(node.getAttribute("fill").replace(/^url\(#|\)$/g, =
""));=0A=
                            if (gradient) {=0A=
                                var stops =3D =
gradient.getElementsByTagName("stop");=0A=
                                stops[stops.length - =
1].setAttribute("stop-opacity", value);=0A=
                            }=0A=
                            break;=0A=
                        }=0A=
                    default :=0A=
                        var cssrule =3D att.replace(/(\-.)/g, function =
(w) {=0A=
                            return w.substring(1).toUpperCase();=0A=
                        });=0A=
                        node.style[cssrule] =3D value;=0A=
                        // Need following line for Firefox=0A=
                        node.setAttribute(att, value);=0A=
                        break;=0A=
                }=0A=
            }=0A=
            =0A=
            tuneText(o, params);=0A=
            o.rotate(attrs.rotation, true);=0A=
        };=0A=
        var leading =3D 1.2;=0A=
        var tuneText =3D function (el, params) {=0A=
            if (el.type !=3D "text" || !("text" in params || "font" in =
params || "font-size" in params || "x" in params || "y" in params)) {=0A=
                return;=0A=
            }=0A=
            var a =3D el.attrs,=0A=
                node =3D el.node,=0A=
                fontSize =3D node.firstChild ? =
parseInt(doc.defaultView.getComputedStyle(node.firstChild, =
"").getPropertyValue("font-size"), 10) : 10;=0A=
=0A=
            if ("text" in params) {=0A=
                while (node.firstChild) {=0A=
                    node.removeChild(node.firstChild);=0A=
                }=0A=
                var texts =3D (params.text + "").split("\n");=0A=
                for (var i =3D 0, ii =3D texts.length; i < ii; i++) {=0A=
                    var tspan =3D doc.createElementNS(el.paper.svgns, =
"tspan");=0A=
                    i && tspan.setAttribute("dy", fontSize * leading);=0A=
                    i && tspan.setAttribute("x", a.x);=0A=
                    tspan.appendChild(doc.createTextNode(texts[i]));=0A=
                    node.appendChild(tspan);=0A=
                }=0A=
            } else {=0A=
                var texts =3D node.getElementsByTagName("tspan");=0A=
                for (var i =3D 0, ii =3D texts.length; i < ii; i++) {=0A=
                    i && texts[i].setAttribute("dy", fontSize * leading);=0A=
                    i && texts[i].setAttribute("x", a.x);=0A=
                }=0A=
            }=0A=
            node.setAttribute("y", a.y);=0A=
            var bb =3D el.getBBox(),=0A=
                dif =3D a.y - (bb.y + bb.height / 2);=0A=
            dif && node.setAttribute("y", a.y + dif);=0A=
        };=0A=
        var Element =3D function (node, svg) {=0A=
            var X =3D 0,=0A=
                Y =3D 0;=0A=
            this[0] =3D node;=0A=
            this.node =3D node;=0A=
            this.paper =3D svg;=0A=
            this.attrs =3D this.attrs || {};=0A=
            this.transformations =3D []; // rotate, translate, scale=0A=
            this._ =3D {=0A=
                tx: 0,=0A=
                ty: 0,=0A=
                rt: {deg: 0, x: 0, y: 0},=0A=
                sx: 1,=0A=
                sy: 1=0A=
            };=0A=
        };=0A=
        Element.prototype.rotate =3D function (deg, cx, cy) {=0A=
            if (deg =3D=3D null) {=0A=
                return this._.rt.deg;=0A=
            }=0A=
            var bbox =3D this.getBBox();=0A=
            deg =3D deg.toString().split(separator);=0A=
            if (deg.length - 1) {=0A=
                cx =3D parseFloat(deg[1]);=0A=
                cy =3D parseFloat(deg[2]);=0A=
            }=0A=
            deg =3D parseFloat(deg[0]);=0A=
            if (cx !=3D null) {=0A=
                this._.rt.deg =3D deg;=0A=
            } else {=0A=
                this._.rt.deg +=3D deg;=0A=
            }=0A=
            if (cy =3D=3D null) {=0A=
                cx =3D null;=0A=
            }=0A=
            cx =3D cx =3D=3D null ? bbox.x + bbox.width / 2 : cx;=0A=
            cy =3D cy =3D=3D null ? bbox.y + bbox.height / 2 : cy;=0A=
            if (this._.rt.deg) {=0A=
                this.transformations[0] =3D ("rotate(" + this._.rt.deg + =
" " + cx + " " + cy + ")");=0A=
            } else {=0A=
                this.transformations[0] =3D "";=0A=
            }=0A=
            this.node.setAttribute("transform", =
this.transformations.join(" "));=0A=
            return this;=0A=
        };=0A=
        Element.prototype.hide =3D function () {=0A=
            this.node.style.display =3D "none";=0A=
            return this;=0A=
        };=0A=
        Element.prototype.show =3D function () {=0A=
            this.node.style.display =3D "block";=0A=
            return this;=0A=
        };=0A=
        Element.prototype.remove =3D function () {=0A=
            this.node.parentNode.removeChild(this.node);=0A=
        };=0A=
        Element.prototype.getBBox =3D function () {=0A=
            if (this.node.style.display =3D=3D "none") {=0A=
                this.show();=0A=
                var hide =3D true;=0A=
            }=0A=
            var bbox =3D {};=0A=
            try {=0A=
                bbox =3D this.node.getBBox();=0A=
            } catch(e) {=0A=
                // Firefox 3.0.x plays badly here=0A=
            } finally {=0A=
                bbox =3D bbox || {};=0A=
            }=0A=
            if (this.type =3D=3D "text") {=0A=
                bbox =3D {x: bbox.x, y: Infinity, width: bbox.width, =
height: 0};=0A=
                for (var i =3D 0, ii =3D this.node.getNumberOfChars(); i =
< ii; i++) {=0A=
                    var bb =3D this.node.getExtentOfChar(i);=0A=
                    (bb.y < bbox.y) && (bbox.y =3D bb.y);=0A=
                    (bb.y + bb.height - bbox.y > bbox.height) && =
(bbox.height =3D bb.y + bb.height - bbox.y);=0A=
                }=0A=
            }=0A=
            hide && this.hide();=0A=
            return bbox;=0A=
        };=0A=
        Element.prototype.attr =3D function () {=0A=
            if (arguments.length =3D=3D 1 && typeof arguments[0] =3D=3D =
"string") {=0A=
                if (arguments[0] =3D=3D "translation") {=0A=
                    return this.translate();=0A=
                }=0A=
                return this.attrs[arguments[0]];=0A=
            }=0A=
            if (arguments.length =3D=3D 1 && R.isArray(arguments[0])) {=0A=
                var values =3D {};=0A=
                for (var j in arguments[0]) {=0A=
                    values[arguments[0][j]] =3D =
this.attrs[arguments[0][j]];=0A=
                }=0A=
                return values;=0A=
            }=0A=
            if (arguments.length =3D=3D 2) {=0A=
                var params =3D {};=0A=
                params[arguments[0]] =3D arguments[1];=0A=
                setFillAndStroke(this, params);=0A=
            } else if (arguments.length =3D=3D 1 && typeof arguments[0] =
=3D=3D "object") {=0A=
                setFillAndStroke(this, arguments[0]);=0A=
            }=0A=
            return this;=0A=
        };=0A=
        Element.prototype.toFront =3D function () {=0A=
            this.node.parentNode.appendChild(this.node);=0A=
            return this;=0A=
        };=0A=
        Element.prototype.toBack =3D function () {=0A=
            if (this.node.parentNode.firstChild !=3D this.node) {=0A=
                this.node.parentNode.insertBefore(this.node, =
this.node.parentNode.firstChild);=0A=
            }=0A=
            return this;=0A=
        };=0A=
        Element.prototype.insertAfter =3D function (element) {=0A=
            if (element.node.nextSibling) {=0A=
                element.node.parentNode.insertBefore(this.node, =
element.node.nextSibling);=0A=
            } else {=0A=
                element.node.parentNode.appendChild(this.node);=0A=
            }=0A=
            return this;=0A=
        };=0A=
        Element.prototype.insertBefore =3D function (element) {=0A=
            var node =3D element.node;=0A=
            node.parentNode.insertBefore(this.node, node);=0A=
            return this;=0A=
        };=0A=
        var theCircle =3D function (svg, x, y, r) {=0A=
            var el =3D doc.createElementNS(svg.svgns, "circle");=0A=
            el.setAttribute("cx", x);=0A=
            el.setAttribute("cy", y);=0A=
            el.setAttribute("r", r);=0A=
            el.setAttribute("fill", "none");=0A=
            el.setAttribute("stroke", "#000");=0A=
            if (svg.canvas) {=0A=
                svg.canvas.appendChild(el);=0A=
            }=0A=
            var res =3D new Element(el, svg);=0A=
            res.attrs =3D res.attrs || {};=0A=
            res.attrs.cx =3D x;=0A=
            res.attrs.cy =3D y;=0A=
            res.attrs.r =3D r;=0A=
            res.attrs.stroke =3D "#000";=0A=
            res.type =3D "circle";=0A=
            return res;=0A=
        };=0A=
        var theRect =3D function (svg, x, y, w, h, r) {=0A=
            var el =3D doc.createElementNS(svg.svgns, "rect");=0A=
            el.setAttribute("x", x);=0A=
            el.setAttribute("y", y);=0A=
            el.setAttribute("width", w);=0A=
            el.setAttribute("height", h);=0A=
            if (r) {=0A=
                el.setAttribute("rx", r);=0A=
                el.setAttribute("ry", r);=0A=
            }=0A=
            el.setAttribute("fill", "none");=0A=
            el.setAttribute("stroke", "#000");=0A=
            if (svg.canvas) {=0A=
                svg.canvas.appendChild(el);=0A=
            }=0A=
            var res =3D new Element(el, svg);=0A=
            res.attrs =3D res.attrs || {};=0A=
            res.attrs.x =3D x;=0A=
            res.attrs.y =3D y;=0A=
            res.attrs.width =3D w;=0A=
            res.attrs.height =3D h;=0A=
            res.attrs.stroke =3D "#000";=0A=
            if (r) {=0A=
                res.attrs.rx =3D res.attrs.ry =3D r;=0A=
            }=0A=
            res.type =3D "rect";=0A=
            return res;=0A=
        };=0A=
        var theEllipse =3D function (svg, x, y, rx, ry) {=0A=
            var el =3D doc.createElementNS(svg.svgns, "ellipse");=0A=
            el.setAttribute("cx", x);=0A=
            el.setAttribute("cy", y);=0A=
            el.setAttribute("rx", rx);=0A=
            el.setAttribute("ry", ry);=0A=
            el.setAttribute("fill", "none");=0A=
            el.setAttribute("stroke", "#000");=0A=
            if (svg.canvas) {=0A=
                svg.canvas.appendChild(el);=0A=
            }=0A=
            var res =3D new Element(el, svg);=0A=
            res.attrs =3D res.attrs || {};=0A=
            res.attrs.cx =3D x;=0A=
            res.attrs.cy =3D y;=0A=
            res.attrs.rx =3D rx;=0A=
            res.attrs.ry =3D ry;=0A=
            res.attrs.stroke =3D "#000";=0A=
            res.type =3D "ellipse";=0A=
            return res;=0A=
        };=0A=
        var theImage =3D function (svg, src, x, y, w, h) {=0A=
            var el =3D doc.createElementNS(svg.svgns, "image");=0A=
            el.setAttribute("x", x);=0A=
            el.setAttribute("y", y);=0A=
            el.setAttribute("width", w);=0A=
            el.setAttribute("height", h);=0A=
            el.setAttribute("preserveAspectRatio", "none");=0A=
            el.setAttributeNS(svg.xlink, "href", src);=0A=
            if (svg.canvas) {=0A=
                svg.canvas.appendChild(el);=0A=
            }=0A=
            var res =3D new Element(el, svg);=0A=
            res.attrs =3D res.attrs || {};=0A=
            res.attrs.x =3D x;=0A=
            res.attrs.y =3D y;=0A=
            res.attrs.width =3D w;=0A=
            res.attrs.height =3D h;=0A=
            res.type =3D "image";=0A=
            return res;=0A=
        };=0A=
        var theText =3D function (svg, x, y, text) {=0A=
            var el =3D doc.createElementNS(svg.svgns, "text");=0A=
            el.setAttribute("x", x);=0A=
            el.setAttribute("y", y);=0A=
            el.setAttribute("text-anchor", "middle");=0A=
            if (svg.canvas) {=0A=
                svg.canvas.appendChild(el);=0A=
            }=0A=
            var res =3D new Element(el, svg);=0A=
            res.attrs =3D res.attrs || {};=0A=
            res.attrs.x =3D x;=0A=
            res.attrs.y =3D y;=0A=
            res.type =3D "text";=0A=
            setFillAndStroke(res, {font: availableAttrs.font, stroke: =
"none", fill: "#000", text: text});=0A=
            return res;=0A=
        };=0A=
        var setSize =3D function (width, height) {=0A=
            this.width =3D width || this.width;=0A=
            this.height =3D height || this.height;=0A=
            this.canvas.setAttribute("width", this.width);=0A=
            this.canvas.setAttribute("height", this.height);=0A=
            return this;=0A=
        };=0A=
        var create =3D function () {=0A=
            var con =3D getContainer.apply(null, arguments),=0A=
                container =3D con.container,=0A=
                x =3D con.x,=0A=
                y =3D con.y,=0A=
                width =3D con.width,=0A=
                height =3D con.height;=0A=
            if (!container) {=0A=
                throw new Error("SVG container not found.");=0A=
            }=0A=
            paper.canvas =3D doc.createElementNS(paper.svgns, "svg");=0A=
            paper.canvas.setAttribute("width", width || 512);=0A=
            paper.width =3D width || 512;=0A=
            paper.canvas.setAttribute("height", height || 342);=0A=
            paper.height =3D height || 342;=0A=
            if (container =3D=3D 1) {=0A=
                doc.body.appendChild(paper.canvas);=0A=
                paper.canvas.style.position =3D "absolute";=0A=
                paper.canvas.style.left =3D x + "px";=0A=
                paper.canvas.style.top =3D y + "px";=0A=
            } else {=0A=
                if (container.firstChild) {=0A=
                    container.insertBefore(paper.canvas, =
container.firstChild);=0A=
                } else {=0A=
                    container.appendChild(paper.canvas);=0A=
                }=0A=
            }=0A=
            container =3D {=0A=
                canvas: paper.canvas,=0A=
                clear: function () {=0A=
                    while (this.canvas.firstChild) {=0A=
                        this.canvas.removeChild(this.canvas.firstChild);=0A=
                    }=0A=
                    this.defs =3D doc.createElementNS(paper.svgns, =
"defs");=0A=
                    this.canvas.appendChild(this.defs);=0A=
                }=0A=
            };=0A=
            for (var prop in paper) {=0A=
                if (prop !=3D "create") {=0A=
                    container[prop] =3D paper[prop];=0A=
                }=0A=
            }=0A=
            plugins.call(container, container, R.fn);=0A=
            container.clear();=0A=
            container.raphael =3D R;=0A=
            return container;=0A=
        };=0A=
        paper.remove =3D function () {=0A=
            this.canvas.parentNode.removeChild(this.canvas);=0A=
        };=0A=
        paper.svgns =3D "http://www.w3.org/2000/svg";=0A=
        paper.xlink =3D "http://www.w3.org/1999/xlink";=0A=
        paper.safari =3D function () {=0A=
            if ({"Apple Computer, Inc.": 1, "Google Inc.": =
1}[navigator.vendor]) {=0A=
                var rect =3D this.rect(-this.width, -this.height, =
this.width * 3, this.height * 3).attr({stroke: "none"});=0A=
                setTimeout(function () {rect.remove();});=0A=
            }=0A=
        };=0A=
    }=0A=
=0A=
    // VML=0A=
    if (R.vml) {=0A=
        R.toString =3D function () {=0A=
            return  "Your browser doesn\u2019t support SVG. Assuming it =
is Internet Explorer and falling down to VML.\nYou are running =
Rapha\u00ebl " + this.version;=0A=
        };=0A=
        var pathMethods =3D {=0A=
            absolutely: function () {=0A=
                this.isAbsolute =3D true;=0A=
                return this;=0A=
            },=0A=
            relatively: function () {=0A=
                this.isAbsolute =3D false;=0A=
                return this;=0A=
            },=0A=
            moveTo: function (x, y) {=0A=
                var X =3D Math.round(parseFloat(x)) - 1,=0A=
                    Y =3D Math.round(parseFloat(y)) - 1,=0A=
                    d =3D this.isAbsolute ? "m" : "t";=0A=
                d +=3D X + " " + Y;=0A=
                this.node.path =3D this.Path +=3D d;=0A=
                this.last.x =3D (this.isAbsolute ? 0 : this.last.x) + =
parseFloat(x);=0A=
                this.last.y =3D (this.isAbsolute ? 0 : this.last.y) + =
parseFloat(y);=0A=
                this.last.isAbsolute =3D this.isAbsolute;=0A=
                this.attrs.path +=3D (this.isAbsolute ? "M" : "m") + [x, =
y];=0A=
                return this;=0A=
            },=0A=
            lineTo: function (x, y) {=0A=
                var X =3D Math.round(parseFloat(x)) - 1,=0A=
                    Y =3D Math.round(parseFloat(y)) - 1,=0A=
                    d =3D this.isAbsolute ? "l" : "r";=0A=
                d +=3D X + " " + Y;=0A=
                this.node.path =3D this.Path +=3D d;=0A=
                this.last.x =3D (this.isAbsolute ? 0 : this.last.x) + =
parseFloat(x);=0A=
                this.last.y =3D (this.isAbsolute ? 0 : this.last.y) + =
parseFloat(y);=0A=
                this.last.isAbsolute =3D this.isAbsolute;=0A=
                this.attrs.path +=3D (this.isAbsolute ? "L" : "l") + [x, =
y];=0A=
                return this;=0A=
            },=0A=
            arcTo: function (rx, ry, large_arc_flag, sweep_flag, x2, y2) =
{=0A=
                // for more information of where this math came from =
visit:=0A=
                // =
http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes=0A=
                var x22 =3D (this.isAbsolute ? 0 : this.last.x) + =
parseFloat(x2) - 1,=0A=
                    y22 =3D (this.isAbsolute ? 0 : this.last.y) + =
parseFloat(y2) - 1,=0A=
                    x1 =3D this.last.x - 1,=0A=
                    y1 =3D this.last.y - 1,=0A=
                    x =3D (x1 - x22) / 2,=0A=
                    y =3D (y1 - y22) / 2,=0A=
                    k =3D (large_arc_flag =3D=3D sweep_flag ? -1 : 1) *=0A=
                        Math.sqrt(Math.abs(rx * rx * ry * ry - rx * rx * =
y * y - ry * ry * x * x) / (rx * rx * y * y + ry * ry * x * x)),=0A=
                    cx =3D k * rx * y / ry + (x1 + x22) / 2,=0A=
                    cy =3D k * -ry * x / rx + (y1 + y22) / 2,=0A=
                    d =3D sweep_flag ? (this.isAbsolute ? "wa" : "wr") : =
(this.isAbsolute ? "at" : "ar"),=0A=
                    left =3D Math.round(cx - rx),=0A=
                    top =3D Math.round(cy - ry);=0A=
                d +=3D [left, top, Math.round(left + rx * 2), =
Math.round(top + ry * 2), Math.round(x1), Math.round(y1), =
Math.round(x22), Math.round(y22)].join(", ");=0A=
                this.node.path =3D this.Path +=3D d;=0A=
                this.last.x =3D (this.isAbsolute ? 0 : this.last.x) + x2;=0A=
                this.last.y =3D (this.isAbsolute ? 0 : this.last.y) + y2;=0A=
                this.last.isAbsolute =3D this.isAbsolute;=0A=
                this.attrs.path +=3D (this.isAbsolute ? "A" : "a") + =
[rx, ry, 0, large_arc_flag, sweep_flag, x2, y2];=0A=
                return this;=0A=
            },=0A=
            cplineTo: function (x1, y1, w1) {=0A=
                if (!w1) {=0A=
                    return this.lineTo(x1, y1);=0A=
                } else {=0A=
                    var x =3D Math.round(parseFloat(x1)) - 1,=0A=
                        y =3D Math.round(parseFloat(y1)) - 1,=0A=
                        w =3D Math.round(parseFloat(w1)),=0A=
                        d =3D this.isAbsolute ? "c" : "v",=0A=
                        attr =3D [Math.round(this.last.x) - 1 + w, =
Math.round(this.last.y) - 1, x - w, y, x, y],=0A=
                        svgattr =3D [this.last.x + w1, this.last.y, x1 - =
w1, y1, x1, y1];=0A=
                    d +=3D attr.join(" ") + " ";=0A=
                    this.last.x =3D (this.isAbsolute ? 0 : this.last.x) =
+ attr[4];=0A=
                    this.last.y =3D (this.isAbsolute ? 0 : this.last.y) =
+ attr[5];=0A=
                    this.last.bx =3D attr[2];=0A=
                    this.last.by =3D attr[3];=0A=
                    this.node.path =3D this.Path +=3D d;=0A=
                    this.attrs.path +=3D (this.isAbsolute ? "C" : "c") + =
svgattr;=0A=
                    return this;=0A=
                }=0A=
            },=0A=
            curveTo: function () {=0A=
                var d =3D this.isAbsolute ? "c" : "v";=0A=
                if (arguments.length =3D=3D 6) {=0A=
                    this.last.bx =3D (this.isAbsolute ? 0 : this.last.x) =
+ parseFloat(arguments[2]);=0A=
                    this.last.by =3D (this.isAbsolute ? 0 : this.last.y) =
+ parseFloat(arguments[3]);=0A=
                    this.last.x =3D (this.isAbsolute ? 0 : this.last.x) =
+ parseFloat(arguments[4]);=0A=
                    this.last.y =3D (this.isAbsolute ? 0 : this.last.y) =
+ parseFloat(arguments[5]);=0A=
                    d +=3D [Math.round(parseFloat(arguments[0])) - 1,=0A=
                         Math.round(parseFloat(arguments[1])) - 1,=0A=
                         Math.round(parseFloat(arguments[2])) - 1,=0A=
                         Math.round(parseFloat(arguments[3])) - 1,=0A=
                         Math.round(parseFloat(arguments[4])) - 1,=0A=
                         Math.round(parseFloat(arguments[5])) - =
1].join(" ") + " ";=0A=
                    this.last.isAbsolute =3D this.isAbsolute;=0A=
                    this.attrs.path +=3D (this.isAbsolute ? "C" : "c") + =
Array.prototype.splice.call(arguments, 0, arguments.length);=0A=
                }=0A=
                if (arguments.length =3D=3D 4) {=0A=
                    var bx =3D this.last.x * 2 - this.last.bx,=0A=
                        by =3D this.last.y * 2 - this.last.by;=0A=
                    this.last.bx =3D (this.isAbsolute ? 0 : this.last.x) =
+ parseFloat(arguments[0]);=0A=
                    this.last.by =3D (this.isAbsolute ? 0 : this.last.y) =
+ parseFloat(arguments[1]);=0A=
                    this.last.x =3D (this.isAbsolute ? 0 : this.last.x) =
+ parseFloat(arguments[2]);=0A=
                    this.last.y =3D (this.isAbsolute ? 0 : this.last.y) =
+ parseFloat(arguments[3]);=0A=
                    d +=3D [Math.round(bx) - 1, Math.round(by) - 1,=0A=
                         Math.round(parseFloat(arguments[0])) - 1,=0A=
                         Math.round(parseFloat(arguments[1])) - 1,=0A=
                         Math.round(parseFloat(arguments[2])) - 1,=0A=
                         Math.round(parseFloat(arguments[3])) - =
1].join(" ") + " ";=0A=
                     this.attrs.path +=3D (this.isAbsolute ? "S" : "s") =
+ Array.prototype.splice.call(arguments, 0, arguments.length);=0A=
                }=0A=
                this.node.path =3D this.Path +=3D d;=0A=
                return this;=0A=
            },=0A=
            qcurveTo: function () {=0A=
                var lx =3D Math.round(this.last.x) - 1,=0A=
                    ly =3D Math.round(this.last.y) - 1,=0A=
                    res =3D [];=0A=
                if (arguments.length =3D=3D 4) {=0A=
                    this.last.qx =3D (!this.isAbsolute * this.last.x) + =
parseFloat(arguments[0]);=0A=
                    this.last.qy =3D (!this.isAbsolute * this.last.y) + =
parseFloat(arguments[1]);=0A=
                    this.last.x =3D (!this.isAbsolute * this.last.x) + =
parseFloat(arguments[2]);=0A=
                    this.last.y =3D (!this.isAbsolute * this.last.y) + =
parseFloat(arguments[3]);=0A=
                    res =3D [this.last.qx, this.last.qy, this.last.x, =
this.last.y];=0A=
                    this.last.isAbsolute =3D this.isAbsolute;=0A=
                    this.attrs.path +=3D (this.isAbsolute ? "Q" : "q") + =
Array.prototype.splice.call(arguments, 0, arguments.length);=0A=
                }=0A=
                if (arguments.length =3D=3D 2) {=0A=
                    this.last.qx =3D this.last.x * 2 - this.last.qx;=0A=
                    this.last.qy =3D this.last.y * 2 - this.last.qy;=0A=
                    this.last.x =3D (!this.isAbsolute * this.last.x) + =
parseFloat(arguments[2]);=0A=
                    this.last.y =3D (!this.isAbsolute * this.last.y) + =
parseFloat(arguments[3]);=0A=
                    res =3D [this.last.qx, this.last.qy, this.last.x, =
this.last.y];=0A=
                     this.attrs.path +=3D (this.isAbsolute ? "T" : "t") =
+ Array.prototype.splice.call(arguments, 0, arguments.length);=0A=
                }=0A=
                var d =3D "c" + [=0A=
                        Math.round(2 / 3 * res[0] + 1 / 3 * lx) - 1,=0A=
                        Math.round(2 / 3 * res[1] + 1 / 3 * ly) - 1,=0A=
                        Math.round(2 / 3 * res[0] + 1 / 3 * res[2]) - 1,=0A=
                        Math.round(2 / 3 * res[1] + 1 / 3 * res[3]) - 1,=0A=
                        Math.round(res[2]) - 1,=0A=
                        Math.round(res[3]) - 1=0A=
                    ].join(" ") + " ";=0A=
                this.node.path =3D this.Path +=3D d;=0A=
                return this;=0A=
            },=0A=
            addRoundedCorner: addRoundedCorner,=0A=
            andClose: function () {=0A=
                this.node.path =3D (this.Path +=3D "x");=0A=
                this.attrs.path +=3D "z";=0A=
                return this;=0A=
            }=0A=
        };=0A=
        var thePath =3D function (params, pathString, VML) {=0A=
            params =3D params || {};=0A=
            var g =3D createNode("group"), gl =3D g.style;=0A=
            gl.position =3D "absolute";=0A=
            gl.left =3D 0;=0A=
            gl.top =3D 0;=0A=
            gl.width =3D VML.width + "px";=0A=
            gl.height =3D VML.height + "px";=0A=
            g.coordsize =3D VML.coordsize;=0A=
            g.coordorigin =3D VML.coordorigin;=0A=
            var el =3D createNode("shape"), ol =3D el.style;=0A=
            ol.width =3D VML.width + "px";=0A=
            ol.height =3D VML.height + "px";=0A=
            el.path =3D "";=0A=
            if (params["class"]) {=0A=
                el.className =3D "rvml " + params["class"];=0A=
            }=0A=
            el.coordsize =3D this.coordsize;=0A=
            el.coordorigin =3D this.coordorigin;=0A=
            g.appendChild(el);=0A=
            var p =3D new Element(el, g, VML);=0A=
            p.isAbsolute =3D true;=0A=
            p.type =3D "path";=0A=
            p.path =3D [];=0A=
            p.last =3D {x: 0, y: 0, bx: 0, by: 0, isAbsolute: true};=0A=
            p.Path =3D "";=0A=
            for (var method in pathMethods) {=0A=
                p[method] =3D pathMethods[method];=0A=
            }=0A=
            =0A=
            if (pathString) {=0A=
                p.absolutely();=0A=
                p.attrs.path =3D "";=0A=
                paper.pathfinder(p, "" + pathString);=0A=
            }=0A=
            if (params) {=0A=
                params.fill =3D params.fill || "none";=0A=
                params.stroke =3D params.stroke || "#000";=0A=
            } else {=0A=
                params =3D {fill: "none", stroke: "#000"};=0A=
            }=0A=
            setFillAndStroke(p, params);=0A=
            if (params.gradient) {=0A=
                addGradientFill(p, params.gradient);=0A=
            }=0A=
            p.setBox();=0A=
            VML.canvas.appendChild(g);=0A=
            return p;=0A=
        };=0A=
        var setFillAndStroke =3D function (o, params) {=0A=
            var node =3D o.node,=0A=
                s =3D node.style,=0A=
                xy,=0A=
                res =3D o;=0A=
            o.attrs =3D o.attrs || {};=0A=
            for (var par in params) {=0A=
                o.attrs[par] =3D params[par];=0A=
            }=0A=
            params.href && (node.href =3D params.href);=0A=
            params.title && (node.title =3D params.title);=0A=
            params.target && (node.target =3D params.target);=0A=
            if (params.path && o.type =3D=3D "path") {=0A=
                o.Path =3D "";=0A=
                o.path =3D [];=0A=
                o.attrs.path =3D "";=0A=
                paper.pathfinder(o, params.path);=0A=
            }=0A=
            if (params.rotation !=3D null) {=0A=
                o.rotate(params.rotation, true);=0A=
            }=0A=
            if (params.translation) {=0A=
                xy =3D (params.translation + "").split(separator);=0A=
                o.translate(xy[0], xy[1]);=0A=
            }=0A=
            if (params.scale) {=0A=
                xy =3D (params.scale + "").split(separator);=0A=
                o.scale(+xy[0] || 1, +xy[1] || +xy[0] || 1, +xy[2] || =
null, +xy[3] || null);=0A=
            }=0A=
            if (o.type =3D=3D "image" && params.src) {=0A=
                node.src =3D params.src;=0A=
            }=0A=
            if (o.type =3D=3D "image" && params.opacity) {=0A=
                node.filterOpacity =3D " =
progid:DXImageTransform.Microsoft.Alpha(opacity=3D" + (params.opacity * =
100) + ")";=0A=
                node.style.filter =3D (node.filterMatrix || "") + =
(node.filterOpacity || "");=0A=
            }=0A=
            params.font && (s.font =3D params.font);=0A=
            params["font-family"] && (s.fontFamily =3D '"' + =
params["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g, "") + '"');=0A=
            params["font-size"] && (s.fontSize =3D params["font-size"]);=0A=
            params["font-weight"] && (s.fontWeight =3D =
params["font-weight"]);=0A=
            params["font-style"] && (s.fontStyle =3D =
params["font-style"]);=0A=
            if (typeof params.opacity !=3D "undefined" || typeof =
params["stroke-width"] !=3D "undefined" || typeof params.fill !=3D =
"undefined" || typeof params.stroke !=3D "undefined" || =
params["stroke-width"] || params["stroke-opacity"] || =
params["fill-opacity"] || params["stroke-dasharray"] || =
params["stroke-miterlimit"] || params["stroke-linejoin"] || =
params["stroke-linecap"]) {=0A=
                o =3D o.shape || node;=0A=
                var fill =3D (o.getElementsByTagName("fill") && =
o.getElementsByTagName("fill")[0]) || createNode("fill");=0A=
                if ("fill-opacity" in params || "opacity" in params) {=0A=
                    var opacity =3D ((+params["fill-opacity"] + 1 || 2) =
- 1) * ((+params.opacity + 1 || 2) - 1);=0A=
                    opacity < 0 && (opacity =3D 0);=0A=
                    opacity > 1 && (opacity =3D 1);=0A=
                    fill.opacity =3D opacity;=0A=
                }=0A=
                params.fill && (fill.on =3D true);=0A=
                if (typeof fill.on =3D=3D "undefined" || params.fill =
=3D=3D "none") {=0A=
                    fill.on =3D false;=0A=
                }=0A=
                if (fill.on && params.fill) {=0A=
                    var isURL =3D =
params.fill.match(/^url\(([^\)]+)\)$/i);=0A=
                    if (isURL) {=0A=
                        fill.src =3D isURL[1];=0A=
                        fill.type =3D "tile";=0A=
                    } else {=0A=
                        fill.color =3D R.getRGB(params.fill).hex;=0A=
                        fill.src =3D "";=0A=
                        fill.type =3D "solid";=0A=
                    }=0A=
                }=0A=
                o.appendChild(fill);=0A=
                var stroke =3D (o.getElementsByTagName("stroke") && =
o.getElementsByTagName("stroke")[0]) || createNode("stroke");=0A=
                if ((params.stroke && params.stroke !=3D "none") || =
params["stroke-width"] || typeof params["stroke-opacity"] !=3D =
"undefined" || params["stroke-dasharray"] || params["stroke-miterlimit"] =
|| params["stroke-linejoin"] || params["stroke-linecap"]) {=0A=
                    stroke.on =3D true;=0A=
                }=0A=
                if (params.stroke =3D=3D "none" || typeof stroke.on =
=3D=3D "undefined" || params.stroke =3D=3D 0) {=0A=
                    stroke.on =3D false;=0A=
                }=0A=
                if (stroke.on && params.stroke) {=0A=
                    stroke.color =3D R.getRGB(params.stroke).hex;=0A=
                }=0A=
                var opacity =3D ((+params["stroke-opacity"] + 1 || 2) - =
1) * ((+params.opacity + 1 || 2) - 1);=0A=
                opacity < 0 && (opacity =3D 0);=0A=
                opacity > 1 && (opacity =3D 1);=0A=
                stroke.opacity =3D opacity;=0A=
                params["stroke-linejoin"] && (stroke.joinstyle =3D =
params["stroke-linejoin"] || "miter");=0A=
                stroke.miterlimit =3D params["stroke-miterlimit"] || 8;=0A=
                params["stroke-linecap"] && (stroke.endcap =3D {butt: =
"flat", square: "square", round: "round"}[params["stroke-linecap"]] || =
"miter");=0A=
                params["stroke-width"] && (stroke.weight =3D =
(parseFloat(params["stroke-width"]) || 1) * 12 / 16);=0A=
                if (params["stroke-dasharray"]) {=0A=
                    var dasharray =3D {=0A=
                        "-": "shortdash",=0A=
                        ".": "shortdot",=0A=
                        "-.": "shortdashdot",=0A=
                        "-..": "shortdashdotdot",=0A=
                        ". ": "dot",=0A=
                        "- ": "dash",=0A=
                        "--": "longdash",=0A=
                        "- .": "dashdot",=0A=
                        "--.": "longdashdot",=0A=
                        "--..": "longdashdotdot"=0A=
                    };=0A=
                    stroke.dashstyle =3D =
dasharray[params["stroke-dasharray"]] || "";=0A=
                }=0A=
                o.appendChild(stroke);=0A=
            }=0A=
            if (res.type =3D=3D "text") {=0A=
                var s =3D paper.span.style,=0A=
                    a =3D res.attrs;=0A=
                a.font && (s.font =3D a.font);=0A=
                a["font-family"] && (s.fontFamily =3D a["font-family"]);=0A=
                a["font-size"] && (s.fontSize =3D a["font-size"]);=0A=
                a["font-weight"] && (s.fontWeight =3D a["font-weight"]);=0A=
                a["font-style"] && (s.fontStyle =3D a["font-style"]);=0A=
                paper.span.innerText =3D res.node.string;=0A=
                res.W =3D a.w =3D paper.span.offsetWidth;=0A=
                res.H =3D a.h =3D paper.span.offsetHeight;=0A=
                res.X =3D a.x;=0A=
                res.Y =3D a.y + Math.round(res.H / 2);=0A=
=0A=
                // text-anchor emulation=0A=
                switch (a["text-anchor"]) {=0A=
                    case "start":=0A=
                        res.node.style["v-text-align"] =3D "left";=0A=
                        res.bbx =3D Math.round(res.W / 2);=0A=
                    break;=0A=
                    case "end":=0A=
                        res.node.style["v-text-align"] =3D "right";=0A=
                        res.bbx =3D -Math.round(res.W / 2);=0A=
                    break;=0A=
                    default:=0A=
                        res.node.style["v-text-align"] =3D "center";=0A=
                    break;=0A=
                }=0A=
            }=0A=
        };=0A=
        var getAngle =3D function (a, b, c, d) {=0A=
            var angle =3D Math.round(Math.atan((parseFloat(c) - =
parseFloat(a)) / (parseFloat(d) - parseFloat(b))) * 57.29) || 0;=0A=
            if (!angle && parseFloat(a) < parseFloat(b)) {=0A=
                angle =3D 180;=0A=
            }=0A=
            angle -=3D 180;=0A=
            if (angle < 0) {=0A=
                angle +=3D 360;=0A=
            }=0A=
            return angle;=0A=
        };=0A=
        var addGradientFill =3D function (o, gradient) {=0A=
            gradient =3D toGradient(gradient);=0A=
            o.attrs =3D o.attrs || {};=0A=
            var attrs =3D o.attrs,=0A=
                fill =3D o.node.getElementsByTagName("fill");=0A=
            o.attrs.gradient =3D gradient;=0A=
            o =3D o.shape || o.node;=0A=
            if (fill.length) {=0A=
                fill =3D fill[0];=0A=
            } else {=0A=
                fill =3D createNode("fill");=0A=
            }=0A=
            if (gradient.dots.length) {=0A=
                fill.on =3D true;=0A=
                fill.method =3D "none";=0A=
                fill.type =3D ((gradient.type + "").toLowerCase() =3D=3D =
"radial") ? "gradientTitle" : "gradient";=0A=
                if (typeof gradient.dots[0].color !=3D "undefined") {=0A=
                    fill.color =3D R.getRGB(gradient.dots[0].color).hex;=0A=
                }=0A=
                if (typeof gradient.dots[gradient.dots.length - 1].color =
!=3D "undefined") {=0A=
                    fill.color2 =3D =
R.getRGB(gradient.dots[gradient.dots.length - 1].color).hex;=0A=
                }=0A=
                var clrs =3D [];=0A=
                for (var i =3D 0, ii =3D gradient.dots.length; i < ii; =
i++) {=0A=
                    if (gradient.dots[i].offset) {=0A=
                        clrs.push(gradient.dots[i].offset + " " + =
R.getRGB(gradient.dots[i].color).hex);=0A=
                    }=0A=
                };=0A=
                var fillOpacity =3D typeof =
gradient.dots[gradient.dots.length - 1].opacity =3D=3D "undefined" ? =
(typeof attrs.opacity =3D=3D "undefined" ? 1 : attrs.opacity) : =
gradient.dots[gradient.dots.length - 1].opacity;=0A=
                if (clrs.length) {=0A=
                    fill.colors.value =3D clrs.join(",");=0A=
                    fillOpacity =3D typeof attrs.opacity =3D=3D =
"undefined" ? 1 : attrs.opacity;=0A=
                } else {=0A=
                    fill.colors && (fill.colors.value =3D "0% " + =
fill.color);=0A=
                }=0A=
                fill.opacity =3D fillOpacity;=0A=
                if (typeof gradient.angle !=3D "undefined") {=0A=
                    fill.angle =3D (-gradient.angle + 270) % 360;=0A=
                } else if (gradient.vector) {=0A=
                    fill.angle =3D getAngle.apply(null, gradient.vector);=0A=
                }=0A=
                if ((gradient.type + "").toLowerCase() =3D=3D "radial") {=0A=
                    fill.focus =3D "100%";=0A=
                    fill.focusposition =3D "0.5 0.5";=0A=
                }=0A=
            }=0A=
        };=0A=
        var Element =3D function (node, group, vml) {=0A=
            var Rotation =3D 0,=0A=
                RotX =3D 0,=0A=
                RotY =3D 0,=0A=
                Scale =3D 1;=0A=
            this[0] =3D node;=0A=
            this.node =3D node;=0A=
            this.X =3D 0;=0A=
            this.Y =3D 0;=0A=
            this.attrs =3D {};=0A=
            this.Group =3D group;=0A=
            this.paper =3D vml;=0A=
            this._ =3D {=0A=
                tx: 0,=0A=
                ty: 0,=0A=
                rt: {deg:0},=0A=
                sx: 1,=0A=
                sy: 1=0A=
            };=0A=
        };=0A=
        Element.prototype.rotate =3D function (deg, cx, cy) {=0A=
            if (deg =3D=3D null) {=0A=
                return this._.rt.deg;=0A=
            }=0A=
            deg =3D (deg + "").split(separator);=0A=
            if (deg.length - 1) {=0A=
                cx =3D parseFloat(deg[1]);=0A=
                cy =3D parseFloat(deg[2]);=0A=
            }=0A=
            deg =3D parseFloat(deg[0]);=0A=
            if (cx !=3D null) {=0A=
                this._.rt.deg =3D deg;=0A=
            } else {=0A=
                this._.rt.deg +=3D deg;=0A=
            }=0A=
            if (cy =3D=3D null) {=0A=
                cx =3D null;=0A=
            }=0A=
            this._.rt.cx =3D cx;=0A=
            this._.rt.cy =3D cy;=0A=
            this.setBox(this.attrs, cx, cy);=0A=
            this.Group.style.rotation =3D this._.rt.deg;=0A=
            // gradient fix for rotation. TODO=0A=
            // var fill =3D (this.shape || =
this.node).getElementsByTagName("fill");=0A=
            // fill =3D fill[0] || {};=0A=
            // var b =3D ((360 - this._.rt.deg) - 270) % 360;=0A=
            // typeof fill.angle !=3D "undefined" && (fill.angle =3D b);=0A=
            return this;=0A=
        };=0A=
        Element.prototype.setBox =3D function (params, cx, cy) {=0A=
            var gs =3D this.Group.style,=0A=
                os =3D (this.shape && this.shape.style) || =
this.node.style;=0A=
            params =3D params || {};=0A=
            for (var i in params) {=0A=
                this.attrs[i] =3D params[i];=0A=
            }=0A=
            cx =3D cx || this._.rt.cx;=0A=
            cy =3D cy || this._.rt.cy;=0A=
            var attr =3D this.attrs,=0A=
                x,=0A=
                y,=0A=
                w,=0A=
                h;=0A=
            switch (this.type) {=0A=
                case "circle":=0A=
                    x =3D attr.cx - attr.r;=0A=
                    y =3D attr.cy - attr.r;=0A=
                    w =3D h =3D attr.r * 2;=0A=
                    break;=0A=
                case "ellipse":=0A=
                    x =3D attr.cx - attr.rx;=0A=
                    y =3D attr.cy - attr.ry;=0A=
                    w =3D attr.rx * 2;=0A=
                    h =3D attr.ry * 2;=0A=
                    break;=0A=
                case "rect":=0A=
                case "image":=0A=
                    x =3D attr.x;=0A=
                    y =3D attr.y;=0A=
                    w =3D attr.width || 0;=0A=
                    h =3D attr.height || 0;=0A=
                    break;=0A=
                case "text":=0A=
                    this.textpath.v =3D ["m", Math.round(attr.x), ", ", =
Math.round(attr.y - 2), "l", Math.round(attr.x) + 1, ", ", =
Math.round(attr.y - 2)].join("");=0A=
                    x =3D attr.x - Math.round(this.W / 2);=0A=
                    y =3D attr.y - this.H / 2;=0A=
                    w =3D this.W;=0A=
                    h =3D this.H;=0A=
                    break;=0A=
                case "path":=0A=
                    if (!this.attrs.path) {=0A=
                        x =3D 0;=0A=
                        y =3D 0;=0A=
                        w =3D this.paper.width;=0A=
                        h =3D this.paper.height;=0A=
                    } else {=0A=
                        var dim =3D pathDimensions(this.attrs.path),=0A=
                        x =3D dim.x;=0A=
                        y =3D dim.y;=0A=
                        w =3D dim.width;=0A=
                        h =3D dim.height;=0A=
                    }=0A=
                    break;=0A=
                default:=0A=
                    x =3D 0;=0A=
                    y =3D 0;=0A=
                    w =3D this.paper.width;=0A=
                    h =3D this.paper.height;=0A=
                    break;=0A=
            }=0A=
            cx =3D (cx =3D=3D null) ? x + w / 2 : cx;=0A=
            cy =3D (cy =3D=3D null) ? y + h / 2 : cy;=0A=
            var left =3D cx - this.paper.width / 2,=0A=
                top =3D cy - this.paper.height / 2;=0A=
            if (this.type =3D=3D "path" || this.type =3D=3D "text") {=0A=
                (gs.left !=3D left + "px") && (gs.left =3D left + "px");=0A=
                (gs.top !=3D top + "px") && (gs.top =3D top + "px");=0A=
                this.X =3D this.type =3D=3D "text" ? x : -left;=0A=
                this.Y =3D this.type =3D=3D "text" ? y : -top;=0A=
                this.W =3D w;=0A=
                this.H =3D h;=0A=
                (os.left !=3D -left + "px") && (os.left =3D -left + =
"px");=0A=
                (os.top !=3D -top + "px") && (os.top =3D -top + "px");=0A=
            } else {=0A=
                (gs.left !=3D left + "px") && (gs.left =3D left + "px");=0A=
                (gs.top !=3D top + "px") && (gs.top =3D top + "px");=0A=
                this.X =3D x;=0A=
                this.Y =3D y;=0A=
                this.W =3D w;=0A=
                this.H =3D h;=0A=
                (gs.width !=3D this.paper.width + "px") && (gs.width =3D =
this.paper.width + "px");=0A=
                (gs.height !=3D this.paper.height + "px") && (gs.height =
=3D this.paper.height + "px");=0A=
                (os.left !=3D x - left + "px") && (os.left =3D x - left =
+ "px");=0A=
                (os.top !=3D y - top + "px") && (os.top =3D y - top + =
"px");=0A=
                (os.width !=3D w + "px") && (os.width =3D w + "px");=0A=
                (os.height !=3D h + "px") && (os.height =3D h + "px");=0A=
                var arcsize =3D (+params.r || 0) / (Math.min(w, h));=0A=
                if (this.type =3D=3D "rect" && this.arcsize !=3D arcsize =
&& (arcsize || this.arcsize)) {=0A=
                    // We should replace element with the new one=0A=
                    var o =3D createNode(arcsize ? "roundrect" : "rect");=0A=
                    o.arcsize =3D arcsize;=0A=
                    this.Group.appendChild(o);=0A=
                    this.node.parentNode.removeChild(this.node);=0A=
                    this.node =3D o;=0A=
                    this.arcsize =3D arcsize;=0A=
                    setFillAndStroke(this, this.attrs);=0A=
                    this.setBox(this.attrs);=0A=
                }=0A=
            }=0A=
        };=0A=
        Element.prototype.hide =3D function () {=0A=
            this.Group.style.display =3D "none";=0A=
            return this;=0A=
        };=0A=
        Element.prototype.show =3D function () {=0A=
            this.Group.style.display =3D "block";=0A=
            return this;=0A=
        };=0A=
        Element.prototype.getBBox =3D function () {=0A=
            if (this.type =3D=3D "path") {=0A=
                return pathDimensions(this.attr("path"));=0A=
            }=0A=
            return {=0A=
                x: this.X + (this.bbx || 0),=0A=
                y: this.Y,=0A=
                width: this.W,=0A=
                height: this.H=0A=
            };=0A=
        };=0A=
        Element.prototype.remove =3D function () {=0A=
            this[0].parentNode.removeChild(this[0]);=0A=
            this.Group.parentNode.removeChild(this.Group);=0A=
            this.shape && this.shape.parentNode.removeChild(this.shape);=0A=
        };=0A=
        Element.prototype.attr =3D function () {=0A=
            if (arguments.length =3D=3D 1 && typeof arguments[0] =3D=3D =
"string") {=0A=
                if (arguments[0] =3D=3D "translation") {=0A=
                    return this.translate();=0A=
                }=0A=
                return this.attrs[arguments[0]];=0A=
            }=0A=
            if (this.attrs && arguments.length =3D=3D 1 && =
R.isArray(arguments[0])) {=0A=
                var values =3D {};=0A=
                for (var i =3D 0, ii =3D arguments[0].length; i < ii; =
i++) {=0A=
                    values[arguments[0][i]] =3D =
this.attrs[arguments[0][i]];=0A=
                };=0A=
                return values;=0A=
            }=0A=
            var params;=0A=
            if (arguments.length =3D=3D 2) {=0A=
                params =3D {};=0A=
                params[arguments[0]] =3D arguments[1];=0A=
            }=0A=
            if (arguments.length =3D=3D 1 && typeof arguments[0] =3D=3D =
"object") {=0A=
                params =3D arguments[0];=0A=
            }=0A=
            if (params) {=0A=
                if (params.gradient) {=0A=
                    addGradientFill(this, params.gradient);=0A=
                }=0A=
                if (params.text && this.type =3D=3D "text") {=0A=
                    this.node.string =3D params.text;=0A=
                }=0A=
                setFillAndStroke(this, params);=0A=
                this.setBox(this.attrs);=0A=
            }=0A=
            return this;=0A=
        };=0A=
        Element.prototype.toFront =3D function () {=0A=
            this.Group.parentNode.appendChild(this.Group);=0A=
            return this;=0A=
        };=0A=
        Element.prototype.toBack =3D function () {=0A=
            if (this.Group.parentNode.firstChild !=3D this.Group) {=0A=
                this.Group.parentNode.insertBefore(this.Group, =
this.Group.parentNode.firstChild);=0A=
            }=0A=
            return this;=0A=
        };=0A=
        Element.prototype.insertAfter =3D function (element) {=0A=
            if (element.Group.nextSibling) {=0A=
                element.Group.parentNode.insertBefore(this.Group, =
element.Group.nextSibling);=0A=
            } else {=0A=
                element.Group.parentNode.appendChild(this.Group);=0A=
            }=0A=
            return this;=0A=
        };=0A=
        Element.prototype.insertBefore =3D function (element) {=0A=
            element.Group.parentNode.insertBefore(this.Group, =
element.Group);=0A=
            return this;=0A=
        };=0A=
        var theCircle =3D function (vml, x, y, r) {=0A=
            var g =3D createNode("group"),=0A=
                gl =3D g.style,=0A=
                o =3D createNode("oval"),=0A=
                ol =3D o.style;=0A=
            gl.position =3D "absolute";=0A=
            gl.left =3D 0;=0A=
            gl.top =3D 0;=0A=
            gl.width =3D vml.width + "px";=0A=
            gl.height =3D vml.height + "px";=0A=
            g.coordsize =3D vml.coordsize;=0A=
            g.coordorigin =3D vml.coordorigin;=0A=
            g.appendChild(o);=0A=
            var res =3D new Element(o, g, vml);=0A=
            res.type =3D "circle";=0A=
            setFillAndStroke(res, {stroke: "#000", fill: "none"});=0A=
            res.attrs.cx =3D x;=0A=
            res.attrs.cy =3D y;=0A=
            res.attrs.r =3D r;=0A=
            res.setBox({x: x - r, y: y - r, width: r * 2, height: r * =
2});=0A=
            vml.canvas.appendChild(g);=0A=
            return res;=0A=
        };=0A=
        var theRect =3D function (vml, x, y, w, h, r) {=0A=
            var g =3D createNode("group"),=0A=
                gl =3D g.style,=0A=
                o =3D createNode(r ? "roundrect" : "rect"),=0A=
                arcsize =3D (+r || 0) / (Math.min(w, h));=0A=
            o.arcsize =3D arcsize;=0A=
            gl.position =3D "absolute";=0A=
            gl.left =3D 0;=0A=
            gl.top =3D 0;=0A=
            gl.width =3D vml.width + "px";=0A=
            gl.height =3D vml.height + "px";=0A=
            g.coordsize =3D vml.coordsize;=0A=
            g.coordorigin =3D vml.coordorigin;=0A=
            g.appendChild(o);=0A=
            var res =3D new Element(o, g, vml);=0A=
            res.type =3D "rect";=0A=
            setFillAndStroke(res, {stroke: "#000"});=0A=
            res.arcsize =3D arcsize;=0A=
            res.setBox({x: x, y: y, width: w, height: h, r: +r});=0A=
            vml.canvas.appendChild(g);=0A=
            return res;=0A=
        };=0A=
        var theEllipse =3D function (vml, x, y, rx, ry) {=0A=
            var g =3D createNode("group"),=0A=
                gl =3D g.style,=0A=
                o =3D createNode("oval"),=0A=
                ol =3D o.style;=0A=
            gl.position =3D "absolute";=0A=
            gl.left =3D 0;=0A=
            gl.top =3D 0;=0A=
            gl.width =3D vml.width + "px";=0A=
            gl.height =3D vml.height + "px";=0A=
            g.coordsize =3D vml.coordsize;=0A=
            g.coordorigin =3D vml.coordorigin;=0A=
            g.appendChild(o);=0A=
            var res =3D new Element(o, g, vml);=0A=
            res.type =3D "ellipse";=0A=
            setFillAndStroke(res, {stroke: "#000"});=0A=
            res.attrs.cx =3D x;=0A=
            res.attrs.cy =3D y;=0A=
            res.attrs.rx =3D rx;=0A=
            res.attrs.ry =3D ry;=0A=
            res.setBox({x: x - rx, y: y - ry, width: rx * 2, height: ry =
* 2});=0A=
            vml.canvas.appendChild(g);=0A=
            return res;=0A=
        };=0A=
        var theImage =3D function (vml, src, x, y, w, h) {=0A=
            var g =3D createNode("group"),=0A=
                gl =3D g.style,=0A=
                o =3D createNode("image"),=0A=
                ol =3D o.style;=0A=
            gl.position =3D "absolute";=0A=
            gl.left =3D 0;=0A=
            gl.top =3D 0;=0A=
            gl.width =3D vml.width + "px";=0A=
            gl.height =3D vml.height + "px";=0A=
            g.coordsize =3D vml.coordsize;=0A=
            g.coordorigin =3D vml.coordorigin;=0A=
            o.src =3D src;=0A=
            g.appendChild(o);=0A=
            var res =3D new Element(o, g, vml);=0A=
            res.type =3D "image";=0A=
            res.attrs.x =3D x;=0A=
            res.attrs.y =3D y;=0A=
            res.attrs.w =3D w;=0A=
            res.attrs.h =3D h;=0A=
            res.setBox({x: x, y: y, width: w, height: h});=0A=
            vml.canvas.appendChild(g);=0A=
            return res;=0A=
        };=0A=
        var theText =3D function (vml, x, y, text) {=0A=
            var g =3D createNode("group"),=0A=
                gs =3D g.style,=0A=
                el =3D createNode("shape"),=0A=
                ol =3D el.style,=0A=
                path =3D createNode("path"),=0A=
                ps =3D path.style,=0A=
                o =3D createNode("textpath");=0A=
            gs.position =3D "absolute";=0A=
            gs.left =3D 0;=0A=
            gs.top =3D 0;=0A=
            gs.width =3D vml.width + "px";=0A=
            gs.height =3D vml.height + "px";=0A=
            g.coordsize =3D vml.coordsize;=0A=
            g.coordorigin =3D vml.coordorigin;=0A=
            path.v =3D ["m", Math.round(x), ", ", Math.round(y), "l", =
Math.round(x) + 1, ", ", Math.round(y)].join("");=0A=
            path.textpathok =3D true;=0A=
            ol.width =3D vml.width;=0A=
            ol.height =3D vml.height;=0A=
            gs.position =3D "absolute";=0A=
            gs.left =3D 0;=0A=
            gs.top =3D 0;=0A=
            gs.width =3D vml.width;=0A=
            gs.height =3D vml.height;=0A=
            o.string =3D text;=0A=
            o.on =3D true;=0A=
            el.appendChild(o);=0A=
            el.appendChild(path);=0A=
            g.appendChild(el);=0A=
            var res =3D new Element(o, g, vml);=0A=
            res.shape =3D el;=0A=
            res.textpath =3D path;=0A=
            res.type =3D "text";=0A=
            res.attrs.x =3D x;=0A=
            res.attrs.y =3D y;=0A=
            res.attrs.w =3D 1;=0A=
            res.attrs.h =3D 1;=0A=
            setFillAndStroke(res, {font: availableAttrs.font, stroke: =
"none", fill: "#000"});=0A=
            res.setBox();=0A=
            vml.canvas.appendChild(g);=0A=
            return res;=0A=
        };=0A=
        var setSize =3D function (width, height) {=0A=
            var cs =3D this.canvas.style;=0A=
            this.width =3D width || this.width;=0A=
            this.height =3D height || this.height;=0A=
            cs.width =3D this.width + "px";=0A=
            cs.height =3D this.height + "px";=0A=
            cs.clip =3D "rect(0 " + this.width + "px " + this.height + =
"px 0)";=0A=
            this.canvas.coordsize =3D this.width + " " + this.height;=0A=
            return this;=0A=
        };=0A=
        doc.createStyleSheet().addRule(".rvml", =
"behavior:url(#default#VML)");=0A=
        try {=0A=
            if (!doc.namespaces.rvml) {=0A=
                doc.namespaces.add("rvml", =
"urn:schemas-microsoft-com:vml");=0A=
            }=0A=
            var createNode =3D function (tagName) {=0A=
                return doc.createElement('<rvml:' + tagName + ' =
class=3D"rvml">');=0A=
            };=0A=
        } catch (e) {=0A=
            var createNode =3D function (tagName) {=0A=
                return doc.createElement('<' + tagName + ' =
xmlns=3D"urn:schemas-microsoft.com:vml" class=3D"rvml">');=0A=
            };=0A=
        }=0A=
        var create =3D function () {=0A=
            var con =3D getContainer.apply(null, arguments),=0A=
                container =3D con.container,=0A=
                x =3D con.x,=0A=
                y =3D con.y,=0A=
                width =3D con.width,=0A=
                s,=0A=
                height =3D con.height;=0A=
            if (!container) {=0A=
                throw new Error("VML container not found.");=0A=
            }=0A=
            var c =3D paper.canvas =3D doc.createElement("div"),=0A=
                cs =3D c.style;=0A=
            width =3D parseFloat(width) || "512px";=0A=
            height =3D parseFloat(height) || "342px";=0A=
            paper.width =3D width;=0A=
            paper.height =3D height;=0A=
            paper.coordsize =3D width + " " + height;=0A=
            paper.coordorigin =3D "0 0";=0A=
            paper.span =3D doc.createElement("span");=0A=
            s =3D paper.span.style;=0A=
            c.appendChild(paper.span);=0A=
            s.position =3D "absolute";=0A=
            s.left =3D "-99999px";=0A=
            s.top =3D "-99999px";=0A=
            s.padding =3D 0;=0A=
            s.margin =3D 0;=0A=
            s.lineHeight =3D 1;=0A=
            s.display =3D "inline";=0A=
            cs.width  =3D width + "px";=0A=
            cs.height =3D height + "px";=0A=
            cs.position =3D "absolute";=0A=
            cs.clip =3D "rect(0 " + width + "px " + height + "px 0)";=0A=
            if (container =3D=3D 1) {=0A=
                doc.body.appendChild(c);=0A=
                cs.left =3D x + "px";=0A=
                cs.top =3D y + "px";=0A=
                container =3D {=0A=
                    style: {=0A=
                        width: width,=0A=
                        height: height=0A=
                    }=0A=
                };=0A=
            } else {=0A=
                container.style.width =3D width;=0A=
                container.style.height =3D height;=0A=
                if (container.firstChild) {=0A=
                    container.insertBefore(c, container.firstChild);=0A=
                } else {=0A=
                    container.appendChild(c);=0A=
                }=0A=
            }=0A=
            for (var prop in paper) {=0A=
                container[prop] =3D paper[prop];=0A=
            }=0A=
            plugins.call(container, container, R.fn);=0A=
            container.clear =3D function () {=0A=
                while (c.firstChild) {=0A=
                    c.removeChild(c.firstChild);=0A=
                }=0A=
            };=0A=
            container.raphael =3D R;=0A=
            return container;=0A=
        };=0A=
        paper.remove =3D function () {=0A=
            this.canvas.parentNode.removeChild(this.canvas);=0A=
        };=0A=
        paper.safari =3D function () {};=0A=
    }=0A=
=0A=
    // rest=0A=
=0A=
    // Events=0A=
    var addEvent =3D (function () {=0A=
        if (doc.addEventListener) {=0A=
            return function (obj, type, fn, element) {=0A=
                var f =3D function (e) {=0A=
                    return fn.call(element, e);=0A=
                };=0A=
                obj.addEventListener(type, f, false);=0A=
                return function () {=0A=
                    obj.removeEventListener(type, f, false);=0A=
                    return true;=0A=
                };=0A=
            };=0A=
        } else if (doc.attachEvent) {=0A=
            return function (obj, type, fn, element) {=0A=
                var f =3D function (e) {=0A=
                    return fn.call(element, e || win.event);=0A=
                };=0A=
                obj.attachEvent("on" + type, f);=0A=
                var detacher =3D function () {=0A=
                    obj.detachEvent("on" + type, f);=0A=
                    return true;=0A=
                };=0A=
                if (type =3D=3D "mouseover") {=0A=
                    obj.attachEvent("onmouseenter", f);=0A=
                    return function () {=0A=
                        obj.detachEvent("onmouseenter", f);=0A=
                        return detacher();=0A=
                    };=0A=
                } else if (type =3D=3D "mouseout") {=0A=
                    obj.attachEvent("onmouseleave", f);=0A=
                    return function () {=0A=
                        obj.detachEvent("onmouseleave", f);=0A=
                        return detacher();=0A=
                    };=0A=
                }=0A=
                return detacher;=0A=
            };=0A=
        }=0A=
    })();=0A=
    for (var i =3D events.length; i--;) {=0A=
        (function (eventName) {=0A=
            Element.prototype[eventName] =3D function (fn) {=0A=
                if (typeof fn =3D=3D "function") {=0A=
                    this.events =3D this.events || {};=0A=
                    this.events[eventName] =3D this.events[eventName] || =
{};=0A=
                    this.events[eventName][fn] =3D =
this.events[eventName][fn] || [];=0A=
                    this.events[eventName][fn].push(addEvent(this.shape =
|| this.node, eventName, fn, this));=0A=
                }=0A=
                return this;=0A=
            };=0A=
            Element.prototype["un" + eventName] =3D function (fn) {=0A=
                this.events &&=0A=
                this.events[eventName] &&=0A=
                this.events[eventName][fn] &&=0A=
                this.events[eventName][fn].length &&=0A=
                this.events[eventName][fn].shift()() &&=0A=
                !this.events[eventName][fn].length &&=0A=
                delete this.events[eventName][fn];=0A=
            };=0A=
=0A=
        })(events[i]);=0A=
    }=0A=
    paper.circle =3D function (x, y, r) {=0A=
        return theCircle(this, x, y, r);=0A=
    };=0A=
    paper.rect =3D function (x, y, w, h, r) {=0A=
        return theRect(this, x, y, w, h, r);=0A=
    };=0A=
    paper.ellipse =3D function (x, y, rx, ry) {=0A=
        return theEllipse(this, x, y, rx, ry);=0A=
    };=0A=
    paper.path =3D function (params, pathString) {=0A=
        return thePath(params, pathString, this);=0A=
    };=0A=
    paper.image =3D function (src, x, y, w, h) {=0A=
        return theImage(this, src, x, y, w, h);=0A=
    };=0A=
    paper.text =3D function (x, y, text) {=0A=
        return theText(this, x, y, text);=0A=
    };=0A=
    paper.drawGrid =3D function (x, y, w, h, wv, hv, color) {=0A=
=0A=
        color =3D color || "#000";=0A=
        var path =3D ["M", x, y, "L", x + w, y, x + w, y + h, x, y + h, =
x, y],=0A=
            rowHeight =3D h / hv,=0A=
            columnWidth =3D w / wv;=0A=
        for (var i =3D 1; i < hv; i++) {=0A=
            path =3D path.concat(["M", x, y + i * rowHeight, "L", x + w, =
y + i * rowHeight]);=0A=
        }=0A=
        for (var i =3D 1; i < wv; i++) {=0A=
            path =3D path.concat(["M", x + i * columnWidth, y, "L", x + =
i * columnWidth, y + h]);=0A=
        }=0A=
        return this.path({stroke: color, "stroke-width": 1}, =
path.join(","));=0A=
    };=0A=
    paper.pathfinder =3D function (p, path) {=0A=
        var commands =3D {=0A=
            M: function (x, y) {=0A=
                this.moveTo(x, y);=0A=
            },=0A=
            C: function (x1, y1, x2, y2, x3, y3) {=0A=
                this.curveTo(x1, y1, x2, y2, x3, y3);=0A=
            },=0A=
            Q: function (x1, y1, x2, y2) {=0A=
                this.qcurveTo(x1, y1, x2, y2);=0A=
            },=0A=
            T: function (x, y) {=0A=
                this.qcurveTo(x, y);=0A=
            },=0A=
            S: function (x1, y1, x2, y2) {=0A=
                p.curveTo(x1, y1, x2, y2);=0A=
            },=0A=
            L: function (x, y) {=0A=
                p.lineTo(x, y);=0A=
            },=0A=
            H: function (x) {=0A=
                this.lineTo(x, this.last.y);=0A=
            },=0A=
            V: function (y) {=0A=
                this.lineTo(this.last.x, y);=0A=
            },=0A=
            A: function (rx, ry, xaxisrotation, largearcflag, sweepflag, =
x, y) {=0A=
                this.arcTo(rx, ry, largearcflag, sweepflag, x, y);=0A=
            },=0A=
            Z: function () {=0A=
                this.andClose();=0A=
            }=0A=
        };=0A=
=0A=
        path =3D pathToAbsolute(path);=0A=
        for (var i =3D 0, ii =3D path.length; i < ii; i++) {=0A=
            var b =3D path[i].shift();=0A=
            commands[b].apply(p, path[i]);=0A=
            path[i].unshift(b);=0A=
        }=0A=
    };=0A=
    paper.set =3D function (itemsArray) {=0A=
        return new Set(itemsArray);=0A=
    };=0A=
    paper.setSize =3D setSize;=0A=
    Element.prototype.stop =3D function () {=0A=
        clearTimeout(this.animation_in_progress);=0A=
    };=0A=
    Element.prototype.scale =3D function (x, y, cx, cy) {=0A=
        if (x =3D=3D null && y =3D=3D null) {=0A=
            return {x: this._.sx, y: this._.sy, toString: function () { =
return this.x.toFixed(3) + " " + this.y.toFixed(3); }};=0A=
        }=0A=
        y =3D y || x;=0A=
        !+y && (y =3D x);=0A=
        var dx,=0A=
            dy,=0A=
            dcx,=0A=
            dcy,=0A=
            a =3D this.attrs;=0A=
        if (x !=3D 0) {=0A=
            var bb =3D this.type =3D=3D "path" ? pathDimensions(a.path) =
: this.getBBox(),=0A=
                rcx =3D bb.x + bb.width / 2,=0A=
                rcy =3D bb.y + bb.height / 2,=0A=
                kx =3D x / this._.sx,=0A=
                ky =3D y / this._.sy;=0A=
            cx =3D (+cx || cx =3D=3D 0) ? cx : rcx;=0A=
            cy =3D (+cy || cy =3D=3D 0) ? cy : rcy;=0A=
            var dirx =3D Math.round(x / Math.abs(x)),=0A=
                diry =3D Math.round(y / Math.abs(y)),=0A=
                s =3D this.node.style,=0A=
                ncx =3D cx + (rcx - cx) * dirx * kx,=0A=
                ncy =3D cy + (rcy - cy) * diry * ky;=0A=
            switch (this.type) {=0A=
                case "rect":=0A=
                case "image":=0A=
                    var neww =3D a.width * dirx * kx,=0A=
                        newh =3D a.height * diry * ky,=0A=
                        newx =3D ncx - neww / 2,=0A=
                        newy =3D ncy - newh / 2;=0A=
                    this.attr({=0A=
                        width: neww,=0A=
                        height: newh,=0A=
                        x: newx,=0A=
                        y: newy=0A=
                    });=0A=
                    break;=0A=
                case "circle":=0A=
                case "ellipse":=0A=
                    this.attr({=0A=
                        rx: a.rx * kx,=0A=
                        ry: a.ry * ky,=0A=
                        r: a.r * kx,=0A=
                        cx: ncx,=0A=
                        cy: ncy=0A=
                    });=0A=
                    break;=0A=
                case "path":=0A=
                    var path =3D pathToRelative(a.path),=0A=
                        skip =3D true;=0A=
                    for (var i =3D 0, ii =3D path.length; i < ii; i++) {=0A=
                        var p =3D path[i];=0A=
                        if (p[0].toUpperCase() =3D=3D "M" && skip) {=0A=
                            continue;=0A=
                        } else {=0A=
                            skip =3D false;=0A=
                        }=0A=
                        if (R.svg && p[0].toUpperCase() =3D=3D "A") {=0A=
                            p[path[i].length - 2] *=3D kx;=0A=
                            p[path[i].length - 1] *=3D ky;=0A=
                            p[1] *=3D kx;=0A=
                            p[2] *=3D ky;=0A=
                            p[5] =3D +(dirx + diry ? !!+p[5] : !+p[5]);=0A=
                        } else {=0A=
                            for (var j =3D 1, jj =3D p.length; j < jj; =
j++) {=0A=
                                p[j] *=3D (j % 2) ? kx : ky;=0A=
                            }=0A=
                        }=0A=
                    }=0A=
                    var dim2 =3D pathDimensions(path),=0A=
                        dx =3D ncx - dim2.x - dim2.width / 2,=0A=
                        dy =3D ncy - dim2.y - dim2.height / 2;=0A=
                    path =3D pathToRelative(path);=0A=
                    path[0][1] +=3D dx;=0A=
                    path[0][2] +=3D dy;=0A=
                    =0A=
                    this.attr({path: path.join(" ")});=0A=
                break;=0A=
            }=0A=
            if (this.type in {text: 1, image:1} && (dirx !=3D 1 || diry =
!=3D 1)) {=0A=
                if (this.transformations) {=0A=
                    this.transformations[2] =3D "scale(".concat(dirx, =
",", diry, ")");=0A=
                    this.node.setAttribute("transform", =
this.transformations.join(" "));=0A=
                    dx =3D (dirx =3D=3D -1) ? -a.x - (neww || 0) : a.x;=0A=
                    dy =3D (diry =3D=3D -1) ? -a.y - (newh || 0) : a.y;=0A=
                    this.attr({x: dx, y: dy});=0A=
                    a.fx =3D dirx - 1;=0A=
                    a.fy =3D diry - 1;=0A=
                } else {=0A=
                    this.node.filterMatrix =3D " =
progid:DXImageTransform.Microsoft.Matrix(M11=3D".concat(dirx,=0A=
                        ", M12=3D0, M21=3D0, M22=3D", diry,=0A=
                        ", Dx=3D0, Dy=3D0, sizingmethod=3D'auto expand', =
filtertype=3D'bilinear')");=0A=
                    s.filter =3D (this.node.filterMatrix || "") + =
(this.node.filterOpacity || "");=0A=
                }=0A=
            } else {=0A=
                if (this.transformations) {=0A=
                    this.transformations[2] =3D "";=0A=
                    this.node.setAttribute("transform", =
this.transformations.join(" "));=0A=
                    a.fx =3D 0;=0A=
                    a.fy =3D 0;=0A=
                } else {=0A=
                    this.node.filterMatrix =3D "";=0A=
                    s.filter =3D (this.node.filterMatrix || "") + =
(this.node.filterOpacity || "");=0A=
                }=0A=
            }=0A=
            a.scale =3D [x, y, cx, cy].join(" ");=0A=
            this._.sx =3D x;=0A=
            this._.sy =3D y;=0A=
        }=0A=
        return this;=0A=
    };=0A=
=0A=
    R.easing_formulas =3D {=0A=
        linear: function (n) {=0A=
            return n;=0A=
        },=0A=
        "<": function (n) {=0A=
            return Math.pow(n, 3);=0A=
        },=0A=
        ">": function (n) {=0A=
            return Math.pow(n - 1, 3) + 1;=0A=
        },=0A=
        "<>": function (n) {=0A=
            n =3D n * 2;=0A=
            if (n < 1) {=0A=
                return Math.pow(n, 3) / 2;=0A=
            }=0A=
            n -=3D 2;=0A=
            return (Math.pow(n, 3) + 2) / 2;=0A=
        },=0A=
        backIn: function (n) {=0A=
            var s =3D 1.70158;=0A=
            return Math.pow(n, 2) * ((s + 1) * n - s);=0A=
        },=0A=
        backOut: function (n) {=0A=
            n =3D n - 1;=0A=
            var s =3D 1.70158;=0A=
            return Math.pow(n, 2) * ((s + 1) * n + s) + 1;=0A=
        },=0A=
        elastic: function (n) {=0A=
            if (n =3D=3D 0 || n =3D=3D 1) {=0A=
                return n;=0A=
            }=0A=
            var p =3D .3,=0A=
                s =3D p / 4;=0A=
            return Math.pow(2, -10 * n) * Math.sin((n - s) * (2 * =
Math.PI) / p) + 1;=0A=
        },=0A=
        bounce: function (n) {=0A=
            var s =3D 7.5625,=0A=
                p =3D 2.75,=0A=
                l;=0A=
            if (n < (1 / p)) {=0A=
                l =3D s * Math.pow(n, 2);=0A=
            } else {=0A=
                if (n < (2 / p)) {=0A=
                    n -=3D (1.5 / p);=0A=
                    l =3D s * Math.pow(n, 2) + .75;=0A=
                } else {=0A=
                    if (n < (2.5 / p)) {=0A=
                        n -=3D (2.25 / p);=0A=
                        l =3D s * Math.pow(n, 2) + .9375;=0A=
                    } else {=0A=
                        n -=3D (2.625 / p);=0A=
                        l =3D s * Math.pow(n, 2) + .984375;=0A=
                    }=0A=
                }=0A=
            }=0A=
            return l;=0A=
        }=0A=
    };=0A=
=0A=
    // animation easing formulas=0A=
    R.easing =3D function(easing, n) {=0A=
        return R.easing_formulas[easing] ? R.easing_formulas[easing](n) =
: n;=0A=
    };=0A=
=0A=
    Element.prototype.animate =3D function (params, ms, easing, =
callback) {=0A=
        clearTimeout(this.animation_in_progress);=0A=
        if (typeof easing =3D=3D "function" || !easing) {=0A=
            callback =3D easing || null;=0A=
            easing =3D "linear";=0A=
        }=0A=
        var from =3D {},=0A=
            to =3D {},=0A=
            diff =3D {},=0A=
            t =3D {x: 0, y: 0};=0A=
        for (var attr in params) {=0A=
            if (attr in availableAnimAttrs) {=0A=
                from[attr] =3D this.attr(attr);=0A=
                (typeof from[attr] =3D=3D "undefined") && (from[attr] =
=3D availableAttrs[attr]);=0A=
                to[attr] =3D params[attr];=0A=
                switch (availableAnimAttrs[attr]) {=0A=
                    case "number":=0A=
                        diff[attr] =3D (to[attr] - from[attr]) / ms;=0A=
                        break;=0A=
                    case "colour":=0A=
                        from[attr] =3D R.getRGB(from[attr]);=0A=
                        var toColour =3D R.getRGB(to[attr]);=0A=
                        diff[attr] =3D {=0A=
                            r: (toColour.r - from[attr].r) / ms,=0A=
                            g: (toColour.g - from[attr].g) / ms,=0A=
                            b: (toColour.b - from[attr].b) / ms=0A=
                        };=0A=
                        break;=0A=
                    case "path":=0A=
                        var pathes =3D pathEqualiser(from[attr], =
to[attr]);=0A=
                        from[attr] =3D pathes[0];=0A=
                        to[attr] =3D pathes[1];=0A=
                        diff[attr] =3D [];=0A=
                        for (var i =3D 0, ii =3D from[attr].length; i < =
ii; i++) {=0A=
                            diff[attr][i] =3D [0];=0A=
                            for (var j =3D 1, jj =3D =
from[attr][i].length; j < jj; j++) {=0A=
                                diff[attr][i][j] =3D (to[attr][i][j] - =
from[attr][i][j]) / ms;=0A=
                            }=0A=
                        }=0A=
                        break;=0A=
                    case "csv":=0A=
                        var values =3D (params[attr] + =
"").split(separator),=0A=
                            from2 =3D (from[attr] + "").split(separator);=0A=
                        switch (attr) {=0A=
                            case "translation":=0A=
                                from[attr] =3D [0, 0];=0A=
                                diff[attr] =3D [values[0] / ms, =
values[1] / ms];=0A=
                            break;=0A=
                            case "rotation":=0A=
                                from[attr] =3D (from2[1] =3D=3D =
values[1] && from2[2] =3D=3D values[2]) ? from2 : [0, values[1], =
values[2]];=0A=
                                diff[attr] =3D [(values[0] - =
from[attr][0]) / ms, 0, 0];=0A=
                            break;=0A=
                            case "scale":=0A=
                                params[attr] =3D values;=0A=
                                from[attr] =3D (from[attr] + =
"").split(separator);=0A=
                                diff[attr] =3D [(values[0] - =
from[attr][0]) / ms, (values[1] - from[attr][1]) / ms, 0, 0];=0A=
                        }=0A=
                        to[attr] =3D values;=0A=
                }=0A=
            }=0A=
        }=0A=
        var start =3D +new Date,=0A=
            prev =3D 0,=0A=
            that =3D this;=0A=
        (function tick() {=0A=
            var time =3D new Date - start,=0A=
                set =3D {},=0A=
                now;=0A=
            if (time < ms) {=0A=
                pos =3D R.easing(easing, time / ms);=0A=
                for (var attr in from) {=0A=
                    switch (availableAnimAttrs[attr]) {=0A=
                        case "number":=0A=
                            now =3D +from[attr] + pos * ms * diff[attr];=0A=
                            break;=0A=
                        case "colour":=0A=
                            now =3D "rgb(" + [=0A=
                                Math.round(from[attr].r + pos * ms * =
diff[attr].r),=0A=
                                Math.round(from[attr].g + pos * ms * =
diff[attr].g),=0A=
                                Math.round(from[attr].b + pos * ms * =
diff[attr].b)=0A=
                            ].join(",") + ")";=0A=
                            break;=0A=
                        case "path":=0A=
                            now =3D [];=0A=
                            for (var i =3D 0, ii =3D from[attr].length; =
i < ii; i++) {=0A=
                                now[i] =3D [from[attr][i][0]];=0A=
                                for (var j =3D 1, jj =3D =
from[attr][i].length; j < jj; j++) {=0A=
                                    now[i][j] =3D from[attr][i][j] + pos =
* ms * diff[attr][i][j];=0A=
                                }=0A=
                                now[i] =3D now[i].join(" ");=0A=
                            }=0A=
                            now =3D now.join(" ");=0A=
                            break;=0A=
                        case "csv":=0A=
                            switch (attr) {=0A=
                                case "translation":=0A=
                                    var x =3D diff[attr][0] * (time - =
prev),=0A=
                                        y =3D diff[attr][1] * (time - =
prev);=0A=
                                    t.x +=3D x;=0A=
                                    t.y +=3D y;=0A=
                                    now =3D [x, y].join(" ");=0A=
                                break;=0A=
                                case "rotation":=0A=
                                    now =3D +from[attr][0] + pos * ms * =
diff[attr][0];=0A=
                                    from[attr][1] && (now +=3D "," + =
from[attr][1] + "," + from[attr][2]);=0A=
                                break;=0A=
                                case "scale":=0A=
                                    now =3D [+from[attr][0] + pos * ms * =
diff[attr][0], +from[attr][1] + pos * ms * diff[attr][1], (2 in =
params[attr] ? params[attr][2] : ""), (3 in params[attr] ? =
params[attr][3] : "")].join(" ");=0A=
                            }=0A=
                            break;=0A=
                    }=0A=
                    if (attr =3D=3D "font-size") {=0A=
                        set[attr] =3D now + "px";=0A=
                    } else {=0A=
                        set[attr] =3D now;=0A=
                    }=0A=
                }=0A=
                that.attr(set);=0A=
                that.animation_in_progress =3D setTimeout(tick);=0A=
                R.svg && paper.safari();=0A=
            } else {=0A=
                (t.x || t.y) && that.translate(-t.x, -t.y);=0A=
                that.attr(params);=0A=
                clearTimeout(that.animation_in_progress);=0A=
                paper.safari();=0A=
                (typeof callback =3D=3D "function") && =
callback.call(that);=0A=
            }=0A=
            prev =3D time;=0A=
        })();=0A=
        return this;=0A=
    };=0A=
    Element.prototype.translate =3D function (x, y) {=0A=
        if (x =3D=3D null) {=0A=
            return {x: this._.tx, y: this._.ty};=0A=
        }=0A=
        this._.tx +=3D +x;=0A=
        this._.ty +=3D +y;=0A=
        switch (this.type) {=0A=
            case "circle":=0A=
            case "ellipse":=0A=
                this.attr({cx: +x + this.attrs.cx, cy: +y + =
this.attrs.cy});=0A=
                break;=0A=
            case "rect":=0A=
            case "image":=0A=
            case "text":=0A=
                this.attr({x: +x + this.attrs.x, y: +y + this.attrs.y});=0A=
                break;=0A=
            case "path":=0A=
                var path =3D pathToRelative(this.attrs.path);=0A=
                path[0][1] +=3D +x;=0A=
                path[0][2] +=3D +y;=0A=
                this.attr({path: path.join(" ")});=0A=
            break;=0A=
        }=0A=
        return this;=0A=
    };=0A=
=0A=
    // Set=0A=
    var Set =3D function (items) {=0A=
        this.items =3D [];=0A=
        this.length =3D 0;=0A=
        if (items) {=0A=
            for (var i =3D 0, ii =3D items.length; i < ii; i++) {=0A=
                if (items[i] && (items[i].constructor =3D=3D Element || =
items[i].constructor =3D=3D Set)) {=0A=
                    this[this.items.length] =3D =
this.items[this.items.length] =3D items[i];=0A=
                    this.length++;=0A=
                }=0A=
            }=0A=
        }=0A=
    };=0A=
    Set.prototype.push =3D function () {=0A=
        var item,=0A=
            len;=0A=
        for (var i =3D 0, ii =3D arguments.length; i < ii; i++) {=0A=
            item =3D arguments[i];=0A=
            if (item && (item.constructor =3D=3D Element || =
item.constructor =3D=3D Set)) {=0A=
                len =3D this.items.length;=0A=
                this[len] =3D this.items[len] =3D item;=0A=
                this.length++;=0A=
            }=0A=
        }=0A=
        return this;=0A=
    };=0A=
    Set.prototype.pop =3D function (id) {=0A=
        var res =3D this.items.splice(id, 1)[0];=0A=
        for (var j =3D id, jj =3D this.items.length; j < jj; j++) {=0A=
            this[j] =3D this[j + 1];=0A=
        }=0A=
        delete this[jj + 1];=0A=
        this.length--;=0A=
        return res;=0A=
    };=0A=
    for (var method in Element.prototype) {=0A=
        Set.prototype[method] =3D (function (methodname) {=0A=
            return function () {=0A=
                for (var i =3D 0, ii =3D this.items.length; i < ii; i++) =
{=0A=
                    this.items[i][methodname].apply(this.items[i], =
arguments);=0A=
                }=0A=
                return this;=0A=
            };=0A=
        })(method);=0A=
    }=0A=
    Set.prototype.attr =3D function (name, value) {=0A=
        if (name && R.isArray(name) && typeof name[0] =3D=3D "object") {=0A=
            for (var j =3D 0, jj =3D name.length; j < jj; j++) {=0A=
                this.items[j].attr(name[j]);=0A=
            }=0A=
        } else {=0A=
            for (var i =3D 0, ii =3D this.items.length; i < ii; i++) {=0A=
                this.items[i].attr.apply(this.items[i], arguments);=0A=
            }=0A=
        }=0A=
        return this;=0A=
    };=0A=
    =0A=
    Set.prototype.getBBox =3D function () {=0A=
        var x =3D [],=0A=
            y =3D [],=0A=
            w =3D [],=0A=
            h =3D [];=0A=
        for (var i =3D this.items.length; i--;) {=0A=
            var box =3D this.items[i].getBBox();=0A=
            x.push(box.x);=0A=
            y.push(box.y);=0A=
            w.push(box.x + box.width);=0A=
            h.push(box.y + box.height);=0A=
        }=0A=
        x =3D Math.min.apply(Math, x);=0A=
        y =3D Math.min.apply(Math, y);=0A=
        return {=0A=
            x: x,=0A=
            y: y,=0A=
            width: Math.max.apply(Math, w) - x,=0A=
            height: Math.max.apply(Math, h) - y=0A=
        };=0A=
    };=0A=
=0A=
    R.registerFont =3D function (font) {=0A=
        if (!font.face) {=0A=
            return font;=0A=
        }=0A=
        this.fonts =3D this.fonts || {};=0A=
        var fontcopy =3D {=0A=
                w: font.w,=0A=
                face: {},=0A=
                glyphs: {}=0A=
            },=0A=
            family =3D font.face["font-family"];=0A=
        for (var prop in font.face) {=0A=
            fontcopy.face[prop] =3D font.face[prop];=0A=
        }=0A=
        if (this.fonts[family]) {=0A=
            this.fonts[family].push(fontcopy);=0A=
        } else {=0A=
            this.fonts[family] =3D [fontcopy];=0A=
        }=0A=
        if (!font.svg) {=0A=
            fontcopy.face["units-per-em"] =3D =
parseInt(font.face["units-per-em"], 10);=0A=
            for (var glyph in font.glyphs) {=0A=
                var path =3D font.glyphs[glyph];=0A=
                fontcopy.glyphs[glyph] =3D {=0A=
                    w: path.w,=0A=
                    k: {},=0A=
                    d: path.d && "M" + path.d.replace(/[mlcxtrv]/g, =
function (command) {=0A=
                            return {l: "L", c: "C", x: "z", t: "m", r: =
"l", v: "c"}[command] || "M";=0A=
                        }) + "z"=0A=
                };=0A=
                if (path.k) {=0A=
                    for (var k in path.k) {=0A=
                        fontcopy.glyphs[glyph].k[k] =3D path.k[k];=0A=
                    }=0A=
                }=0A=
            }=0A=
        }=0A=
        return font;=0A=
    };=0A=
    paper.getFont =3D function (family, weight, style, stretch) {=0A=
        stretch =3D stretch || "normal";=0A=
        style =3D style || "normal";=0A=
        weight =3D +weight || {normal: 400, bold: 700, lighter: 300, =
bolder: 800}[weight] || 400;=0A=
        var font =3D R.fonts[family];=0A=
        if (!font) {=0A=
            var name =3D new RegExp("(^|\\s)" + =
family.replace(/[^\w\d\s+!~.:_-]/g, "") + "(\\s|$)", "i");=0A=
            for (var fontName in R.fonts) {=0A=
                if (name.test(fontName)) {=0A=
                    font =3D R.fonts[fontName];=0A=
                    break;=0A=
                }=0A=
            }=0A=
        }=0A=
        var thefont;=0A=
        if (font) {=0A=
            for (var i =3D 0, ii =3D font.length; i < ii; i++) {=0A=
                thefont =3D font[i];=0A=
                if (thefont.face["font-weight"] =3D=3D weight && =
(thefont.face["font-style"] =3D=3D style || !thefont.face["font-style"]) =
&& thefont.face["font-stretch"] =3D=3D stretch) {=0A=
                    break;=0A=
                }=0A=
            }=0A=
        }=0A=
        return thefont;=0A=
    };=0A=
    paper.print =3D function (x, y, string, font, size) {=0A=
        var out =3D this.set(),=0A=
            letters =3D (string + "").split(""),=0A=
            shift =3D 0,=0A=
            path =3D "",=0A=
            scale;=0A=
        if (font) {=0A=
            scale =3D (size || 16) / font.face["units-per-em"];=0A=
            for (var i =3D 0, ii =3D letters.length; i < ii; i++) {=0A=
                var prev =3D i && font.glyphs[letters[i - 1]] || {},=0A=
                    curr =3D font.glyphs[letters[i]];=0A=
                shift +=3D i ? (prev.w || font.w) + (prev.k && =
prev.k[letters[i]] || 0) : 0;=0A=
                curr && curr.d && out.push(this.path({fill: "#000", =
stroke: "none"}, curr.d).translate(shift, 0));=0A=
            }=0A=
            out.scale(scale, scale, 0, y).translate(x, (size || 16) / 2);=0A=
        }=0A=
        return out;=0A=
    };=0A=
=0A=
    R.ninja =3D function () {=0A=
        var r =3D window.Raphael;=0A=
        if (oldRaphael.was) {=0A=
            window.Raphael =3D oldRaphael.is;=0A=
        } else {=0A=
            try {=0A=
                delete window.Raphael;=0A=
            } catch (e) {=0A=
                window.Raphael =3D void(0);=0A=
            }=0A=
        }=0A=
        return r;=0A=
    };=0A=
    R.el =3D Element.prototype;=0A=
    return R;=0A=
})();
------=_NextPart_000_000F_01CA45DE.2B862BB0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://localhost:3000/javascripts/application.js?1253859600

// Place your application-specific JavaScript functions and classes here=0A=
// This file is automatically included by javascript_include_tag =
:defaults=0A=

------=_NextPart_000_000F_01CA45DE.2B862BB0--
